{"ast":null,"code":"import _asyncToGenerator from \"D:/Angular Dev/HR_EMS/EMS/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../Services/AuthService\";\nexport class AuthGuard {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n  }\n\n  canActivate(next, state) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const isAuthenticated = yield _this.authService.isAuthenticated();\n\n      if (!isAuthenticated) {\n        // Token is expired or not present, redirect to login page\n        return _this.router.parseUrl('/login');\n      } // Token is valid, allow navigation\n\n\n      return true;\n    })();\n  }\n\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\n\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAAsBA,sBAAtB,EAA8CC,mBAA9C,EAAmEC,MAAnE,EAA2EC,OAA3E,QAA0F,iBAA1F;;;;AAOA,OAAM,MAAOC,SAAP,CAAgB;EAEpBC,YAAoBC,MAApB,EAA4CC,WAA5C,EAAoE;IAAhD;IAAwB;EAA4B;;EAElEC,WAAW,CACfC,IADe,EAEfC,KAFe,EAEW;IAAA;;IAAA;MAE1B,MAAMC,eAAe,SAAS,KAAI,CAACJ,WAAL,CAAiBI,eAAjB,EAA9B;;MAEA,IAAI,CAACA,eAAL,EAAsB;QACpB;QACA,OAAO,KAAI,CAACL,MAAL,CAAYM,QAAZ,CAAqB,QAArB,CAAP;MACD,CAPyB,CAS1B;;;MACA,OAAO,IAAP;IAV0B;EAW3B;;AAjBmB;;;mBAATR,WAASS;AAAA;;;SAATT;EAASU,SAATV,SAAS;EAAAW,YAFR","names":["ActivatedRouteSnapshot","RouterStateSnapshot","Router","UrlTree","AuthGuard","constructor","router","authService","canActivate","next","state","isAuthenticated","parseUrl","i0","factory","providedIn"],"sourceRoot":"","sources":["D:\\Angular Dev\\HR_EMS\\EMS\\ClientApp\\src\\app\\shared\\AuthGuard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../Services/AuthService';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  async canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\r\n\r\n    const isAuthenticated = await this.authService.isAuthenticated();\r\n\r\n    if (!isAuthenticated) {\r\n      // Token is expired or not present, redirect to login page\r\n      return this.router.parseUrl('/login');\r\n    }\r\n\r\n    // Token is valid, allow navigation\r\n    return true;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}