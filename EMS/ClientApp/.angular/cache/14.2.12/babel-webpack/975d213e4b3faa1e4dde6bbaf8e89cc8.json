{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/LeaveNature\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction LeaveNatureDropdownComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const leaveNature_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", leaveNature_r2.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(leaveNature_r2.label);\n  }\n}\n\nfunction LeaveNatureDropdownComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \" Leave Nature is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LeaveNatureDropdownComponent = /*#__PURE__*/(() => {\n  class LeaveNatureDropdownComponent {\n    constructor(leaveNatureService) {\n      this.leaveNatureService = leaveNatureService;\n      this.leaveNatures = [];\n      this.leaveNatureControl = new FormControl('', Validators.required);\n    }\n\n    ngOnInit() {\n      this.loadLeaveTypes();\n      this.parentForm.addControl('leaveType', this.leaveNatureControl); // Add the control to the parent form\n    }\n\n    loadLeaveTypes() {\n      this.leaveNatureService.getLeaveNatures().subscribe(data => {\n        this.leaveNatures = data;\n      });\n    }\n\n  }\n\n  LeaveNatureDropdownComponent.ɵfac = function LeaveNatureDropdownComponent_Factory(t) {\n    return new (t || LeaveNatureDropdownComponent)(i0.ɵɵdirectiveInject(i1.LeaveNatureService));\n  };\n\n  LeaveNatureDropdownComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LeaveNatureDropdownComponent,\n    selectors: [[\"leave-nature-dropdown\"]],\n    inputs: {\n      parentForm: \"parentForm\"\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"form-group\"], [\"for\", \"leaveNature\"], [\"id\", \"leaveNature\", 1, \"form-control\", 3, \"formControl\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [3, \"value\"], [1, \"text-danger\"]],\n    template: function LeaveNatureDropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1)(2, \"b\");\n        i0.ɵɵtext(3, \"Leave Nature\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"select\", 2)(5, \"option\", 3);\n        i0.ɵɵtext(6, \"Select Leave Nature\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, LeaveNatureDropdownComponent_option_7_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, LeaveNatureDropdownComponent_div_8_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.leaveNatureControl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.leaveNatures);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.leaveNatureControl.invalid && ctx.leaveNatureControl.touched);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.FormControlDirective]\n  });\n  return LeaveNatureDropdownComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}