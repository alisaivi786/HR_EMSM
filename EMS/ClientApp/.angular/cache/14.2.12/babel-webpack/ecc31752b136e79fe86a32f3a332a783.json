{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Directive, EventEmitter, Input, Output, ContentChildren, forwardRef, Inject, Optional, Host, Component, ViewEncapsulation, inject, ApplicationRef, ElementRef, TemplateRef, ContentChild, NgModule, ChangeDetectionStrategy, PLATFORM_ID, LOCALE_ID, ViewChild, Injector, EnvironmentInjector, createComponent, Attribute, ViewChildren, HostBinding, ChangeDetectorRef, NgZone, DestroyRef, InjectionToken } from '@angular/core';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share, finalize } from 'rxjs/operators';\nimport { NgFor, NgTemplateOutlet, NgIf, isPlatformBrowser, getLocaleMonthNames, FormStyle, TranslationWidth, getLocaleDayNames, formatDate, DOCUMENT, PercentPipe, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", panel_r3.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\n\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"ngbRef\", function NgbAccordion_ng_template_2_div_3_Template_div_ngbRef_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const panel_r5 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(panel_r5.panelDiv = $event);\n    });\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    i0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef) || null);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\n\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const panel_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassMap(\"accordion-item \" + (panel_r5.cardClass || \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"accordion-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    i0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen || panel_r5.transitionRunning);\n  }\n}\n\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c3 = [\"*\"];\n\nfunction NgbCarousel_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const slide_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      ctx_r5.focus();\n      return i0.ɵɵresetView(ctx_r5.select(slide_r4.id, ctx_r5.NgbSlideEventSource.INDICATOR));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", slide_r4.id === ctx_r0.activeId);\n    i0.ɵɵattribute(\"aria-labelledby\", \"slide-\" + slide_r4.id)(\"aria-controls\", \"slide-\" + slide_r4.id)(\"aria-selected\", slide_r4.id === ctx_r0.activeId);\n  }\n}\n\nfunction NgbCarousel_div_3_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbCarousel_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"span\", 8);\n    i0.ɵɵi18n(2, 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbCarousel_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slide_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    const c_r9 = ctx.count;\n    i0.ɵɵproperty(\"id\", \"slide-\" + slide_r7.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(i_r8 + 1)(c_r9);\n    i0.ɵɵi18nApply(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", slide_r7.tplRef);\n  }\n}\n\nfunction NgbCarousel_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.arrowLeft());\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵi18n(3, 13);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction NgbCarousel_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function NgbCarousel_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.arrowRight());\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵi18n(3, 16);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c10 = [\"ngbDatepickerDayView\", \"\"];\nconst _c11 = [\"month\"];\nconst _c12 = [\"year\"];\n\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const m_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", m_r4);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date.year));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date.year));\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const y_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", y_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\n\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    i0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.select.emit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 11);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.i18n.getMonthLabel(month_r5.firstDate), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 3, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.i18n.getWeekLabel());\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const weekday_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(weekday_r4);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    const day_r10 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const day_r10 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r10 = ctx.$implicit;\n    i0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    i0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    i0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    const week_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\n\nconst _c29 = [\"defaultDayTemplate\"];\nconst _c30 = [\"content\"];\n\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    const date_r8 = ctx.date;\n    const currentMonth_r9 = ctx.currentMonth;\n    const selected_r10 = ctx.selected;\n    const disabled_r11 = ctx.disabled;\n    const focused_r12 = ctx.focused;\n    i0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.i18n.getMonthLabel(month_r14.firstDate), \" \");\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelement(2, \"ngb-datepicker-month\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const month_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\n\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 14);\n    i0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.onNavigateEvent($event));\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.onNavigateDateSelect($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\n\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\n\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\n\nconst _c31 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nconst _c32 = [\"dialog\"];\nconst _c33 = [\"ngbNavOutlet\", \"\"];\n\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"item\", item_r1)(\"nav\", ctx_r2.nav)(\"role\", ctx_r2.paneRole);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef) || null)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c31, item_r1.active || ctx_r2.isPanelTransitioning(item_r1)));\n  }\n}\n\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 7, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom() || ctx_r0.isPanelTransitioning(item_r1));\n  }\n}\n\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 10);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 12);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵi18n(1, 13);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"...\");\n  }\n}\n\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const page_r19 = ctx.$implicit;\n    i0.ɵɵtextInterpolate(page_r19);\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template(rf, ctx) {}\n\nconst _c42 = function (a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 18);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r21 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r26 = i0.ɵɵnextContext();\n\n    const _r8 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r26.tplEllipsis == null ? null : ctx_r26.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c42, page_r21));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c43 = function (a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\n\nfunction NgbPagination_ng_template_12_li_0_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 19);\n    i0.ɵɵlistener(\"click\", function NgbPagination_ng_template_12_li_0_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const pageNumber_r25 = i0.ɵɵnextContext().$implicit;\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      ctx_r31.selectPage(pageNumber_r25);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r25 = i0.ɵɵnextContext().$implicit;\n    const ctx_r34 = i0.ɵɵnextContext();\n    const disabled_r23 = ctx_r34.disabled;\n    const page_r21 = ctx_r34.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n\n    const _r10 = i0.ɵɵreference(11);\n\n    i0.ɵɵattribute(\"tabindex\", disabled_r23 ? \"-1\" : null)(\"aria-disabled\", disabled_r23 ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplNumber == null ? null : ctx_r27.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(4, _c43, disabled_r23, pageNumber_r25, page_r21));\n  }\n}\n\nfunction NgbPagination_ng_template_12_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵtemplate(1, NgbPagination_ng_template_12_li_0_a_1_Template, 2, 4, \"a\", 16);\n    i0.ɵɵtemplate(2, NgbPagination_ng_template_12_li_0_a_2_Template, 2, 8, \"a\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pageNumber_r25 = ctx.$implicit;\n    const ctx_r36 = i0.ɵɵnextContext();\n    const page_r21 = ctx_r36.$implicit;\n    const disabled_r23 = ctx_r36.disabled;\n    const ctx_r24 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", pageNumber_r25 === page_r21)(\"disabled\", ctx_r24.isEllipsis(pageNumber_r25) || disabled_r23);\n    i0.ɵɵattribute(\"aria-current\", pageNumber_r25 === page_r21 ? \"page\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r24.isEllipsis(pageNumber_r25));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r24.isEllipsis(pageNumber_r25));\n  }\n}\n\nfunction NgbPagination_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbPagination_ng_template_12_li_0_Template, 3, 7, \"li\", 14);\n  }\n\n  if (rf & 2) {\n    const pages_r22 = ctx.pages;\n    i0.ɵɵproperty(\"ngForOf\", pages_r22);\n  }\n}\n\nfunction NgbPagination_li_15_ng_template_2_Template(rf, ctx) {}\n\nconst _c46 = function (a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 20);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_15_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      ctx_r38.selectPage(1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_15_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r14.previousDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r14.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r14.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r14.tplFirst == null ? null : ctx_r14.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r14.previousDisabled(), ctx_r14.page));\n  }\n}\n\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\n\nconst _c49 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 21);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r42);\n      const ctx_r41 = i0.ɵɵnextContext();\n      ctx_r41.selectPage(ctx_r41.page - 1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(3);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r15.previousDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r15.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.previousDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplPrevious == null ? null : ctx_r15.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c49, ctx_r15.previousDisabled()));\n  }\n}\n\nfunction NgbPagination_ng_template_17_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 22);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_18_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      const ctx_r44 = i0.ɵɵnextContext();\n      ctx_r44.selectPage(ctx_r44.page + 1);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_18_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n\n    const _r4 = i0.ɵɵreference(5);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r17.nextDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r17.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r17.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r17.tplNext == null ? null : ctx_r17.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r17.nextDisabled(), ctx_r17.page));\n  }\n}\n\nfunction NgbPagination_li_19_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"a\", 23);\n    i0.ɵɵlistener(\"click\", function NgbPagination_li_19_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      ctx_r47.selectPage(ctx_r47.pageCount);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtemplate(2, NgbPagination_li_19_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext();\n\n    const _r6 = i0.ɵɵreference(7);\n\n    i0.ɵɵclassProp(\"disabled\", ctx_r18.nextDisabled());\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"tabindex\", ctx_r18.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r18.nextDisabled() ? \"true\" : null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r18.tplLast == null ? null : ctx_r18.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(6, _c46, ctx_r18.nextDisabled(), ctx_r18.page));\n  }\n}\n\nconst _c54 = function (a0, a1, a2) {\n  return {\n    $implicit: a0,\n    pages: a1,\n    disabled: a2\n  };\n};\n\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 3);\n    i0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(2);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction NgbProgressbar_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵi18n(1, 1);\n    i0.ɵɵpipe(2, \"percent\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵi18nExp(i0.ɵɵpipeBind1(2, 1, ctx_r0.getValue() / ctx_r0.max));\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const fill_r3 = ctx.fill;\n    i0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 3);\n    i0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const index_r4 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.enter(index_r4 + 1));\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const index_r4 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleClick(index_r4 + 1));\n    });\n    i0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const index_r4 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"cursor\", ctx_r2.isInteractive() ? \"pointer\" : \"default\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\n\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.changeHour(ctx_r8.hourStep));\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 14);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.changeHour(-ctx_r10.hourStep));\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 16);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.changeMinute(ctx_r12.minuteStep));\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 17);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.changeMinute(-ctx_r14.minuteStep));\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 18);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \":\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r18.changeSecond(ctx_r18.secondStep));\n    });\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 21);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.changeSecond(-ctx_r20.secondStep));\n    });\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵi18n(3, 22);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    i0.ɵɵelementStart(2, \"input\", 20);\n    i0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.updateSecond($event.target.value));\n    })(\"blur\", function NgbTimepicker_div_13_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.handleBlur());\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.formatInput($event.target));\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      ctx_r26.changeSecond(ctx_r26.secondStep);\n      return i0.ɵɵresetView($event.preventDefault());\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.changeSecond(-ctx_r27.secondStep);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    i0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\n\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵi18n(1, 27);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵi18nExp(ctx_r28.i18n.getAfternoonPeriod());\n    i0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵi18n(0, 28);\n  }\n\n  if (rf & 2) {\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵi18nExp(ctx_r30.i18n.getMorningPeriod());\n    i0.ɵɵi18nApply(0);\n  }\n}\n\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.toggleMeridian());\n    });\n    i0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    i0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r29 = i0.ɵɵreference(4);\n\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    i0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.model && ctx_r7.model.hour >= 12)(\"ngIfElse\", _r29);\n  }\n}\n\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"strong\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\n\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    i0.ɵɵelementStart(2, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.hide());\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r3.highlightClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const part_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    i0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const isOdd_r2 = ctx.odd;\n\n    const _r4 = i0.ɵɵreference(2);\n\n    i0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n\n  if (rf & 2) {\n    const result_r3 = ctx.result;\n    const term_r4 = ctx.term;\n    const formatter_r5 = ctx.formatter;\n    i0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nconst _c87 = function (a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\n\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const idx_r7 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.markActive(idx_r7));\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const result_r6 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.select(result_r6));\n    });\n    i0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const result_r6 = ctx.$implicit;\n    const idx_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    i0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(5, _c87, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\n\nfunction toInteger(value) {\n  return parseInt(`${value}`, 10);\n}\n\nfunction toString(value) {\n  return value !== undefined && value !== null ? `${value}` : '';\n}\n\nfunction getValueInRange(value, max, min = 0) {\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isPromise(v) {\n  return v && v.then;\n}\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n  /*\n   * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n   * not support `Element.prototype.closest`. To emulate the correct behaviour\n   * we return null when the method is missing.\n   *\n   * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n   * will return the document element whilst in Edge null will be returned. This\n   * compromise was deemed good enough.\n   */\n\n\n  if (typeof element.closest === 'undefined') {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\n\n\nfunction reflow(element) {\n  return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\n\n\nfunction runInZone(zone) {\n  return source => {\n    return new Observable(observer => {\n      const next = value => zone.run(() => observer.next(value));\n\n      const error = e => zone.run(() => observer.error(e));\n\n      const complete = () => zone.run(() => observer.complete());\n\n      return source.subscribe({\n        next,\n        error,\n        complete\n      });\n    });\n  };\n}\n\nfunction removeAccents(str) {\n  return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\n\n\nfunction getActiveElement(root = document) {\n  const activeEl = root?.activeElement;\n\n  if (!activeEl) {\n    return null;\n  }\n\n  return activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\n\nfunction getTransitionDurationMs(element) {\n  const {\n    transitionDelay,\n    transitionDuration\n  } = window.getComputedStyle(element);\n  const transitionDelaySec = parseFloat(transitionDelay);\n  const transitionDurationSec = parseFloat(transitionDuration);\n  return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nconst environment = {\n  animation: true,\n  transitionTimerDelayMs: 5\n};\n\nconst noopFn = () => {};\n\nconst {\n  transitionTimerDelayMs\n} = environment;\nconst runningTransitions = new Map();\n\nconst ngbRunTransition = (zone, element, startFn, options) => {\n  // Getting initial context from options\n  let context = options.context || {}; // Checking if there are already running transitions on the given element.\n\n  const running = runningTransitions.get(element);\n\n  if (running) {\n    switch (options.runningTransition) {\n      // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n      // We're not emitting any values, but simply completing the observable (EMPTY).\n      case 'continue':\n        return EMPTY;\n      // If there is one running and we want for it to 'stop', we have to complete the running one.\n      // We're simply completing the running one and not emitting any values and merging newly provided context\n      // with the one coming from currently running transition.\n\n      case 'stop':\n        zone.run(() => running.transition$.complete());\n        context = Object.assign(running.context, context);\n        runningTransitions.delete(element);\n    }\n  } // Running the start function\n\n\n  const endFn = startFn(element, options.animation, context) || noopFn; // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n  // If animations are disabled, we have to emit a value and complete the observable\n  // In this case we have to call the end function, but can finish immediately by emitting a value,\n  // completing the observable and executing end functions synchronously.\n\n  if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n    zone.run(() => endFn());\n    return of(undefined).pipe(runInZone(zone));\n  } // Starting a new transition\n\n\n  const transition$ = new Subject();\n  const finishTransition$ = new Subject();\n  const stop$ = transition$.pipe(endWith(true));\n  runningTransitions.set(element, {\n    transition$,\n    complete: () => {\n      finishTransition$.next();\n      finishTransition$.complete();\n    },\n    context\n  });\n  const transitionDurationMs = getTransitionDurationMs(element); // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n  // because 'transitionend' event might not be fired in some browsers, if the transitioning\n  // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n  // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n  // 2. We need to filter transition end events, because they might bubble from shorter transitions\n  // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n\n  zone.runOutsideAngular(() => {\n    const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({\n      target\n    }) => target === element));\n    const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n    race(timer$, transitionEnd$, finishTransition$).pipe(takeUntil(stop$)).subscribe(() => {\n      runningTransitions.delete(element);\n      zone.run(() => {\n        endFn();\n        transition$.next();\n        transition$.complete();\n      });\n    });\n  });\n  return transition$.asObservable();\n};\n\nconst ngbCompleteTransition = element => {\n  runningTransitions.get(element)?.complete();\n};\n\nfunction measureCollapsingElementDimensionPx(element, dimension) {\n  // SSR fix for without injecting the PlatformId\n  if (typeof navigator === 'undefined') {\n    return '0px';\n  }\n\n  const {\n    classList\n  } = element;\n  const hasShownClass = classList.contains('show');\n\n  if (!hasShownClass) {\n    classList.add('show');\n  }\n\n  element.style[dimension] = '';\n  const dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n\n  if (!hasShownClass) {\n    classList.remove('show');\n  }\n\n  return dimensionSize;\n}\n\nconst ngbCollapsingTransition = (element, animation, context) => {\n  let {\n    direction,\n    maxSize,\n    dimension\n  } = context;\n  const {\n    classList\n  } = element;\n\n  function setInitialClasses() {\n    classList.add('collapse');\n\n    if (direction === 'show') {\n      classList.add('show');\n    } else {\n      classList.remove('show');\n    }\n  } // without animations we just need to set initial classes\n\n\n  if (!animation) {\n    setInitialClasses();\n    return;\n  } // No maxHeight -> running the transition for the first time\n\n\n  if (!maxSize) {\n    maxSize = measureCollapsingElementDimensionPx(element, dimension);\n    context.maxSize = maxSize; // Fix the height before starting the animation\n\n    element.style[dimension] = direction !== 'show' ? maxSize : '0px';\n    classList.remove('collapse');\n    classList.remove('collapsing');\n    classList.remove('show');\n    reflow(element); // Start the animation\n\n    classList.add('collapsing');\n  } // Start or revert the animation\n\n\n  element.style[dimension] = direction === 'show' ? maxSize : '0px';\n  return () => {\n    setInitialClasses();\n    classList.remove('collapsing');\n    element.style[dimension] = '';\n  };\n};\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\n\n\nclass NgbConfig {\n  constructor() {\n    this.animation = environment.animation;\n  }\n\n  static #_ = this.ɵfac = function NgbConfig_Factory(t) {\n    return new (t || NgbConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbConfig,\n    factory: NgbConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n\n\nclass NgbAccordionConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.closeOthers = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionConfig_Factory(t) {\n    return new (t || NgbAccordionConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbAccordionConfig,\n    factory: NgbAccordionConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/* eslint-disable deprecation/deprecation */\n\n\nlet nextId$4 = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n * @deprecated 14.1.0\n */\n\nclass NgbPanelHeader {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPanelHeader_Factory(t) {\n    return new (t || NgbPanelHeader)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPanelHeader,\n    selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n *\n * @deprecated 14.1.0\n */\n\n\nclass NgbPanelTitle {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPanelTitle_Factory(t) {\n    return new (t || NgbPanelTitle)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPanelTitle,\n    selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps the accordion panel content.\n *\n * @deprecated 14.1.0\n */\n\n\nclass NgbPanelContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPanelContent_Factory(t) {\n    return new (t || NgbPanelContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPanelContent,\n    selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n *\n * @deprecated 14.1.0\n */\n\n\nclass NgbPanel {\n  constructor() {\n    /**\n     *  If `true`, the panel is disabled an can't be toggled.\n     */\n    this.disabled = false;\n    /**\n     *  An optional id for the panel that must be unique on the page.\n     *\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n     */\n\n    this.id = `ngb-panel-${nextId$4++}`;\n    this.isOpen = false;\n    /* A flag to specified that the transition panel classes have been initialized */\n\n    this.initClassDone = false;\n    /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n\n    this.transitionRunning = false;\n    /**\n     * An event emitted when the panel is shown, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the panel is hidden, after the transition. It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  static #_ = this.ɵfac = function NgbPanel_Factory(t) {\n    return new (t || NgbPanel)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPanel,\n    selectors: [[\"ngb-panel\"]],\n    contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, 4);\n        i0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, 4);\n        i0.ɵɵcontentQuery(dirIndex, NgbPanelContent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      id: \"id\",\n      title: \"title\",\n      type: \"type\",\n      cardClass: \"cardClass\"\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel',\n      standalone: true\n    }]\n  }], null, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n\nclass NgbRefDirective {\n  constructor(_El) {\n    this._El = _El;\n    this.ngbRef = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.ngbRef.emit(this._El.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.ngbRef.emit(null);\n  }\n\n  static #_ = this.ɵfac = function NgbRefDirective_Factory(t) {\n    return new (t || NgbRefDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbRefDirective,\n    selectors: [[\"\", \"ngbRef\", \"\"]],\n    outputs: {\n      ngbRef: \"ngbRef\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRef]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    ngbRef: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n * @deprecated 14.1.0\n */\n\n\nclass NgbPanelToggle {\n  set ngbPanelToggle(panel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(accordion, panel) {\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n\n  static #_ = this.ɵfac = function NgbPanelToggle_Factory(t) {\n    return new (t || NgbPanelToggle)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordion)), i0.ɵɵdirectiveInject(NgbPanel, 9));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPanelToggle,\n    selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n    hostAttrs: [\"type\", \"button\"],\n    hostVars: 5,\n    hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n          return ctx.accordion.toggle(ctx.panel.id);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n        i0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n        i0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n      }\n    },\n    inputs: {\n      ngbPanelToggle: \"ngbPanelToggle\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      standalone: true,\n      host: {\n        type: 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordion)]\n      }]\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n *\n * @deprecated 14.1.0\n */\n\n\nclass NgbAccordion {\n  constructor(config, _ngZone, _changeDetector) {\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    /**\n     * An array or comma separated strings of panel ids that should be opened **initially**.\n     *\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n     * the `(panelChange)` event.\n     */\n\n    this.activeIds = [];\n    /**\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n     */\n\n    this.destroyOnHide = true;\n    /**\n     * Event emitted right before the panel toggle happens.\n     *\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n     */\n\n    this.panelChange = new EventEmitter();\n    /**\n     * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n     * The payload is the panel id.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n\n\n  isExpanded(panelId) {\n    return this.activeIds.indexOf(panelId) > -1;\n  }\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n\n\n  expand(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), true);\n  }\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n\n\n  expandAll() {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n\n\n  collapse(panelId) {\n    this._changeOpenState(this._findPanelById(panelId), false);\n  }\n  /**\n   * Collapses all opened panels.\n   */\n\n\n  collapseAll() {\n    this.panels.forEach(panel => {\n      this._changeOpenState(panel, false);\n    });\n  }\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n\n\n  toggle(panelId) {\n    const panel = this._findPanelById(panelId);\n\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    } // update panels open states\n\n\n    this.panels.forEach(panel => {\n      panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1;\n    }); // closeOthers updates\n\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0], false);\n\n      this._updateActiveIds();\n    } // Setup the initial classes here\n\n\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.panels.forEach(panel => {\n        const panelElement = panel.panelDiv;\n\n        if (panelElement) {\n          if (!panel.initClassDone) {\n            panel.initClassDone = true;\n            ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n              animation: false,\n              runningTransition: 'continue',\n              context: {\n                direction: panel.isOpen ? 'show' : 'hide',\n                dimension: 'height'\n              }\n            });\n          }\n        } else {\n          // Classes must be initialized next time it will be in the dom\n          panel.initClassDone = false;\n        }\n      });\n    });\n  }\n\n  _changeOpenState(panel, nextState) {\n    if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n      this.panelChange.emit({\n        panelId: panel.id,\n        nextState: nextState,\n        preventDefault: () => {\n          defaultPrevented = true;\n        }\n      });\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n        panel.transitionRunning = true;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n\n        this._updateActiveIds();\n\n        this._runTransitions(this.animation);\n      }\n    }\n  }\n\n  _closeOthers(panelId, enableTransition = true) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId && panel.isOpen) {\n        panel.isOpen = false;\n        panel.transitionRunning = enableTransition;\n      }\n    });\n  }\n\n  _findPanelById(panelId) {\n    return this.panels.find(p => p.id === panelId) || null;\n  }\n\n  _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n\n  _runTransitions(animation) {\n    // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n    // before starting the animation\n    this._changeDetector.detectChanges();\n\n    this.panels.forEach(panel => {\n      // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n      // The direction (show or hide) is choosen by each panel.isOpen state\n      if (panel.transitionRunning) {\n        const panelElement = panel.panelDiv;\n        ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n          animation,\n          runningTransition: 'stop',\n          context: {\n            direction: panel.isOpen ? 'show' : 'hide',\n            dimension: 'height'\n          }\n        }).subscribe(() => {\n          panel.transitionRunning = false;\n          const {\n            id\n          } = panel;\n\n          if (panel.isOpen) {\n            panel.shown.emit();\n            this.shown.emit(id);\n          } else {\n            panel.hidden.emit();\n            this.hidden.emit(id);\n          }\n        });\n      }\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbAccordion_Factory(t) {\n    return new (t || NgbAccordion)(i0.ɵɵdirectiveInject(NgbAccordionConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbAccordion,\n    selectors: [[\"ngb-accordion\"]],\n    contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbPanel, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panels = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n    hostVars: 1,\n    hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      activeIds: \"activeIds\",\n      closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"],\n      destroyOnHide: \"destroyOnHide\",\n      type: \"type\"\n    },\n    outputs: {\n      panelChange: \"panelChange\",\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbAccordion\"],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"accordion-button\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngbRef\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngbRef\"], [1, \"accordion-body\"]],\n    template: function NgbAccordion_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n      }\n    },\n    dependencies: [NgFor, NgTemplateOutlet, NgbPanelToggle, NgbRefDirective, NgbPanelHeader, NgIf],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      standalone: true,\n      imports: [NgFor, NgTemplateOutlet, NgbPanelToggle, NgbRefDirective, NgbPanelHeader, NgIf],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'accordion',\n        role: 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: `\n\t\t<ng-template #t ngbPanelHeader let-panel>\n\t\t\t<button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n\t\t\t\t{{ panel.title }}\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t\t<ng-template ngFor let-panel [ngForOf]=\"panels\">\n\t\t\t<div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n\t\t\t\t<div\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\tid=\"{{ panel.id }}-header\"\n\t\t\t\t\t[class]=\"'accordion-header ' + (panel.type ? 'bg-' + panel.type : type ? 'bg-' + type : '')\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: panel, opened: panel.isOpen }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"{{ panel.id }}\"\n\t\t\t\t\t(ngbRef)=\"panel.panelDiv = $event\"\n\t\t\t\t\trole=\"tabpanel\"\n\t\t\t\t\t[attr.aria-labelledby]=\"panel.id + '-header'\"\n\t\t\t\t\t*ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"accordion-body\">\n\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }],\n    animation: [{\n      type: Input\n    }],\n    activeIds: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\n\n\nclass NgbCollapseConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.horizontal = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbCollapseConfig_Factory(t) {\n    return new (t || NgbCollapseConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCollapseConfig,\n    factory: NgbCollapseConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapseConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\n\n\nclass NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  set collapsed(isCollapsed) {\n    if (this._isCollapsed !== isCollapsed) {\n      this._isCollapsed = isCollapsed;\n\n      if (this._afterInit) {\n        this._runTransitionWithEvents(isCollapsed, this.animation);\n      }\n    }\n  }\n\n  constructor(_element, config, _zone) {\n    this._element = _element;\n    this._zone = _zone;\n    /**\n     * Flag used to track if the collapse setter is invoked during initialization\n     * or not. This distinction is made in order to avoid running the transition during initialization.\n     */\n\n    this._afterInit = false;\n    this._isCollapsed = false;\n    this.ngbCollapseChange = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is shown, after the transition.\n     * It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the collapse element is hidden, after the transition.\n     * It has no payload.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.animation = config.animation;\n    this.horizontal = config.horizontal;\n  }\n\n  ngOnInit() {\n    this._runTransition(this._isCollapsed, false);\n\n    this._afterInit = true;\n  }\n  /**\n   * Triggers collapsing programmatically.\n   *\n   * If there is a collapsing transition running already, it will be reversed.\n   * If the animations are turned off this happens synchronously.\n   *\n   * @since 8.0.0\n   */\n\n\n  toggle(open = this._isCollapsed) {\n    this.collapsed = !open;\n    this.ngbCollapseChange.next(this._isCollapsed);\n  }\n\n  _runTransition(collapsed, animation) {\n    return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n      animation,\n      runningTransition: 'stop',\n      context: {\n        direction: collapsed ? 'hide' : 'show',\n        dimension: this.horizontal ? 'width' : 'height'\n      }\n    });\n  }\n\n  _runTransitionWithEvents(collapsed, animation) {\n    this._runTransition(collapsed, animation).subscribe(() => {\n      if (collapsed) {\n        this.hidden.emit();\n      } else {\n        this.shown.emit();\n      }\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbCollapse_Factory(t) {\n    return new (t || NgbCollapse)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgbCollapseConfig), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbCollapse,\n    selectors: [[\"\", \"ngbCollapse\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NgbCollapse_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"collapse-horizontal\", ctx.horizontal);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      collapsed: [\"ngbCollapse\", \"collapsed\"],\n      horizontal: \"horizontal\"\n    },\n    outputs: {\n      ngbCollapseChange: \"ngbCollapseChange\",\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbCollapse\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse',\n      standalone: true,\n      host: {\n        '[class.collapse-horizontal]': 'horizontal'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgbCollapseConfig\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }],\n    ngbCollapseChange: [{\n      type: Output\n    }],\n    horizontal: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nlet nextId$3 = 0;\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\n\nclass NgbAccordionBody {\n  constructor() {\n    this._appRef = inject(ApplicationRef);\n    this._element = inject(ElementRef).nativeElement;\n    this._item = inject(NgbAccordionItem);\n    this._viewRef = null;\n  }\n\n  ngAfterContentChecked() {\n    if (this._bodyTpl) {\n      if (this._item.animatingBodyCollapse || !this._item.destroyOnHide) {\n        this._createViewIfNotExists();\n      } else {\n        this._destroyViewIfExists();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyViewIfExists();\n  }\n\n  _destroyViewIfExists() {\n    if (this._viewRef) {\n      this._appRef.detachView(this._viewRef);\n\n      this._viewRef.destroy();\n\n      this._viewRef = null;\n    }\n  }\n\n  _createViewIfNotExists() {\n    if (!this._viewRef) {\n      this._viewRef = this._bodyTpl.createEmbeddedView(null);\n\n      this._viewRef.detectChanges();\n\n      this._appRef.attachView(this._viewRef);\n\n      for (const node of this._viewRef.rootNodes) {\n        this._element.appendChild(node);\n      }\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionBody_Factory(t) {\n    return new (t || NgbAccordionBody)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionBody,\n    selectors: [[\"\", \"ngbAccordionBody\", \"\"]],\n    contentQueries: function NgbAccordionBody_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyTpl = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbAccordionBody_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"accordion-body\", true);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionBody, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbAccordionBody]',\n      standalone: true,\n      host: {\n        '[class.accordion-body]': 'true'\n      }\n    }]\n  }], null, {\n    _bodyTpl: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }]\n  });\n})();\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionCollapse {\n  constructor(item, ngbCollapse) {\n    this.item = item;\n    this.ngbCollapse = ngbCollapse;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionCollapse_Factory(t) {\n    return new (t || NgbAccordionCollapse)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionItem)), i0.ɵɵdirectiveInject(NgbCollapse));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionCollapse,\n    selectors: [[\"\", \"ngbAccordionCollapse\", \"\"]],\n    hostAttrs: [\"role\", \"region\"],\n    hostVars: 4,\n    hostBindings: function NgbAccordionCollapse_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.item.collapseId);\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.item.toggleId);\n        i0.ɵɵclassProp(\"accordion-collapse\", true);\n      }\n    },\n    exportAs: [\"ngbAccordionCollapse\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionCollapse, [{\n    type: Directive,\n    args: [{\n      exportAs: 'ngbAccordionCollapse',\n      standalone: true,\n      selector: '[ngbAccordionCollapse]',\n      host: {\n        role: 'region',\n        '[class.accordion-collapse]': 'true',\n        '[id]': 'item.collapseId',\n        '[attr.aria-labelledby]': 'item.toggleId'\n      },\n      hostDirectives: [{\n        directive: NgbCollapse\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionItem,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionItem)]\n      }]\n    }, {\n      type: NgbCollapse\n    }];\n  }, null);\n})();\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionToggle {\n  constructor(item, accordion) {\n    this.item = item;\n    this.accordion = accordion;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionToggle_Factory(t) {\n    return new (t || NgbAccordionToggle)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionItem)), i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionDirective)));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionToggle,\n    selectors: [[\"\", \"ngbAccordionToggle\", \"\"]],\n    hostVars: 5,\n    hostBindings: function NgbAccordionToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbAccordionToggle_click_HostBindingHandler() {\n          return !ctx.item.disabled && ctx.accordion.toggle(ctx.item.id);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.item.toggleId);\n        i0.ɵɵattribute(\"aria-controls\", ctx.item.collapseId)(\"aria-expanded\", !ctx.item.collapsed);\n        i0.ɵɵclassProp(\"collapsed\", ctx.item.collapsed);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbAccordionToggle]',\n      standalone: true,\n      host: {\n        '[id]': 'item.toggleId',\n        '[class.collapsed]': 'item.collapsed',\n        '[attr.aria-controls]': 'item.collapseId',\n        '[attr.aria-expanded]': '!item.collapsed',\n        '(click)': '!item.disabled && accordion.toggle(item.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionItem,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionItem)]\n      }]\n    }, {\n      type: NgbAccordionDirective,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionDirective)]\n      }]\n    }];\n  }, null);\n})();\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionButton {\n  constructor(item) {\n    this.item = item;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionButton_Factory(t) {\n    return new (t || NgbAccordionButton)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionItem)));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionButton,\n    selectors: [[\"button\", \"ngbAccordionButton\", \"\"]],\n    hostAttrs: [\"type\", \"button\"],\n    hostVars: 3,\n    hostBindings: function NgbAccordionButton_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.item.disabled);\n        i0.ɵɵclassProp(\"accordion-button\", true);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionButton, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbAccordionButton]',\n      standalone: true,\n      host: {\n        '[disabled]': 'item.disabled',\n        '[class.accordion-button]': 'true',\n        type: 'button'\n      },\n      hostDirectives: [{\n        directive: NgbAccordionToggle\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionItem,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionItem)]\n      }]\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionHeader {\n  constructor(item) {\n    this.item = item;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionHeader_Factory(t) {\n    return new (t || NgbAccordionHeader)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionItem)));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionHeader,\n    selectors: [[\"\", \"ngbAccordionHeader\", \"\"]],\n    hostAttrs: [\"role\", \"heading\"],\n    hostVars: 4,\n    hostBindings: function NgbAccordionHeader_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"accordion-header\", true)(\"collapsed\", ctx.item.collapsed);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbAccordionHeader]',\n      standalone: true,\n      host: {\n        role: 'heading',\n        '[class.accordion-header]': 'true',\n        '[class.collapsed]': 'item.collapsed'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionItem,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionItem)]\n      }]\n    }];\n  }, null);\n})();\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionItem {\n  constructor(_accordion, _cd) {\n    this._accordion = _accordion;\n    this._cd = _cd;\n    this._subscriptions = [];\n    this._collapsed = true;\n    this._id = `ngb-accordion-item-${nextId$3++}`;\n    this.animatingBodyCollapse = false;\n    /**\n     * If `true`, the accordion item will be disabled.\n     * It won't react to user's clicks, but still will be toggelable programmatically.\n     */\n\n    this.disabled = false;\n    /**\n     * Event emitted before the expanding animation starts. It has no payload.\n     *\n     * @since 15.1.0\n     */\n\n    this.show = new EventEmitter();\n    /**\n     * Event emitted when the expanding animation is finished. It has no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * Event emitted before the collapsing animation starts. It has no payload.\n     *\n     * @since 15.1.0\n     */\n\n    this.hide = new EventEmitter();\n    /**\n     * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n     * It has no payload.\n     */\n\n    this.hidden = new EventEmitter();\n  }\n  /**\n   * Sets the custom ID of the accordion item. It must be unique for the document.\n   *\n   * @param id The ID of the accordion item, must be a non-empty string\n   */\n\n\n  set id(id) {\n    if (isString(id) && id !== '') {\n      this._id = id;\n    }\n  }\n  /**\n   * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n   *\n   * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n   */\n\n\n  set destroyOnHide(destroyOnHide) {\n    this._destroyOnHide = destroyOnHide;\n  }\n\n  get destroyOnHide() {\n    return this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide;\n  }\n  /**\n   *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n   *\n   * @param collapsed New state of the accordion item.\n   */\n\n\n  set collapsed(collapsed) {\n    if (this.collapsed !== collapsed) {\n      // checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n      if (this.collapsed && !this._accordion._ensureCanExpand(this)) {\n        return;\n      } // changing the collapsed state\n\n\n      this._collapsed = collapsed;\n\n      this._cd.markForCheck(); // need if the accordion is used inside a component having OnPush change detection strategy\n      // we need force CD to get template into DOM before starting animation to calculate its height correctly\n\n\n      if (!this.collapsed) {\n        this.animatingBodyCollapse = true;\n\n        this._cd.detectChanges();\n      } // firing events before starting animations\n\n\n      if (!this.collapsed) {\n        this.show.emit();\n\n        this._accordion.show.emit(this.id);\n      } else {\n        this.hide.emit();\n\n        this._accordion.hide.emit(this.id);\n      } // we also need to make sure 'animation' flag is up-to- date\n\n\n      this._collapse.ngbCollapse.animation = this._accordion.animation;\n      this._collapse.ngbCollapse.collapsed = this.collapsed;\n    }\n  }\n\n  get collapsed() {\n    return this._collapsed;\n  }\n\n  get id() {\n    return `${this._id}`;\n  }\n\n  get toggleId() {\n    return `${this.id}-toggle`;\n  }\n\n  get collapseId() {\n    return `${this.id}-collapse`;\n  }\n\n  ngAfterContentInit() {\n    const {\n      ngbCollapse\n    } = this._collapse; // we need to disable the animation for the first init\n\n    ngbCollapse.animation = false;\n    ngbCollapse.collapsed = this.collapsed; // we set the animation to the default of the accordion\n\n    ngbCollapse.animation = this._accordion.animation; // event forwarding from 'ngbCollapse' to 'ngbAccordion'\n\n    this._subscriptions.push(ngbCollapse.hidden.subscribe(() => {\n      // when the animation finishes we can remove the template from DOM\n      this.animatingBodyCollapse = false;\n      this.hidden.emit();\n\n      this._accordion.hidden.emit(this.id);\n    }), ngbCollapse.shown.subscribe(() => {\n      this.shown.emit();\n\n      this._accordion.shown.emit(this.id);\n    }));\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(s => s.unsubscribe());\n  }\n  /**\n   * Toggles an accordion item.\n   */\n\n\n  toggle() {\n    this.collapsed = !this.collapsed;\n  }\n  /**\n   * Expands an accordion item.\n   */\n\n\n  expand() {\n    this.collapsed = false;\n  }\n  /**\n   * Collapses an accordion item.\n   */\n\n\n  collapse() {\n    this.collapsed = true;\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionItem_Factory(t) {\n    return new (t || NgbAccordionItem)(i0.ɵɵdirectiveInject(forwardRef(() => NgbAccordionDirective)), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionItem,\n    selectors: [[\"\", \"ngbAccordionItem\", \"\"]],\n    contentQueries: function NgbAccordionItem_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbAccordionCollapse, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._collapse = _t.first);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function NgbAccordionItem_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"accordion-item\", true);\n      }\n    },\n    inputs: {\n      id: [\"ngbAccordionItem\", \"id\"],\n      destroyOnHide: \"destroyOnHide\",\n      disabled: \"disabled\",\n      collapsed: \"collapsed\"\n    },\n    outputs: {\n      show: \"show\",\n      shown: \"shown\",\n      hide: \"hide\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbAccordionItem\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbAccordionItem]',\n      exportAs: 'ngbAccordionItem',\n      standalone: true,\n      host: {\n        '[class.accordion-item]': 'true',\n        '[id]': 'id'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionDirective,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbAccordionDirective)]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _collapse: [{\n      type: ContentChild,\n      args: [NgbAccordionCollapse, {\n        static: true\n      }]\n    }],\n    id: [{\n      type: Input,\n      args: ['ngbAccordionItem']\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    collapsed: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\n\n\nclass NgbAccordionDirective {\n  constructor(config) {\n    /**\n     * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n     *\n     * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n     */\n    this.destroyOnHide = true;\n    /**\n     * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n     *\n     * @since 15.1.0\n     */\n\n    this.show = new EventEmitter();\n    /**\n     * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n     *\n     * @since 15.1.0\n     */\n\n    this.hide = new EventEmitter();\n    /**\n     * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n     * The payload is the id of hidden accordion item.\n     */\n\n    this.hidden = new EventEmitter();\n    this._anItemWasAlreadyExpandedDuringInitialisation = false;\n    this.animation = config.animation;\n    this.closeOthers = config.closeOthers;\n  }\n  /**\n   * Toggles an item with the given id.\n   *\n   * It will toggle an item, even if it is disabled.\n   *\n   * @param itemId The id of the item to toggle.\n   */\n\n\n  toggle(itemId) {\n    this._getItem(itemId)?.toggle();\n  }\n  /**\n   * Expands an item with the given id.\n   *\n   * If `closeOthers` is `true`, it will collapse other panels.\n   *\n   * @param itemId The id of the item to expand.\n   */\n\n\n  expand(itemId) {\n    this._getItem(itemId)?.expand();\n  }\n  /**\n   * Expands all items.\n   *\n   * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n   */\n\n\n  expandAll() {\n    if (this._items) {\n      if (this.closeOthers) {\n        // we check if there is an item open and if it is not we can expand the first item\n        // (otherwise we toggle nothing)\n        if (!this._items.find(item => !item.collapsed)) {\n          this._items.first.expand();\n        }\n      } else {\n        this._items.forEach(item => item.expand());\n      }\n    }\n  }\n  /**\n   * Collapses an item with the given id.\n   *\n   * Has no effect if the `itemId` does not correspond to any item.\n   *\n   * @param itemId The id of the item to collapse.\n   */\n\n\n  collapse(itemId) {\n    this._getItem(itemId)?.collapse();\n  }\n  /**\n   * Collapses all items.\n   */\n\n\n  collapseAll() {\n    this._items?.forEach(item => item.collapse());\n  }\n  /**\n   * Checks if an item with the given id is expanded.\n   *\n   * If the `itemId` does not correspond to any item, it returns `false`.\n   *\n   * @param itemId The id of the item to check.\n   */\n\n\n  isExpanded(itemId) {\n    const item = this._getItem(itemId);\n\n    return item ? !item.collapsed : false;\n  }\n  /**\n   * It checks, if the item can be expanded in the current state of the accordion.\n   * With `closeOthers` there can be only one expanded item at a time.\n   *\n   * @internal\n   */\n\n\n  _ensureCanExpand(toExpand) {\n    if (!this.closeOthers) {\n      return true;\n    } // special case during the initialization of the [collapse]=\"false\" inputs\n    // `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n\n\n    if (!this._items) {\n      if (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n        this._anItemWasAlreadyExpandedDuringInitialisation = true;\n        return true;\n      }\n\n      return false;\n    } // if there is an expanded item, we need to collapse it first\n\n\n    this._items.find(item => !item.collapsed && toExpand !== item)?.collapse();\n    return true;\n  }\n\n  _getItem(itemId) {\n    return this._items?.find(item => item.id === itemId);\n  }\n\n  static #_ = this.ɵfac = function NgbAccordionDirective_Factory(t) {\n    return new (t || NgbAccordionDirective)(i0.ɵɵdirectiveInject(NgbAccordionConfig));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbAccordionDirective,\n    selectors: [[\"\", \"ngbAccordion\", \"\"]],\n    contentQueries: function NgbAccordionDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbAccordionItem, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbAccordionDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"accordion\", true);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      closeOthers: \"closeOthers\",\n      destroyOnHide: \"destroyOnHide\"\n    },\n    outputs: {\n      show: \"show\",\n      shown: \"shown\",\n      hide: \"hide\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbAccordion\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbAccordion]',\n      standalone: true,\n      exportAs: 'ngbAccordion',\n      host: {\n        '[class.accordion]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [NgbAccordionItem, {\n        descendants: false\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    closeOthers: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    show: [{\n      type: Output\n    }],\n    shown: [{\n      type: Output\n    }],\n    hide: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n/* eslint-disable deprecation/deprecation */\n\n\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle, NgbAccordionButton, NgbAccordionDirective, NgbAccordionItem, NgbAccordionHeader, NgbAccordionToggle, NgbAccordionBody, NgbAccordionCollapse];\n\nclass NgbAccordionModule {\n  static #_ = this.ɵfac = function NgbAccordionModule_Factory(t) {\n    return new (t || NgbAccordionModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbAccordionModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_ACCORDION_DIRECTIVES,\n      exports: NGB_ACCORDION_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\nconst ngbAlertFadingTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n};\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n\n\nclass NgbAlertConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.dismissible = true;\n    this.type = 'warning';\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbAlertConfig_Factory(t) {\n    return new (t || NgbAlertConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbAlertConfig,\n    factory: NgbAlertConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n\n\nclass NgbAlert {\n  constructor(config, _renderer, _element, _zone) {\n    this._renderer = _renderer;\n    this._element = _element;\n    this._zone = _zone;\n    /**\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n     *\n     * @since 8.0.0\n     */\n\n    this.closed = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n    this.animation = config.animation;\n  }\n  /**\n   * Triggers alert closing programmatically (same as clicking on the close button (×)).\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(closed)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  close() {\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbAlertFadingTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => this.closed.emit());\n    return transition;\n  }\n\n  ngOnChanges(changes) {\n    const typeChange = changes['type'];\n\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() {\n    this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`);\n  }\n\n  static #_ = this.ɵfac = function NgbAlert_Factory(t) {\n    return new (t || NgbAlert)(i0.ɵɵdirectiveInject(NgbAlertConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbAlert,\n    selectors: [[\"ngb-alert\"]],\n    hostAttrs: [\"role\", \"alert\", 1, \"alert\", \"show\"],\n    hostVars: 4,\n    hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"fade\", ctx.animation)(\"alert-dismissible\", ctx.dismissible);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      dismissible: \"dismissible\",\n      type: \"type\"\n    },\n    outputs: {\n      closed: \"closed\"\n    },\n    exportAs: [\"ngbAlert\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 2,\n    vars: 1,\n    consts: function () {\n      let i18n_1;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_2 = goog.getMsg(\"Close\");\n        i18n_1 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_2;\n      } else {\n        i18n_1 = $localize`:@@ngb.alert.close:Close`;\n      }\n\n      return [[\"type\", \"button\", \"class\", \"btn-close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_1, 1, \"btn-close\", 3, \"click\"]];\n    },\n    template: function NgbAlert_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n        i0.ɵɵtemplate(1, NgbAlert_button_1_Template, 1, 0, \"button\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n      }\n    },\n    dependencies: [NgIf],\n    styles: [\"ngb-alert{display:block}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      exportAs: 'ngbAlert',\n      standalone: true,\n      imports: [NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        role: 'alert',\n        class: 'alert show',\n        '[class.fade]': 'animation',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: `\n\t\t<ng-content></ng-content>\n\t\t<button\n\t\t\t*ngIf=\"dismissible\"\n\t\t\ttype=\"button\"\n\t\t\tclass=\"btn-close\"\n\t\t\taria-label=\"Close\"\n\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t(click)=\"close()\"\n\t\t>\n\t\t</button>\n\t`,\n      styles: [\"ngb-alert{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbAlertModule {\n  static #_ = this.ɵfac = function NgbAlertModule_Factory(t) {\n    return new (t || NgbAlertModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbAlertModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbAlert],\n      exports: [NgbAlert]\n    }]\n  }], null, null);\n})();\n/**\n * Defines the carousel slide transition direction.\n */\n\n\nvar NgbSlideEventDirection;\n\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[\"START\"] = \"start\";\n  NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\n\nconst isBeingAnimated = ({\n  classList\n}) => {\n  return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\n\nconst removeDirectionClasses = classList => {\n  classList.remove('carousel-item-start');\n  classList.remove('carousel-item-end');\n};\n\nconst removeClasses = classList => {\n  removeDirectionClasses(classList);\n  classList.remove('carousel-item-prev');\n  classList.remove('carousel-item-next');\n};\n\nconst ngbCarouselTransitionIn = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.add('active');\n    return;\n  }\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n    classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n    reflow(element);\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(classList);\n    classList.add('active');\n  };\n};\n\nconst ngbCarouselTransitionOut = (element, animation, {\n  direction\n}) => {\n  const {\n    classList\n  } = element;\n\n  if (!animation) {\n    removeDirectionClasses(classList);\n    removeClasses(classList);\n    classList.remove('active');\n    return;\n  } //  direction is left or right, depending on the way the slide goes out.\n\n\n  if (isBeingAnimated(element)) {\n    // Revert the transition\n    removeDirectionClasses(classList);\n  } else {\n    classList.add('carousel-item-' + direction);\n  }\n\n  return () => {\n    removeClasses(classList);\n    classList.remove('active');\n  };\n};\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n\n\nclass NgbCarouselConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.interval = 5000;\n    this.wrap = true;\n    this.keyboard = true;\n    this.pauseOnHover = true;\n    this.pauseOnFocus = true;\n    this.showNavigationArrows = true;\n    this.showNavigationIndicators = true;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbCarouselConfig_Factory(t) {\n    return new (t || NgbCarouselConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCarouselConfig,\n    factory: NgbCarouselConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\n\nclass NgbSlide {\n  constructor(tplRef) {\n    this.tplRef = tplRef;\n    /**\n     * Slide id that must be unique for the entire document.\n     *\n     * If not provided, will be generated in the `ngb-slide-xx` format.\n     */\n\n    this.id = `ngb-slide-${nextId$2++}`;\n    /**\n     * An event emitted when the slide transition is finished\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n  }\n\n  static #_ = this.ɵfac = function NgbSlide_Factory(t) {\n    return new (t || NgbSlide)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbSlide,\n    selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n    inputs: {\n      id: \"id\"\n    },\n    outputs: {\n      slid: \"slid\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n\n\nclass NgbCarousel {\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  set interval(value) {\n    this._interval$.next(value);\n  }\n\n  get interval() {\n    return this._interval$.value;\n  }\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n\n\n  set wrap(value) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() {\n    return this._wrap$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n\n\n  set pauseOnHover(value) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() {\n    return this._pauseOnHover$.value;\n  }\n  /**\n   * If `true`, will pause slide switching when the focus is inside the carousel.\n   */\n\n\n  set pauseOnFocus(value) {\n    this._pauseOnFocus$.next(value);\n  }\n\n  get pauseOnFocus() {\n    return this._pauseOnFocus$.value;\n  }\n\n  set mouseHover(value) {\n    this._mouseHover$.next(value);\n  }\n\n  get mouseHover() {\n    return this._mouseHover$.value;\n  }\n\n  set focused(value) {\n    this._focused$.next(value);\n  }\n\n  get focused() {\n    return this._focused$.value;\n  }\n\n  constructor(config, _platformId, _ngZone, _cd, _container) {\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this._container = _container;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._focused$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pauseOnFocus$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\n     * An event emitted just before the slide transition starts.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     */\n\n    this.slide = new EventEmitter();\n    /**\n     * An event emitted right after the slide transition is completed.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     *\n     * @since 8.0.0\n     */\n\n    this.slid = new EventEmitter();\n    /*\n     * Keep the ids of the panels currently transitionning\n     * in order to allow only the transition revertion\n     */\n\n    this._transitionIds = null;\n    this.animation = config.animation;\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.pauseOnFocus = config.pauseOnFocus;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  arrowLeft() {\n    this.focus();\n    this.prev(NgbSlideEventSource.ARROW_LEFT);\n  }\n\n  arrowRight() {\n    this.focus();\n    this.next(NgbSlideEventSource.ARROW_RIGHT);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)), this._wrap$, this.slides.changes.pipe(startWith(null))]).pipe(map(([currentSlideId, wrap]) => {\n          const slideArr = this.slides.toArray();\n\n          const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n          return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n        }), distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._pauseOnFocus$, this._focused$, this._interval$, hasNextSlide$]).pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || pauseOnHover && mouseHover || pauseOnFocus && focused || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER), takeUntil(this._destroy$)).subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\n      this._transitionIds?.forEach(id => ngbCompleteTransition(this._getSlideElement(id)));\n      this._transitionIds = null;\n\n      this._cd.markForCheck(); // The following code need to be done asynchronously, after the dom becomes stable,\n      // otherwise all changes will be undone.\n\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        for (const {\n          id\n        } of this.slides) {\n          const element = this._getSlideElement(id);\n\n          if (id === this.activeId) {\n            element.classList.add('active');\n          } else {\n            element.classList.remove('active');\n          }\n        }\n      });\n    });\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n\n    this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n  }\n\n  ngAfterViewInit() {\n    // Initialize the 'active' class (not managed by the template)\n    if (this.activeId) {\n      const element = this._getSlideElement(this.activeId);\n\n      if (element) {\n        element.classList.add('active');\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n\n\n  select(slideId, source) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n  /**\n   * Navigates to the previous slide.\n   */\n\n\n  prev(source) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n  }\n  /**\n   * Navigates to the next slide.\n   */\n\n\n  next(source) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n  }\n  /**\n   * Pauses cycling through the slides.\n   */\n\n\n  pause() {\n    this._pause$.next(true);\n  }\n  /**\n   * Restarts cycling through the slides from start to end.\n   */\n\n\n  cycle() {\n    this._pause$.next(false);\n  }\n  /**\n   * Set the focus on the carousel.\n   */\n\n\n  focus() {\n    this._container.nativeElement.focus();\n  }\n\n  _cycleToSelected(slideIdx, direction, source) {\n    const transitionIds = this._transitionIds;\n\n    if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n      // Revert prevented\n      return;\n    }\n\n    let selectedSlide = this._getSlideById(slideIdx);\n\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this._transitionIds = [this.activeId, slideIdx];\n      this.slide.emit({\n        prev: this.activeId,\n        current: selectedSlide.id,\n        direction: direction,\n        paused: this._pause$.value,\n        source\n      });\n      const options = {\n        animation: this.animation,\n        runningTransition: 'stop',\n        context: {\n          direction\n        }\n      };\n      const transitions = [];\n\n      const activeSlide = this._getSlideById(this.activeId);\n\n      if (activeSlide) {\n        const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n        activeSlideTransition.subscribe(() => {\n          activeSlide.slid.emit({\n            isShown: false,\n            direction,\n            source\n          });\n        });\n        transitions.push(activeSlideTransition);\n      }\n\n      const previousId = this.activeId;\n      this.activeId = selectedSlide.id;\n\n      const nextSlide = this._getSlideById(this.activeId);\n\n      const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n      transition.subscribe(() => {\n        nextSlide?.slid.emit({\n          isShown: true,\n          direction,\n          source\n        });\n      });\n      transitions.push(transition);\n      zip(...transitions).pipe(take(1)).subscribe(() => {\n        this._transitionIds = null;\n        this.slid.emit({\n          prev: previousId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source\n        });\n      });\n    } // we get here after the interval fires or any external API call like next(), prev() or select()\n\n\n    this._cd.markForCheck();\n  }\n\n  _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n  }\n\n  _getSlideById(slideId) {\n    return this.slides.find(slide => slide.id === slideId) || null;\n  }\n\n  _getSlideIdxById(slideId) {\n    const slide = this._getSlideById(slideId);\n\n    return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n  }\n\n  _getNextSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n    return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n  }\n\n  _getPrevSlide(currentSlideId) {\n    const slideArr = this.slides.toArray();\n\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n    const isFirstSlide = currentSlideIdx === 0;\n    return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n  }\n\n  _getSlideElement(slideId) {\n    return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n  }\n\n  static #_ = this.ɵfac = function NgbCarousel_Factory(t) {\n    return new (t || NgbCarousel)(i0.ɵɵdirectiveInject(NgbCarouselConfig), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbCarousel,\n    selectors: [[\"ngb-carousel\"]],\n    contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbSlide, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slides = _t);\n      }\n    },\n    hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n    hostVars: 3,\n    hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n          return ctx.keyboard && ctx.arrowLeft();\n        })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n          return ctx.keyboard && ctx.arrowRight();\n        })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n          return ctx.mouseHover = true;\n        })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n          return ctx.mouseHover = false;\n        })(\"focusin\", function NgbCarousel_focusin_HostBindingHandler() {\n          return ctx.focused = true;\n        })(\"focusout\", function NgbCarousel_focusout_HostBindingHandler() {\n          return ctx.focused = false;\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-activedescendant\", \"slide-\" + ctx.activeId);\n        i0.ɵɵstyleProp(\"display\", \"block\");\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      activeId: \"activeId\",\n      interval: \"interval\",\n      wrap: \"wrap\",\n      keyboard: \"keyboard\",\n      pauseOnHover: \"pauseOnHover\",\n      pauseOnFocus: \"pauseOnFocus\",\n      showNavigationArrows: \"showNavigationArrows\",\n      showNavigationIndicators: \"showNavigationIndicators\"\n    },\n    outputs: {\n      slide: \"slide\",\n      slid: \"slid\"\n    },\n    exportAs: [\"ngbCarousel\"],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 6,\n    vars: 6,\n    consts: function () {\n      let i18n_4;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @desc Currently selected slide number read by screen reader\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__5 = goog.getMsg(\" Slide {$interpolation} of {$interpolation_1} \", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\",\n          \"interpolation_1\": \"\\uFFFD1\\uFFFD\"\n        }, {\n          original_code: {\n            \"interpolation\": \"{{ i + 1 }}\",\n            \"interpolation_1\": \"{{ c }}\"\n          }\n        });\n        i18n_4 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__5;\n      } else {\n        i18n_4 = $localize`:Currently selected slide number read by screen reader@@ngb.carousel.slide-number: Slide ${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION: of ${\"\\uFFFD1\\uFFFD\"}:INTERPOLATION_1: `;\n      }\n\n      let i18n_6;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__7 = goog.getMsg(\"Previous\");\n        i18n_6 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__7;\n      } else {\n        i18n_6 = $localize`:@@ngb.carousel.previous:Previous`;\n      }\n\n      let i18n_8;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__9 = goog.getMsg(\"Next\");\n        i18n_8 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__9;\n      } else {\n        i18n_8 = $localize`:@@ngb.carousel.next:Next`;\n      }\n\n      return [[\"role\", \"tablist\", 1, \"carousel-indicators\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"data-bs-target\", \"\", \"role\", \"tab\", 3, \"click\"], [\"role\", \"tabpanel\", 1, \"carousel-item\", 3, \"id\"], [1, \"visually-hidden\"], i18n_4, [3, \"ngTemplateOutlet\"], [\"type\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], i18n_6, [\"type\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n    },\n    template: function NgbCarousel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NgbCarousel_button_1_Template, 1, 5, \"button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, NgbCarousel_div_3_Template, 4, 4, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, NgbCarousel_button_4_Template, 4, 0, \"button\", 4);\n        i0.ɵɵtemplate(5, NgbCarousel_button_5_Template, 4, 0, \"button\", 5);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"visually-hidden\", !ctx.showNavigationIndicators);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.slides);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      }\n    },\n    dependencies: [NgFor, NgTemplateOutlet, NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      standalone: true,\n      imports: [NgFor, NgTemplateOutlet, NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'carousel slide',\n        '[style.display]': '\"block\"',\n        tabIndex: '0',\n        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n        '(mouseenter)': 'mouseHover = true',\n        '(mouseleave)': 'mouseHover = false',\n        '(focusin)': 'focused = true',\n        '(focusout)': 'focused = false',\n        '[attr.aria-activedescendant]': `'slide-' + activeId`\n      },\n      template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-bs-target\n\t\t\t\t*ngFor=\"let slide of slides\"\n\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\trole=\"tab\"\n\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t></button>\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t<div\n\t\t\t\t*ngFor=\"let slide of slides; index as i; count as c\"\n\t\t\t\tclass=\"carousel-item\"\n\t\t\t\t[id]=\"'slide-' + slide.id\"\n\t\t\t\trole=\"tabpanel\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t>\n\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t</span>\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t\t<button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n\t\t</button>\n\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n\t\t</button>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }],\n    animation: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    pauseOnFocus: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    slide: [{\n      type: Output\n    }],\n    slid: [{\n      type: Output\n    }]\n  });\n})();\n\nvar NgbSlideEventSource;\n\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nclass NgbCarouselModule {\n  static #_ = this.ɵfac = function NgbCarouselModule_Factory(t) {\n    return new (t || NgbCarouselModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbCarouselModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbCarousel, NgbSlide],\n      exports: [NgbCarousel, NgbSlide]\n    }]\n  }], null, null);\n})();\n\nclass NgbCollapseModule {\n  static #_ = this.ɵfac = function NgbCollapseModule_Factory(t) {\n    return new (t || NgbCollapseModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbCollapseModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\n\n\nclass NgbDate {\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date) {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year, month, day) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * Checks if the current date is equal to another date.\n   */\n\n\n  equals(other) {\n    return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n  /**\n   * Checks if the current date is before another date.\n   */\n\n\n  before(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n  /**\n   * Checks if the current date is after another date.\n   */\n\n\n  after(other) {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n\n}\n\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\n\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\n\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date || null;\n}\n\nfunction isDateSelectable(date, state) {\n  const {\n    minDate,\n    maxDate,\n    disabled,\n    markDisabled\n  } = state;\n  return !(date === null || date === undefined || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate));\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  const length = end - start + 1;\n  const numbers = Array(length);\n\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate != null && nextDate.after(maxDate);\n}\n\nfunction prevMonthDisabled(calendar, date, minDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate != null && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\n\nfunction buildMonths(calendar, date, state, i18n, force) {\n  const {\n    displayMonths,\n    months\n  } = state; // move old months to a temporary array\n\n  const monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months\n\n  const firstDates = Array.from({\n    length: displayMonths\n  }, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate)); // move reused month back to months\n\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  }); // rebuild nullified months\n\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\n\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n  const {\n    dayTemplateData,\n    minDate,\n    maxDate,\n    firstDayOfWeek,\n    markDisabled,\n    outsideDays,\n    weekdayWidth,\n    weekdaysVisible\n  } = state;\n  const calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek); // clearing weekdays, if not visible\n\n  if (!weekdaysVisible) {\n    month.weekdays.length = 0;\n  } // month has weeks\n\n\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n\n    const days = weekObject.days; // week has days\n\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0 && weekdaysVisible) {\n        month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n      const ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled\n\n      let disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      } // today\n\n\n      let today = newDate.equals(calendarToday); // adding user-provided data to the context\n\n      let contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined; // saving first date of the month\n\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      } // saving last date of the month\n\n\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled,\n        focused: false,\n        selected: false,\n        today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek); // marking week as collapsed\n\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n\nfunction toJSDate(date) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion\n\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n\n  return jsDate;\n}\n\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n\n\nclass NgbCalendar {\n  static #_ = this.ɵfac = function NgbCalendar_Factory(t) {\n    return new (t || NgbCalendar)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendar,\n    factory: function () {\n      return NGB_DATEPICKER_CALENDAR_FACTORY();\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n\n        break;\n\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromJSDate(new Date());\n  }\n\n  isValid(date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    } // year 0 doesn't exist in Gregorian calendar\n\n\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarGregorian_BaseFactory;\n    return function NgbCalendarGregorian_Factory(t) {\n      return (ɵNgbCalendarGregorian_BaseFactory || (ɵNgbCalendarGregorian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarGregorian)))(t || NgbCalendarGregorian);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarGregorian,\n    factory: NgbCalendarGregorian.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n\n\nclass NgbDatepickerI18n {\n  /**\n   * Returns the text label to display above the day view.\n   *\n   * @since 9.1.0\n   */\n  getMonthLabel(date) {\n    return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n  }\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n\n\n  getDayNumerals(date) {\n    return `${date.day}`;\n  }\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n\n\n  getWeekNumerals(weekNumber) {\n    return `${weekNumber}`;\n  }\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n\n\n  getYearNumerals(year) {\n    return `${year}`;\n  }\n  /**\n   * Returns the week label to display in the heading of the month view.\n   *\n   * @since 9.1.0\n   */\n\n\n  getWeekLabel() {\n    return '';\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerI18n_Factory(t) {\n    return new (t || NgbDatepickerI18n)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerI18n,\n    factory: function NgbDatepickerI18n_Factory(t) {\n      let r = null;\n\n      if (t) {\n        r = new t();\n      } else {\n        r = NGB_DATEPICKER_18N_FACTORY(i0.ɵɵinject(LOCALE_ID));\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\n\n\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  constructor(_locale) {\n    super();\n    this._locale = _locale;\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayLabel(weekday, width) {\n    const weekdaysStartingOnSunday = getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\n    const weekdays = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n    return weekdays[weekday - 1] || '';\n  }\n\n  getMonthShortName(month) {\n    return this._monthsShort[month - 1] || '';\n  }\n\n  getMonthFullName(month) {\n    return this._monthsFull[month - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n    return new (t || NgbDatepickerI18nDefault)(i0.ɵɵinject(LOCALE_ID));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerI18nDefault,\n    factory: NgbDatepickerI18nDefault.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbDatepickerService {\n  get model$() {\n    return this._model$.pipe(filter(model => model.months.length > 0));\n  }\n\n  get dateSelect$() {\n    return this._dateSelect$.pipe(filter(date => date !== null));\n  }\n\n  set(options) {\n    let patch = Object.keys(options).map(key => this._VALIDATORS[key](options[key])).reduce((obj, part) => ({ ...obj,\n      ...part\n    }), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(_calendar, _i18n) {\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: dayTemplateData => {\n        if (this._state.dayTemplateData !== dayTemplateData) {\n          return {\n            dayTemplateData\n          };\n        }\n      },\n      displayMonths: displayMonths => {\n        displayMonths = toInteger(displayMonths);\n\n        if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n          return {\n            displayMonths\n          };\n        }\n      },\n      disabled: disabled => {\n        if (this._state.disabled !== disabled) {\n          return {\n            disabled\n          };\n        }\n      },\n      firstDayOfWeek: firstDayOfWeek => {\n        firstDayOfWeek = toInteger(firstDayOfWeek);\n\n        if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n          return {\n            firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: focusVisible => {\n        if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n          return {\n            focusVisible\n          };\n        }\n      },\n      markDisabled: markDisabled => {\n        if (this._state.markDisabled !== markDisabled) {\n          return {\n            markDisabled\n          };\n        }\n      },\n      maxDate: date => {\n        const maxDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.maxDate, maxDate)) {\n          return {\n            maxDate\n          };\n        }\n      },\n      minDate: date => {\n        const minDate = this.toValidDate(date, null);\n\n        if (isChangedDate(this._state.minDate, minDate)) {\n          return {\n            minDate\n          };\n        }\n      },\n      navigation: navigation => {\n        if (this._state.navigation !== navigation) {\n          return {\n            navigation\n          };\n        }\n      },\n      outsideDays: outsideDays => {\n        if (this._state.outsideDays !== outsideDays) {\n          return {\n            outsideDays\n          };\n        }\n      },\n      weekdays: weekdays => {\n        const weekdayWidth = weekdays === true || weekdays === false ? TranslationWidth.Short : weekdays;\n        const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n\n        if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n          return {\n            weekdayWidth,\n            weekdaysVisible\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      dayTemplateData: null,\n      markDisabled: null,\n      maxDate: null,\n      minDate: null,\n      disabled: false,\n      displayMonths: 1,\n      firstDate: null,\n      firstDayOfWeek: 1,\n      lastDate: null,\n      focusDate: null,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectedDate: null,\n      selectBoxes: {\n        years: [],\n        months: []\n      },\n      weekdayWidth: TranslationWidth.Short,\n      weekdaysVisible: true\n    };\n  }\n\n  focus(date) {\n    const focusedDate = this.toValidDate(date, null);\n\n    if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n      this._nextState({\n        focusDate: date\n      });\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {\n        emitEvent: true\n      });\n    }\n  }\n\n  open(date) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n\n    if (firstDate != null && !this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n      this._nextState({\n        firstDate\n      });\n    }\n  }\n\n  select(date, options = {}) {\n    const selectedDate = this.toValidDate(date, null);\n\n    if (selectedDate != null && !this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({\n          selectedDate\n        });\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date, defaultValue) {\n    const ngbDate = NgbDate.from(date);\n\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  _nextState(patch) {\n    const newState = this._updateState(patch);\n\n    this._patchContexts(newState);\n\n    this._state = newState;\n\n    this._model$.next(this._state);\n  }\n\n  _patchContexts(state) {\n    const {\n      months,\n      displayMonths,\n      selectedDate,\n      focusDate,\n      focusVisible,\n      disabled,\n      outsideDays\n    } = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          } // calculating tabindex\n\n\n          day.tabindex = !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled\n\n          if (disabled === true) {\n            day.context.disabled = true;\n          } // patch selection flag\n\n\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          } // visibility\n\n\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n          }\n        });\n      });\n    });\n  }\n\n  _updateState(patch) {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n    let startDate = state.firstDate; // min/max dates changed\n\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    } // disabled\n\n\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    } // initial rebuild via 'select()'\n\n\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    } // terminate early if only focus visibility was changed\n\n\n    if ('focusVisible' in patch) {\n      return state;\n    } // focus date changed\n\n\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible\n\n      if (state.months.length !== 0 && state.focusDate && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    } // first date changed\n\n\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    } // rebuilding months\n\n\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch || 'weekdaysVisible' in patch;\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates\n\n      state.months = months;\n      state.firstDate = months[0].firstDate;\n      state.lastDate = months[months.length - 1].lastDate; // reset selected date if 'markDisabled' returns true\n\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      } // adjusting focus after months were built\n\n\n      if ('firstDate' in patch) {\n        if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      } // adjusting months/years for the select box navigation\n\n\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        } // months -> when current year or boundaries change\n\n\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {\n          years: [],\n          months: []\n        };\n      } // updating navigation arrows -> boundaries change (min/max) or month/year changes\n\n\n      if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerService_Factory(t) {\n    return new (t || NgbDatepickerService)(i0.ɵɵinject(NgbCalendar), i0.ɵɵinject(NgbDatepickerI18n));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerService,\n    factory: NgbDatepickerService.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})();\n\nvar NavigationEvent;\n\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\nclass NgbDatepickerDayView {\n  constructor(i18n) {\n    this.i18n = i18n;\n  }\n\n  isMuted() {\n    return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerDayView_Factory(t) {\n    return new (t || NgbDatepickerDayView)(i0.ɵɵdirectiveInject(NgbDatepickerI18n));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbDatepickerDayView,\n    selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n    hostAttrs: [1, \"btn-light\"],\n    hostVars: 10,\n    hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n      }\n    },\n    inputs: {\n      currentMonth: \"currentMonth\",\n      date: \"date\",\n      disabled: \"disabled\",\n      focused: \"focused\",\n      selected: \"selected\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    attrs: _c10,\n    decls: 1,\n    vars: 1,\n    template: function NgbDatepickerDayView_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n      }\n    },\n    styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-btn-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: `{{ i18n.getDayNumerals(date) }}`,\n      styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-btn-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigationSelect {\n  constructor(i18n, _renderer) {\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n\n  changeMonth(month) {\n    this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n  }\n\n  changeYear(year) {\n    this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n  }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n    return new (t || NgbDatepickerNavigationSelect)(i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbDatepickerNavigationSelect,\n    selectors: [[\"ngb-datepicker-navigation-select\"]],\n    viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c11, 7, ElementRef);\n        i0.ɵɵviewQuery(_c12, 7, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n      }\n    },\n    inputs: {\n      date: \"date\",\n      disabled: \"disabled\",\n      months: \"months\",\n      years: \"years\"\n    },\n    outputs: {\n      select: \"select\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 6,\n    vars: 4,\n    consts: function () {\n      let i18n_13;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_14 = goog.getMsg(\"Select month\");\n        i18n_13 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_14;\n      } else {\n        i18n_13 = $localize`:@@ngb.datepicker.select-month:Select month`;\n      }\n\n      let i18n_15;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_16 = goog.getMsg(\"Select month\");\n        i18n_15 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_16;\n      } else {\n        i18n_15 = $localize`:@@ngb.datepicker.select-month:Select month`;\n      }\n\n      let i18n_17;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_18 = goog.getMsg(\"Select year\");\n        i18n_17 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_18;\n      } else {\n        i18n_17 = $localize`:@@ngb.datepicker.select-year:Select year`;\n      }\n\n      let i18n_19;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_20 = goog.getMsg(\"Select year\");\n        i18n_19 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_20;\n      } else {\n        i18n_19 = $localize`:@@ngb.datepicker.select-year:Select year`;\n      }\n\n      return [[\"aria-label\", i18n_13, \"title\", i18n_15, 1, \"form-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_17, \"title\", i18n_19, 1, \"form-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n    },\n    template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"select\", 0, 1);\n        i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n          return ctx.changeMonth($event.target.value);\n        });\n        i0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"select\", 3, 4);\n        i0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n          return ctx.changeYear($event.target.value);\n        });\n        i0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.months);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.years);\n      }\n    },\n    dependencies: [NgFor],\n    styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      standalone: true,\n      imports: [NgFor],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t}}</option> </select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t</select>\n\t`,\n      styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    select: [{\n      type: Output\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nclass NgbDatepickerNavigation {\n  constructor(i18n) {\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  onClickPrev(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event) {\n    event.currentTarget.focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n    return new (t || NgbDatepickerNavigation)(i0.ɵɵdirectiveInject(NgbDatepickerI18n));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbDatepickerNavigation,\n    selectors: [[\"ngb-datepicker-navigation\"]],\n    inputs: {\n      date: \"date\",\n      disabled: \"disabled\",\n      months: \"months\",\n      showSelect: \"showSelect\",\n      prevDisabled: \"prevDisabled\",\n      nextDisabled: \"nextDisabled\",\n      selectBoxes: \"selectBoxes\"\n    },\n    outputs: {\n      navigate: \"navigate\",\n      select: \"select\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 4,\n    consts: function () {\n      let i18n_21;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_22 = goog.getMsg(\"Previous month\");\n        i18n_21 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_22;\n      } else {\n        i18n_21 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n      }\n\n      let i18n_23;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_24 = goog.getMsg(\"Previous month\");\n        i18n_23 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_24;\n      } else {\n        i18n_23 = $localize`:@@ngb.datepicker.previous-month:Previous month`;\n      }\n\n      let i18n_25;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_26 = goog.getMsg(\"Next month\");\n        i18n_25 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_26;\n      } else {\n        i18n_25 = $localize`:@@ngb.datepicker.next-month:Next month`;\n      }\n\n      let i18n_27;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_28 = goog.getMsg(\"Next month\");\n        i18n_27 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_28;\n      } else {\n        i18n_27 = $localize`:@@ngb.datepicker.next-month:Next month`;\n      }\n\n      return [[1, \"ngb-dp-arrow\", \"ngb-dp-arrow-prev\"], [\"type\", \"button\", \"aria-label\", i18n_21, \"title\", i18n_23, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"ngb-dp-arrow-next\"], [\"type\", \"button\", \"aria-label\", i18n_25, \"title\", i18n_27, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"], [1, \"ngb-dp-arrow\"]];\n    },\n    template: function NgbDatepickerNavigation_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n          return ctx.onClickPrev($event);\n        });\n        i0.ɵɵelement(2, \"span\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n        i0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, null, 4);\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n          return ctx.onClickNext($event);\n        });\n        i0.ɵɵelement(7, \"span\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n      }\n    },\n    dependencies: [NgIf, NgFor, NgbDatepickerNavigationSelect],\n    styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      standalone: true,\n      imports: [NgIf, NgFor, NgbDatepickerNavigationSelect],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t<ngb-datepicker-navigation-select\n\t\t\t*ngIf=\"showSelect\"\n\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t[date]=\"date\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t(select)=\"select.emit($event)\"\n\t\t>\n\t\t</ngb-datepicker-navigation-select>\n\n\t\t<ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t</div>\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n\t\t</ng-template>\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`,\n      styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }]\n  });\n})();\n\nvar Key;\n\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n\n\nclass NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event, datepicker) {\n    const {\n      state,\n      calendar\n    } = datepicker;\n    /* eslint-disable-next-line deprecation/deprecation */\n\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n    return new (t || NgbDatepickerKeyboardService)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerKeyboardService,\n    factory: NgbDatepickerKeyboardService.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n\n\nclass NgbDatepickerConfig {\n  constructor() {\n    this.displayMonths = 1;\n    this.firstDayOfWeek = 1;\n    this.navigation = 'select';\n    this.outsideDays = 'visible';\n    this.showWeekNumbers = false;\n    this.weekdays = TranslationWidth.Short;\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerConfig_Factory(t) {\n    return new (t || NgbDatepickerConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerConfig,\n    factory: NgbDatepickerConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n\n\nclass NgbDateAdapter {\n  static #_ = this.ɵfac = function NgbDateAdapter_Factory(t) {\n    return new (t || NgbDateAdapter)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateAdapter,\n    factory: function () {\n      return NGB_DATEPICKER_DATE_ADAPTER_FACTORY();\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateStructAdapter extends NgbDateAdapter {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n      year: date.year,\n      month: date.month,\n      day: date.day\n    } : null;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbDateStructAdapter_BaseFactory;\n    return function NgbDateStructAdapter_Factory(t) {\n      return (ɵNgbDateStructAdapter_BaseFactory || (ɵNgbDateStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateStructAdapter)))(t || NgbDateStructAdapter);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateStructAdapter,\n    factory: NgbDateStructAdapter.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n\n\nclass NgbDatepickerContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerContent_Factory(t) {\n    return new (t || NgbDatepickerContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDatepickerContent,\n    selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n\n\nclass NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  set month(month) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  constructor(i18n, datepicker, _keyboardService, _service) {\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n\n  onKeyDown(event) {\n    this._keyboardService.processKey(event, this.datepicker);\n  }\n\n  doSelect(day) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbDatepickerMonth_Factory(t) {\n    return new (t || NgbDatepickerMonth)(i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(forwardRef(() => NgbDatepicker)), i0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), i0.ɵɵdirectiveInject(NgbDatepickerService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbDatepickerMonth,\n    selectors: [[\"ngb-datepicker-month\"]],\n    hostAttrs: [\"role\", \"grid\"],\n    hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    },\n    inputs: {\n      month: \"month\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek small\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\", \"small\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NgbDatepickerMonth_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n        i0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.viewModel.weekdays.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n      }\n    },\n    dependencies: [NgIf, NgFor, NgTemplateOutlet],\n    styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      standalone: true,\n      imports: [NgIf, NgFor, NgTemplateOutlet],\n      host: {\n        role: 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: `\n\t\t<div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{\n\t\t\t\ti18n.getWeekLabel()\n\t\t\t}}</div>\n\t\t\t<div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{\n\t\t\t\tweekday\n\t\t\t}}</div>\n\t\t</div>\n\t\t<ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n\t\t\t<div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{\n\t\t\t\t\ti18n.getWeekNumerals(week.number)\n\t\t\t\t}}</div>\n\t\t\t\t<div\n\t\t\t\t\t*ngFor=\"let day of week.days\"\n\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template [ngIf]=\"!day.hidden\">\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"datepicker.dayTemplate\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"day.context\"\n\t\t\t\t\t\t></ng-template>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDatepicker)]\n      }]\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n\n\nclass NgbDatepicker {\n  constructor(_service, _calendar, _i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    this._service = _service;\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this.injector = inject(Injector);\n    this._controlValue = null;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\n     * An event emitted right before the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 5.2.0\n     */\n\n    this.dateSelect = new EventEmitter();\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    ['contentTemplate', 'dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekNumbers', 'startDate', 'weekdays'].forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => {\n      this.dateSelect.emit(date);\n    });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null; // update public state\n\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n      let navigationPrevented = false; // emitting navigation event if the first month changes\n\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: () => navigationPrevented = true\n        }); // can't prevent the very first navigation\n\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n      this.model = model; // handling selection change\n\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      } // handling focus change\n\n\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n\n\n  get state() {\n    return this._publicState;\n  }\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n\n\n  get calendar() {\n    return this._calendar;\n  }\n  /**\n   * Returns the i18n service used in the specific datepicker instance.\n   *\n   * @since 14.2.0\n   */\n\n\n  get i18n() {\n    return this._i18n;\n  }\n  /**\n   *  Focuses on given date.\n   */\n\n\n  focusDate(date) {\n    this._service.focus(NgbDate.from(date));\n  }\n  /**\n   *  Selects focused date.\n   */\n\n\n  focusSelect() {\n    this._service.focusSelect();\n  }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    this._service.open(NgbDate.from(date ? date.day ? date : { ...date,\n      day: 1\n    } : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n      const {\n        nativeElement\n      } = this._elementRef; // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n\n      merge(focusIns$, focusOuts$).pipe(filter(({\n        target,\n        relatedTarget\n      }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$)).subscribe(({\n        type\n      }) => this._ngZone.run(() => this._service.set({\n        focusVisible: type === 'focusin'\n      })));\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed$.next();\n  }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].forEach(name => inputs[name] = this[name]);\n\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes) {\n    const inputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays', 'weekdays'].filter(name => name in changes).forEach(name => inputs[name] = this[name]);\n\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {\n        currentValue,\n        previousValue\n      } = changes.startDate;\n\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date) {\n    this._service.focus(date);\n\n    this._service.select(date, {\n      emitEvent: true\n    });\n  }\n\n  onNavigateDateSelect(date) {\n    this._service.open(date);\n  }\n\n  onNavigateEvent(event) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n\n        break;\n\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n\n        break;\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled) {\n    this._service.set({\n      disabled\n    });\n  }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\n    this._service.select(this._controlValue);\n  }\n\n  static #_ = this.ɵfac = function NgbDatepicker_Factory(t) {\n    return new (t || NgbDatepicker)(i0.ɵɵdirectiveInject(NgbDatepickerService), i0.ɵɵdirectiveInject(NgbCalendar), i0.ɵɵdirectiveInject(NgbDatepickerI18n), i0.ɵɵdirectiveInject(NgbDatepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgbDateAdapter), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbDatepicker,\n    selectors: [[\"ngb-datepicker\"]],\n    contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbDatepickerContent, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplateFromContent = _t.first);\n      }\n    },\n    viewQuery: function NgbDatepicker_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c29, 7);\n        i0.ɵɵviewQuery(_c30, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbDatepicker_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"disabled\", ctx.model.disabled);\n      }\n    },\n    inputs: {\n      contentTemplate: \"contentTemplate\",\n      dayTemplate: \"dayTemplate\",\n      dayTemplateData: \"dayTemplateData\",\n      displayMonths: \"displayMonths\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      footerTemplate: \"footerTemplate\",\n      markDisabled: \"markDisabled\",\n      maxDate: \"maxDate\",\n      minDate: \"minDate\",\n      navigation: \"navigation\",\n      outsideDays: \"outsideDays\",\n      showWeekNumbers: \"showWeekNumbers\",\n      startDate: \"startDate\",\n      weekdays: \"weekdays\"\n    },\n    outputs: {\n      navigate: \"navigate\",\n      dateSelect: \"dateSelect\"\n    },\n    exportAs: [\"ngbDatepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgbDatepicker),\n      multi: true\n    }, NgbDatepickerService]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 9,\n    consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", \"ngTemplateOutletInjector\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n    template: function NgbDatepicker_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4, 5);\n        i0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 7);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || (ctx.contentTemplateFromContent == null ? null : ctx.contentTemplateFromContent.templateRef) || _r2)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c31, ctx))(\"ngTemplateOutletInjector\", ctx.injector);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n      }\n    },\n    dependencies: [NgIf, NgFor, NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation],\n    styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      standalone: true,\n      imports: [NgIf, NgFor, NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class.disabled]': 'model.disabled'\n      },\n      template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t<div *ngFor=\"let month of model.months; let i = index\" class=\"ngb-dp-month\">\n\t\t\t\t<div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t<ngb-datepicker-navigation\n\t\t\t\t*ngIf=\"navigation !== 'none'\"\n\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t[months]=\"model.months\"\n\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t>\n\t\t\t</ngb-datepicker-navigation>\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t></ng-template>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n\t`,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbDatepicker),\n        multi: true\n      }, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    contentTemplateFromContent: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }]\n  });\n})();\n\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null; // we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n\n\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})(); // setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n\n\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n      const shouldCloseOnClick = event => {\n        const element = event.target;\n\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        }\n        /* if (type === true) */\n        else {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape), tap(e => e.preventDefault())); // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n\n      const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n      race([escapes$.pipe(map(_ => 0\n      /* SOURCE.ESCAPE */\n      )), closeableClicks$.pipe(map(_ => 1\n      /* SOURCE.CLICK */\n      ))]).subscribe(source => zone.run(() => close(source)));\n    }));\n  }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\n\nfunction getFocusableBoundaryElements(element) {\n  const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\n\n\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n  zone.runOutsideAngular(() => {\n    // last focused element\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target)); // 'tab' / 'shift+tab' stream\n\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$),\n    /* eslint-disable-next-line deprecation/deprecation */\n    filter(e => e.which === Key.Tab), withLatestFrom(lastFocusedElement$)).subscribe(([tabEvent, focusedElement]) => {\n      const [first, last] = getFocusableBoundaryElements(element);\n\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    }); // inside click\n\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1])).subscribe(lastFocusedElement => lastFocusedElement.focus());\n    }\n  });\n};\n\nclass NgbRTL {\n  constructor(document) {\n    this._element = document.documentElement;\n  }\n\n  isRTL() {\n    return (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n  }\n\n  static #_ = this.ɵfac = function NgbRTL_Factory(t) {\n    return new (t || NgbRTL)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbRTL,\n    factory: NgbRTL.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRTL, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\n\nconst bootstrapPopperMatches = {\n  top: ['top'],\n  bottom: ['bottom'],\n  start: ['left', 'right'],\n  left: ['left'],\n  end: ['right', 'left'],\n  right: ['right'],\n  'top-start': ['top-start', 'top-end'],\n  'top-left': ['top-start'],\n  'top-end': ['top-end', 'top-start'],\n  'top-right': ['top-end'],\n  'bottom-start': ['bottom-start', 'bottom-end'],\n  'bottom-left': ['bottom-start'],\n  'bottom-end': ['bottom-end', 'bottom-start'],\n  'bottom-right': ['bottom-end'],\n  'start-top': ['left-start', 'right-start'],\n  'left-top': ['left-start'],\n  'start-bottom': ['left-end', 'right-end'],\n  'left-bottom': ['left-end'],\n  'end-top': ['right-start', 'left-start'],\n  'right-top': ['right-start'],\n  'end-bottom': ['right-end', 'left-end'],\n  'right-bottom': ['right-end']\n};\n\nfunction getPopperClassPlacement(placement, isRTL) {\n  const [leftClass, rightClass] = bootstrapPopperMatches[placement];\n  return isRTL ? rightClass || leftClass : leftClass;\n}\n\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\n\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n  let [primary, secondary] = placement.split('-');\n  const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n  let classnames = [newPrimary];\n\n  if (secondary) {\n    let newSecondary = secondary;\n\n    if (primary === 'left' || primary === 'right') {\n      newSecondary = newSecondary.replace(popperStartSecondaryPlacement, 'top').replace(popperEndSecondaryPlacement, 'bottom');\n    }\n\n    classnames.push(`${newPrimary}-${newSecondary}`);\n  }\n\n  if (baseClass) {\n    classnames = classnames.map(classname => `${baseClass}-${classname}`);\n  }\n\n  return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\n\n\nfunction getPopperOptions({\n  placement,\n  baseClass\n}, rtl) {\n  let placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator); // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n\n  const allowedPlacements = ['top', 'bottom', 'start', 'end', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'start-top', 'start-bottom', 'end-top', 'end-bottom']; // replace auto placement with other placements\n\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  }\n\n  const popperPlacements = placementVals.map(_placement => {\n    return getPopperClassPlacement(_placement, rtl.isRTL());\n  });\n  let mainPlacement = popperPlacements.shift();\n  const bsModifier = {\n    name: 'bootstrapClasses',\n    enabled: !!baseClass,\n    phase: 'write',\n\n    fn({\n      state\n    }) {\n      const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n      const popperElement = state.elements.popper;\n      const popperPlacement = state.placement;\n      let className = popperElement.className; // Remove old bootstrap classes\n\n      className = className.replace(bsClassRegExp, ''); // Add current placements\n\n      className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`; // Remove multiple spaces\n\n      className = className.trim().replace(spacesRegExp, ' '); // Reassign\n\n      popperElement.className = className;\n    }\n\n  };\n  return {\n    placement: mainPlacement,\n    modifiers: [bsModifier, flip, preventOverflow, arrow, {\n      enabled: true,\n      name: 'flip',\n      options: {\n        fallbackPlacements: popperPlacements\n      }\n    }, {\n      enabled: true,\n      name: 'preventOverflow',\n      phase: 'main',\n      fn: function () {}\n    }]\n  };\n}\n\nfunction noop(arg) {\n  return arg;\n}\n\nfunction ngbPositioning() {\n  const rtl = inject(NgbRTL);\n  let popperInstance = null;\n  return {\n    createPopper(positioningOption) {\n      if (!popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n        popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n      }\n    },\n\n    update() {\n      if (popperInstance) {\n        popperInstance.update();\n      }\n    },\n\n    setOptions(positioningOption) {\n      if (popperInstance) {\n        const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n        let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n        popperInstance.setOptions(popperOptions);\n      }\n    },\n\n    destroy() {\n      if (popperInstance) {\n        popperInstance.destroy();\n        popperInstance = null;\n      }\n    }\n\n  };\n}\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  constructor() {\n    super(...arguments);\n    this.autoClose = true;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\n    this.popperOptions = options => options;\n\n    this.restoreFocus = true;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbInputDatepickerConfig_BaseFactory;\n    return function NgbInputDatepickerConfig_Factory(t) {\n      return (ɵNgbInputDatepickerConfig_BaseFactory || (ɵNgbInputDatepickerConfig_BaseFactory = i0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig)))(t || NgbInputDatepickerConfig);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbInputDatepickerConfig,\n    factory: NgbInputDatepickerConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction addPopperOffset(offset$1) {\n  return options => {\n    options.modifiers.push(offset, {\n      name: 'offset',\n      options: {\n        offset: () => offset$1\n      }\n    });\n    return options;\n  };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n\n\nclass NgbDateParserFormatter {\n  static #_ = this.ɵfac = function NgbDateParserFormatter_Factory(t) {\n    return new (t || NgbDateParserFormatter)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateParserFormatter,\n    factory: function () {\n      return NGB_DATEPICKER_PARSER_FORMATTER_FACTORY();\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value) {\n    if (value != null) {\n      const dateParts = value.trim().split('-');\n\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: null,\n          day: null\n        };\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: null\n        };\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {\n          year: toInteger(dateParts[0]),\n          month: toInteger(dateParts[1]),\n          day: toInteger(dateParts[2])\n        };\n      }\n    }\n\n    return null;\n  }\n\n  format(date) {\n    return date ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` : '';\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbDateISOParserFormatter_BaseFactory;\n    return function NgbDateISOParserFormatter_Factory(t) {\n      return (ɵNgbDateISOParserFormatter_BaseFactory || (ɵNgbDateISOParserFormatter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter)))(t || NgbDateISOParserFormatter);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateISOParserFormatter,\n    factory: NgbDateISOParserFormatter.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n\n\nclass NgbInputDatepicker {\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = value === '' || value && value !== 'false';\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  constructor(_parserFormatter, _elRef, _vcRef, _renderer, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    this._model = null;\n    this._destroyCloseHandlers$ = new Subject();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 1.1.1\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\n     * Event emitted right after the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event fired after closing datepicker window.\n     *\n     * @since 4.2.0\n     */\n\n    this.closed = new EventEmitter();\n\n    this._onChange = _ => {};\n\n    this._onTouched = () => {};\n\n    this._validatorChange = () => {};\n\n    ['autoClose', 'container', 'positionTarget', 'placement', 'popperOptions'].forEach(input => this[input] = config[input]);\n    this._positioning = ngbPositioning();\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this._validatorChange = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  validate(c) {\n    const {\n      value\n    } = c;\n\n    if (value != null) {\n      const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      if (!ngbDate) {\n        return {\n          ngbDate: {\n            invalid: value\n          }\n        };\n      }\n\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {\n          ngbDate: {\n            minDate: {\n              minDate: this.minDate,\n              actual: value\n            }\n          }\n        };\n      }\n\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {\n          ngbDate: {\n            maxDate: {\n              maxDate: this.maxDate,\n              actual: value\n            }\n          }\n        };\n      }\n    }\n\n    return null;\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n    }\n\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() {\n    return !!this._cRef;\n  }\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n\n\n  open() {\n    if (!this.isOpen()) {\n      this._cRef = this._vcRef.createComponent(NgbDatepicker);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n\n      this._applyDatepickerInputs(this._cRef);\n\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n\n      this._cRef.instance.ngOnInit();\n\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling\n\n\n      this._cRef.instance.registerOnChange(selectedDate => {\n        this.writeValue(selectedDate);\n\n        this._onChange(selectedDate);\n\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      } // focus handling\n\n\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      setTimeout(() => this._cRef?.instance.focus());\n      let hostElement;\n\n      if (isString(this.positionTarget)) {\n        hostElement = this._document.querySelector(this.positionTarget);\n      } else if (this.positionTarget instanceof HTMLElement) {\n        hostElement = this.positionTarget;\n      } else {\n        hostElement = this._elRef.nativeElement;\n      } // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        if (this._cRef) {\n          this._positioning.createPopper({\n            hostElement,\n            targetElement: this._cRef.location.nativeElement,\n            placement: this.placement,\n            appendToBody: this.container === 'body',\n            updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n          });\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        }\n      });\n\n      if (this.positionTarget && !hostElement) {\n        throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n      }\n\n      this._setCloseHandlers();\n    }\n  }\n  /**\n   * Closes the datepicker popup.\n   */\n\n\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n\n      this._cRef = null;\n\n      this._positioning.destroy();\n\n      this._zoneSubscription?.unsubscribe();\n\n      this._destroyCloseHandlers$.next();\n\n      this.closed.emit();\n\n      this._changeDetector.markForCheck(); // restore focus\n\n\n      let elementToFocus = this._elWithFocus;\n\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      } // in IE document.activeElement can contain an object without 'focus()' sometimes\n\n\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n  /**\n   * Toggles the datepicker popup.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n\n\n  navigateTo(date) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() {\n    this._onTouched();\n  }\n\n  onFocus() {\n    this._elWithFocus = this._elRef.nativeElement;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this.minDate;\n        }\n\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this.maxDate;\n        }\n\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n\n    if (changes['datepickerClass']) {\n      const {\n        currentValue,\n        previousValue\n      } = changes['datepickerClass'];\n\n      this._applyPopupClass(currentValue, previousValue);\n    }\n\n    if (changes['autoClose'] && this.isOpen()) {\n      this._setCloseHandlers();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  _applyDatepickerInputs(datepickerComponentRef) {\n    ['contentTemplate', 'dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekNumbers', 'weekdays'].forEach(inputName => {\n      if (this[inputName] !== undefined) {\n        datepickerComponentRef.setInput(inputName, this[inputName]);\n      }\n    });\n    datepickerComponentRef.setInput('startDate', this.startDate || this._model);\n  }\n\n  _applyPopupClass(newClass, oldClass) {\n    const popupEl = this._cRef?.location.nativeElement;\n\n    if (popupEl) {\n      if (newClass) {\n        this._renderer.addClass(popupEl, newClass);\n      }\n\n      if (oldClass) {\n        this._renderer.removeClass(popupEl, oldClass);\n      }\n    }\n  }\n\n  _applyPopupStyling(nativeElement) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n\n    this._applyPopupClass(this.datepickerClass);\n  }\n\n  _subscribeForDatepickerOutputs(datepickerInstance) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  _writeModelValue(model) {\n    const value = this._parserFormatter.format(model);\n\n    this._inputValue = value;\n\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n\n      this._onTouched();\n    }\n  }\n\n  _fromDateStruct(date) {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  _setCloseHandlers() {\n    this._destroyCloseHandlers$.next();\n\n    ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n  }\n\n  static #_ = this.ɵfac = function NgbInputDatepicker_Factory(t) {\n    return new (t || NgbInputDatepicker)(i0.ɵɵdirectiveInject(NgbDateParserFormatter), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(NgbCalendar), i0.ɵɵdirectiveInject(NgbDateAdapter), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbInputDatepicker,\n    selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n    hostVars: 1,\n    hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n          return ctx.manualDateChange($event.target.value);\n        })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n          return ctx.manualDateChange($event.target.value, true);\n        })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      autoClose: \"autoClose\",\n      contentTemplate: \"contentTemplate\",\n      datepickerClass: \"datepickerClass\",\n      dayTemplate: \"dayTemplate\",\n      dayTemplateData: \"dayTemplateData\",\n      displayMonths: \"displayMonths\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      footerTemplate: \"footerTemplate\",\n      markDisabled: \"markDisabled\",\n      minDate: \"minDate\",\n      maxDate: \"maxDate\",\n      navigation: \"navigation\",\n      outsideDays: \"outsideDays\",\n      placement: \"placement\",\n      popperOptions: \"popperOptions\",\n      restoreFocus: \"restoreFocus\",\n      showWeekNumbers: \"showWeekNumbers\",\n      startDate: \"startDate\",\n      container: \"container\",\n      positionTarget: \"positionTarget\",\n      weekdays: \"weekdays\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      dateSelect: \"dateSelect\",\n      navigate: \"navigate\",\n      closed: \"closed\"\n    },\n    exportAs: [\"ngbDatepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgbInputDatepicker),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => NgbInputDatepicker),\n      multi: true\n    }, {\n      provide: NgbDatepickerConfig,\n      useExisting: NgbInputDatepickerConfig\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      standalone: true,\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => NgbInputDatepicker),\n        multi: true\n      }, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    autoClose: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: Input\n    }],\n    datepickerClass: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    popperOptions: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }],\n    weekdays: [{\n      type: Input\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbCalendarHijri extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return this._setDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return this.fromGregorian(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n  }\n\n  _setDay(date, day) {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n\n    date.day = day;\n    return date;\n  }\n\n  _setMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  _setYear(date, year) {\n    date.year = +year;\n    return date;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarHijri_BaseFactory;\n    return function NgbCalendarHijri_Factory(t) {\n      return (ɵNgbCalendarHijri_BaseFactory || (ɵNgbCalendarHijri_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHijri)))(t || NgbCalendarHijri);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarHijri,\n    factory: NgbCalendarHijri.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Checks if islamic year is a leap year\n */\n\n\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\n\n\nfunction isGregorianLeapYear$1(gDate) {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\n\n\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\n\n\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\n\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate) {\n    const gYear = gDate.getFullYear(),\n          gMonth = gDate.getMonth(),\n          gDay = gDate.getDate();\n    let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n    const wjd = Math.floor(julianDay - 0.5) + 0.5,\n          depoch = wjd - GREGORIAN_EPOCH$1,\n          quadricent = Math.floor(depoch / 146097),\n          dqc = mod$1(depoch, 146097),\n          cent = Math.floor(dqc / 36524),\n          dcent = mod$1(dqc, 36524),\n          quad = Math.floor(dcent / 1461),\n          dquad = mod$1(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH$1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n    const yearday = wjd - gYearStart;\n    const tjd = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH$1 - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n    const day = wjd - tjd2 + 1;\n    return new Date(year, month - 1, day);\n  }\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n\n\n  getDaysPerMonth(month, year) {\n    year = year + Math.floor(month / 13);\n    month = (month - 1) % 12 + 1;\n    let length = 29 + month % 2;\n\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarIslamicCivil_BaseFactory;\n    return function NgbCalendarIslamicCivil_Factory(t) {\n      return (ɵNgbCalendarIslamicCivil_BaseFactory || (ɵNgbCalendarIslamicCivil_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil)))(t || NgbCalendarIslamicCivil);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarIslamicCivil,\n    factory: NgbCalendarIslamicCivil.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600\n'001010011101'];\n\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n   * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n   * `gdate` is s JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate) {\n    let hDay = 1,\n        hMonth = 0,\n        hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n\n      return null;\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n\n\n  toGregorian(hDate) {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n\n    return gDate;\n  }\n  /**\n   * Returns the number of days in a specific Hijri hMonth.\n   * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n   * `hYear` is any Hijri hYear.\n   */\n\n\n  getDaysPerMonth(hMonth, hYear) {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarIslamicUmalqura_BaseFactory;\n    return function NgbCalendarIslamicUmalqura_Factory(t) {\n      return (ɵNgbCalendarIslamicUmalqura_BaseFactory || (ɵNgbCalendarIslamicUmalqura_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura)))(t || NgbCalendarIslamicUmalqura);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarIslamicUmalqura,\n    factory: NgbCalendarIslamicUmalqura.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$2(jalaliDate) {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\n\n\nfunction fromGregorian$2(gdate) {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nfunction setJalaliDay(date, day) {\n  let mDays = getDaysPerMonth(date.month, date.year);\n\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n\n  date.day = day;\n  return date;\n}\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n\n\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  } // Find the limiting years for the Jalali year jalaliYear.\n\n\n  let jump;\n\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n\n    if (jalaliYear < jm) {\n      break;\n    }\n\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n\n  let n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  } // And the same in the Gregorian calendar (until the year gYear).\n\n\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.\n\n  const march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.\n\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n\n\nfunction julianToGregorian(julianDayNumber) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction gregorianToJulian(gy, gm, gd) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n\n\nfunction julianToJalali(julianDayNumber) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear(),\n      // Calculate Gregorian year (gy).\n  jalaliYear = gy - 621,\n      r = jalCal(jalaliYear),\n      gregorianDay = gregorianToJulian(gy, 3, r.march),\n      jalaliDay,\n      jalaliMonth,\n      numberOfDays; // Find number of days that passed since 1 Farvardin.\n\n  numberOfDays = julianDayNumber - gregorianDay;\n\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\n\n\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n\n  if (month <= 11) {\n    return 30;\n  }\n\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n\n  return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths() {\n    return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian$2(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n    const jsDate = toGregorian$2(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    const startDate = toGregorian$2(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday() {\n    return fromGregorian$2(new Date());\n  }\n\n  isValid(date) {\n    return date != null && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian$2(date).getTime());\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarPersian_BaseFactory;\n    return function NgbCalendarPersian_Factory(t) {\n      return (ɵNgbCalendarPersian_BaseFactory || (ɵNgbCalendarPersian_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarPersian)))(t || NgbCalendarPersian);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarPersian,\n    factory: NgbCalendarPersian.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year) {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  let dayOfWeek = dayNumber % 7; // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month, year) {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nfunction isHebrewLeapYear(year) {\n  if (year != null) {\n    let b = (year * 12 + 17) % 19;\n    return b >= (b < 0 ? -7 : 12);\n  }\n\n  return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewMonth(month, year) {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\n\nfunction getDayNumberInHebrewYear(date) {\n  let numberOfDay = 0;\n\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n\n  return numberOfDay + date.day;\n}\n\nfunction setHebrewMonth(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n\nfunction setHebrewDay(date, val) {\n  let after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\n\n\nfunction fromGregorian$1(gdate) {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(),\n        gMonth = date.getMonth(),\n        gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n\n  let hMonth = 1;\n  let hDay = dayOfYear;\n\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$1(hebrewDate) {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n\n  if (!after) {\n    diffDays = -diffDays;\n  }\n\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = ['\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6', '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = ['', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea', '\\u05ea\\u05ea\\u05e7'];\n  const hArray1000_9000 = ['', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1', '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'];\n  const geresh = '\\u05f3',\n        gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n\n  while (numerals > 0) {\n    let m = numerals % 10;\n\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n\n      break;\n    }\n\n    numerals = Math.floor(numerals / 10);\n\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n\n    step++;\n  }\n\n  result = result.join('').split('');\n\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n\n  return result.join('');\n}\n/**\n * @since 3.2.0\n */\n\n\nclass NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() {\n    return 7;\n  }\n\n  getMonths(year) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() {\n    return 6;\n  }\n\n  isValid(date) {\n    if (date != null) {\n      let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian$1(date).getTime());\n    }\n\n    return false;\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n\n      case 'd':\n        return setHebrewDay(date, number);\n\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    const day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday() {\n    return fromGregorian$1(new Date());\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  toGregorian(date) {\n    return fromJSDate(toGregorian$1(date));\n  }\n  /**\n   * @since 3.4.0\n   */\n\n\n  fromGregorian(date) {\n    return fromGregorian$1(toJSDate(date));\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarHebrew_BaseFactory;\n    return function NgbCalendarHebrew_Factory(t) {\n      return (ɵNgbCalendarHebrew_BaseFactory || (ɵNgbCalendarHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarHebrew)))(t || NgbCalendarHebrew);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarHebrew,\n    factory: NgbCalendarHebrew.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\n\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month, year) {\n    return this.getMonthFullName(month, year);\n  }\n\n  getMonthFullName(month, year) {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n  }\n\n  getWeekdayLabel(weekday, width) {\n    return WEEKDAYS[weekday - 1] || '';\n  }\n\n  getDayAriaLabel(date) {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date) {\n    return hebrewNumerals(date.day);\n  }\n\n  getWeekNumerals(weekNumber) {\n    return hebrewNumerals(weekNumber);\n  }\n\n  getYearNumerals(year) {\n    return hebrewNumerals(year);\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbDatepickerI18nHebrew_BaseFactory;\n    return function NgbDatepickerI18nHebrew_Factory(t) {\n      return (ɵNgbDatepickerI18nHebrew_BaseFactory || (ɵNgbDatepickerI18nHebrew_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew)))(t || NgbDatepickerI18nHebrew);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDatepickerI18nHebrew,\n    factory: NgbDatepickerI18nHebrew.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\n\n\nfunction toGregorian(date) {\n  return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\n\n\nfunction fromGregorian(gdate) {\n  return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n/**\n * @since 9.1.0\n */\n\n\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n  getToday() {\n    return fromGregorian(new Date());\n  }\n\n  getNext(date, period = 'd', number = 1) {\n    let jsDate = toGregorian(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n\n        break;\n\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromGregorian(jsDate);\n  }\n\n  getPrev(date, period = 'd', number = 1) {\n    return this.getNext(date, period, -number);\n  }\n\n  getWeekday(date) {\n    let jsDate = toGregorian(date);\n    let day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week, firstDayOfWeek) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n    const time = jsDate.getTime();\n    jsDate.setMonth(0); // Compare with Jan 1\n\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  isValid(date) {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    } // year 0 doesn't exist in Gregorian calendar\n\n\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toGregorian(date);\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year - 543 && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbCalendarBuddhist_BaseFactory;\n    return function NgbCalendarBuddhist_Factory(t) {\n      return (ɵNgbCalendarBuddhist_BaseFactory || (ɵNgbCalendarBuddhist_BaseFactory = i0.ɵɵgetInheritedFactory(NgbCalendarBuddhist)))(t || NgbCalendarBuddhist);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbCalendarBuddhist,\n    factory: NgbCalendarBuddhist.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbCalendarBuddhist, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n\n\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date) {\n    return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n  }\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n\n\n  toModel(date) {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n  }\n\n  _fromNativeDate(date) {\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion\n\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbDateNativeAdapter_BaseFactory;\n    return function NgbDateNativeAdapter_Factory(t) {\n      return (ɵNgbDateNativeAdapter_BaseFactory || (ɵNgbDateNativeAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeAdapter)))(t || NgbDateNativeAdapter);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateNativeAdapter,\n    factory: NgbDateNativeAdapter.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n\n\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  _fromNativeDate(date) {\n    return {\n      year: date.getUTCFullYear(),\n      month: date.getUTCMonth() + 1,\n      day: date.getUTCDate()\n    };\n  }\n\n  _toNativeDate(date) {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion\n\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbDateNativeUTCAdapter_BaseFactory;\n    return function NgbDateNativeUTCAdapter_Factory(t) {\n      return (ɵNgbDateNativeUTCAdapter_BaseFactory || (ɵNgbDateNativeUTCAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter)))(t || NgbDateNativeUTCAdapter);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDateNativeUTCAdapter,\n    factory: NgbDateNativeUTCAdapter.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n\nclass NgbDatepickerModule {\n  static #_ = this.ɵfac = function NgbDatepickerModule_Factory(t) {\n    return new (t || NgbDatepickerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbDatepickerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      exports: NGB_DATEPICKER_DIRECTIVES,\n      imports: NGB_DATEPICKER_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n\n\nclass NgbDropdownConfig {\n  constructor() {\n    this.autoClose = true;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\n    this.popperOptions = options => options;\n  }\n\n  static #_ = this.ɵfac = function NgbDropdownConfig_Factory(t) {\n    return new (t || NgbDropdownConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbDropdownConfig,\n    factory: NgbDropdownConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @deprecated 14.2.0 this directive isn't useful anymore. You can remove it from your imports\n */\n\n\nclass NgbNavbar {\n  static #_ = this.ɵfac = function NgbNavbar_Factory(t) {\n    return new (t || NgbNavbar)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavbar,\n    selectors: [[\"\", 8, \"navbar\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar',\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n\n\nclass NgbDropdownItem {\n  set disabled(value) {\n    this._disabled = value === '' || value === true; // accept an empty attribute as true\n    // note: we don't use a host binding for disabled because when used on links, it fails because links don't have a\n    // disabled property\n    // setting the property using the renderer, OTOH, works fine in both cases.\n\n    this._renderer.setProperty(this.elementRef.nativeElement, 'disabled', this._disabled);\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  constructor(elementRef, _renderer) {\n    this.elementRef = elementRef;\n    this._renderer = _renderer;\n    this._disabled = false;\n  }\n\n  static #_ = this.ɵfac = function NgbDropdownItem_Factory(t) {\n    return new (t || NgbDropdownItem)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDropdownItem,\n    selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n    hostAttrs: [1, \"dropdown-item\"],\n    hostVars: 3,\n    hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabIndex\", ctx.disabled ? -1 : 0);\n        i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      standalone: true,\n      host: {\n        class: 'dropdown-item',\n        '[class.disabled]': 'disabled',\n        '[tabIndex]': 'disabled ? -1 : 0'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n\n\nclass NgbDropdownMenu {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.placement = 'bottom';\n    this.isOpen = false;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n  static #_ = this.ɵfac = function NgbDropdownMenu_Factory(t) {\n    return new (t || NgbDropdownMenu)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDropdownMenu,\n    selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n    contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Tab\", function NgbDropdownMenu_keydown_Tab_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Shift.Tab\", function NgbDropdownMenu_keydown_Shift_Tab_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      standalone: true,\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbDropdown,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n\n\nclass NgbDropdownAnchor {\n  constructor(dropdown, _elementRef) {\n    this.dropdown = dropdown;\n    this.nativeElement = _elementRef.nativeElement;\n  }\n\n  static #_ = this.ɵfac = function NgbDropdownAnchor_Factory(t) {\n    return new (t || NgbDropdownAnchor)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDropdownAnchor,\n    selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n    hostAttrs: [1, \"dropdown-toggle\"],\n    hostVars: 1,\n    hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      standalone: true,\n      host: {\n        class: 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbDropdown,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n\n\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(dropdown, elementRef) {\n    super(dropdown, elementRef);\n  }\n\n  static #_ = this.ɵfac = function NgbDropdownToggle_Factory(t) {\n    return new (t || NgbDropdownToggle)(i0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDropdownToggle,\n    selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n    hostAttrs: [1, \"dropdown-toggle\"],\n    hostVars: 1,\n    hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n          return ctx.dropdown.toggle();\n        })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Tab\", function NgbDropdownToggle_keydown_Tab_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        })(\"keydown.Shift.Tab\", function NgbDropdownToggle_keydown_Shift_Tab_HostBindingHandler($event) {\n          return ctx.dropdown.onKeyDown($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NgbDropdownAnchor,\n      useExisting: forwardRef(() => NgbDropdownToggle)\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      standalone: true,\n      host: {\n        class: 'dropdown-toggle',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(() => NgbDropdownToggle)\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDropdown,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbDropdown)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n\n\nclass NgbDropdown {\n  constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer) {\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._destroyCloseHandlers$ = new Subject();\n    this._bodyContainer = null;\n    /**\n     * Defines whether or not the dropdown menu is opened initially.\n     */\n\n    this._open = false;\n    /**\n     * An event fired when the dropdown is opened or closed.\n     *\n     * The event payload is a `boolean`:\n     * * `true` - the dropdown was opened\n     * * `false` - the dropdown was closed\n     */\n\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.popperOptions = config.popperOptions;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this._positioning = ngbPositioning();\n  }\n\n  ngOnInit() {\n    if (!this.display) {\n      this.display = this._elementRef.nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n    }\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.firstChange) {\n      this._positioning.setOptions({\n        hostElement: this._anchor.nativeElement,\n        targetElement: this._bodyContainer || this._menu.nativeElement,\n        placement: this.placement,\n        appendToBody: this.container === 'body'\n      });\n\n      this._applyPlacementClasses();\n    }\n\n    if (changes.dropdownClass) {\n      const {\n        currentValue,\n        previousValue\n      } = changes.dropdownClass;\n\n      this._applyCustomDropdownClass(currentValue, previousValue);\n    }\n\n    if (changes.autoClose && this._open) {\n      this.autoClose = changes.autoClose.currentValue;\n\n      this._setCloseHandlers();\n    }\n  }\n  /**\n   * Checks if the dropdown menu is open.\n   */\n\n\n  isOpen() {\n    return this._open;\n  }\n  /**\n   * Opens the dropdown menu.\n   */\n\n\n  open() {\n    if (!this._open) {\n      this._open = true;\n\n      this._applyContainer(this.container);\n\n      this.openChange.emit(true);\n\n      this._setCloseHandlers();\n\n      if (this._anchor) {\n        this._anchor.nativeElement.focus();\n\n        if (this.display === 'dynamic') {\n          this._ngZone.runOutsideAngular(() => {\n            this._positioning.createPopper({\n              hostElement: this._anchor.nativeElement,\n              targetElement: this._bodyContainer || this._menu.nativeElement,\n              placement: this.placement,\n              appendToBody: this.container === 'body',\n              updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n            });\n\n            this._applyPlacementClasses();\n\n            this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positionMenu());\n          });\n        }\n      }\n    }\n  }\n\n  _setCloseHandlers() {\n    this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n\n\n    ngbAutoClose(this._ngZone, this._document, this.autoClose, source => {\n      this.close();\n\n      if (source === 0\n      /* SOURCE.ESCAPE */\n      ) {\n        this._anchor.nativeElement.focus();\n      }\n    }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n  }\n  /**\n   * Closes the dropdown menu.\n   */\n\n\n  close() {\n    if (this._open) {\n      this._open = false;\n\n      this._resetContainer();\n\n      this._positioning.destroy();\n\n      this._zoneSubscription?.unsubscribe();\n\n      this._destroyCloseHandlers$.next();\n\n      this.openChange.emit(false);\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Toggles the dropdown menu.\n   */\n\n\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  onKeyDown(event) {\n    /* eslint-disable-next-line deprecation/deprecation */\n    const key = event.which;\n\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let itemElement = null;\n\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target)) {\n          itemElement = item;\n        }\n\n        if (item === getActiveElement(this._document)) {\n          position = index;\n        }\n      });\n    } // closing on Enter / Space\n\n\n    if (key === Key.Space || key === Key.Enter) {\n      if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n\n      return;\n    }\n\n    if (key === Key.Tab) {\n      if (event.target && this.isOpen() && this.autoClose) {\n        if (this._anchor.nativeElement === event.target) {\n          if (this.container === 'body' && !event.shiftKey) {\n            /* This case is special: user is using [Tab] from the anchor/toggle.\n            User expects the next focusable element in the dropdown menu to get focus.\n            But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n            Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n            so that browser will focus the proper element (first one focusable in the menu) */\n            this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n\n            this._menu.nativeElement.focus();\n\n            this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n          } else if (event.shiftKey) {\n            this.close();\n          }\n\n          return;\n        } else if (this.container === 'body') {\n          const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n\n          if (event.shiftKey && event.target === focusableElements[0]) {\n            this._anchor.nativeElement.focus();\n\n            event.preventDefault();\n          } else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n            this._anchor.nativeElement.focus();\n\n            this.close();\n          }\n        } else {\n          fromEvent(event.target, 'focusout').pipe(take(1)).subscribe(({\n            relatedTarget\n          }) => {\n            if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n              this.close();\n            }\n          });\n        }\n      }\n\n      return;\n    } // opening / navigating\n\n\n    if (isEventFromToggle || itemElement) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n\n            position = Math.max(position - 1, 0);\n            break;\n\n          case Key.Home:\n            position = 0;\n            break;\n\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n\n        itemElements[position].focus();\n      }\n\n      event.preventDefault();\n    }\n  }\n\n  _isDropup() {\n    return this._elementRef.nativeElement.classList.contains('dropup');\n  }\n\n  _isEventFromToggle(event) {\n    return this._anchor.nativeElement.contains(event.target);\n  }\n\n  _getMenuElements() {\n    const menu = this._menu;\n\n    if (menu == null) {\n      return [];\n    }\n\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  _positionMenu() {\n    const menu = this._menu;\n\n    if (this.isOpen() && menu) {\n      if (this.display === 'dynamic') {\n        this._positioning.update();\n\n        this._applyPlacementClasses();\n      } else {\n        this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n      }\n    }\n  }\n\n  _getFirstPlacement(placement) {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n  }\n\n  _resetContainer() {\n    const renderer = this._renderer;\n\n    if (this._menu) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = this._menu.nativeElement;\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n    }\n\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  _applyContainer(container = null) {\n    this._resetContainer();\n\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menu.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div'); // Override some styles to have the positioning working\n\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1055');\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n\n    this._applyCustomDropdownClass(this.dropdownClass);\n  }\n\n  _applyCustomDropdownClass(newClass, oldClass) {\n    const targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\n\n    if (targetElement) {\n      if (oldClass) {\n        this._renderer.removeClass(targetElement, oldClass);\n      }\n\n      if (newClass) {\n        this._renderer.addClass(targetElement, newClass);\n      }\n    }\n  }\n\n  _applyPlacementClasses(placement) {\n    const menu = this._menu;\n\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement; // remove the current placement classes\n\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      const {\n        nativeElement\n      } = menu;\n\n      if (this.display === 'static') {\n        menu.placement = null;\n        renderer.setAttribute(nativeElement, 'data-bs-popper', 'static');\n      } else {\n        menu.placement = placement;\n        renderer.removeAttribute(nativeElement, 'data-bs-popper');\n      }\n      /*\n       * apply the new placement\n       * in case of top use up-arrow or down-arrow otherwise\n       */\n\n\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n      const bodyContainer = this._bodyContainer;\n\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbDropdown_Factory(t) {\n    return new (t || NgbDropdown)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbDropdownConfig), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbDropdown,\n    selectors: [[\"\", \"ngbDropdown\", \"\"]],\n    contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"show\", ctx.isOpen());\n      }\n    },\n    inputs: {\n      autoClose: \"autoClose\",\n      dropdownClass: \"dropdownClass\",\n      _open: [\"open\", \"_open\"],\n      placement: \"placement\",\n      popperOptions: \"popperOptions\",\n      container: \"container\",\n      display: \"display\"\n    },\n    outputs: {\n      openChange: \"openChange\"\n    },\n    exportAs: [\"ngbDropdown\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      standalone: true,\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    dropdownClass: [{\n      type: Input\n    }],\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    placement: [{\n      type: Input\n    }],\n    popperOptions: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    openChange: [{\n      type: Output\n    }]\n  });\n})();\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem];\n\nclass NgbDropdownModule {\n  static #_ = this.ɵfac = function NgbDropdownModule_Factory(t) {\n    return new (t || NgbDropdownModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbDropdownModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\nclass ContentRef {\n  constructor(nodes, viewRef, componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n\n}\n\nclass PopupService {\n  constructor(_componentType, _injector, _viewContainerRef, _renderer, _ngZone, _applicationRef) {\n    this._componentType = _componentType;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._windowRef = null;\n    this._contentRef = null;\n  }\n\n  open(content, templateContext, animation = false) {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, templateContext);\n      this._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n        injector: this._injector,\n        projectableNodes: this._contentRef.nodes\n      });\n    }\n\n    const {\n      nativeElement\n    } = this._windowRef.location;\n\n    const transition$ = this._ngZone.onStable.pipe(take(1), mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({\n      classList\n    }) => classList.add('show'), {\n      animation,\n      runningTransition: 'continue'\n    })));\n\n    return {\n      windowRef: this._windowRef,\n      transition$\n    };\n  }\n\n  close(animation = false) {\n    if (!this._windowRef) {\n      return of(undefined);\n    }\n\n    return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation,\n      runningTransition: 'stop'\n    }).pipe(tap(() => {\n      if (this._windowRef) {\n        // this is required because of the container='body' option\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n\n        this._windowRef = null;\n      }\n\n      if (this._contentRef?.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n\n        this._contentRef.viewRef.destroy();\n\n        this._contentRef = null;\n      }\n    }));\n  }\n\n  _getContentRef(content, templateContext) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(templateContext);\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n\n}\n\nclass NgbModalBackdrop {\n  constructor(_el, _zone) {\n    this._el = _el;\n    this._zone = _zone;\n  }\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n\n        element.classList.add('show');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    });\n  }\n\n  hide() {\n    return ngbRunTransition(this._zone, this._el.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbModalBackdrop_Factory(t) {\n    return new (t || NgbModalBackdrop)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbModalBackdrop,\n    selectors: [[\"ngb-modal-backdrop\"]],\n    hostAttrs: [2, \"z-index\", \"1055\"],\n    hostVars: 6,\n    hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"modal-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n        i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      backdropClass: \"backdropClass\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function NgbModalBackdrop_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      standalone: true,\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        style: 'z-index: 1055'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\n\n\nclass NgbActiveModal {\n  /**\n   * Updates options of an opened modal.\n   *\n   * @since 14.2.0\n   */\n  update(options) {}\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbModalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {}\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {}\n\n}\n\nconst WINDOW_ATTRIBUTES = ['animation', 'ariaLabelledBy', 'ariaDescribedBy', 'backdrop', 'centered', 'fullscreen', 'keyboard', 'scrollable', 'size', 'windowClass', 'modalDialogClass'];\nconst BACKDROP_ATTRIBUTES = ['animation', 'backdropClass'];\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\n\nclass NgbModalRef {\n  _applyWindowOptions(windowInstance, options) {\n    WINDOW_ATTRIBUTES.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _applyBackdropOptions(backdropInstance, options) {\n    BACKDROP_ATTRIBUTES.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n  /**\n   * Updates options of an opened modal.\n   *\n   * @since 14.2.0\n   */\n\n\n  update(options) {\n    this._applyWindowOptions(this._windowCmptRef.instance, options);\n\n    if (this._backdropCmptRef && this._backdropCmptRef.instance) {\n      this._applyBackdropOptions(this._backdropCmptRef.instance, options);\n    }\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n\n\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the modal is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   *\n   * @since 8.0.0\n   */\n\n\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   *\n   * @since 8.0.0\n   */\n\n\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both modal window and backdrop are closed and animations were finished.\n   * At this point modal and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   *\n   * @since 8.0.0\n   */\n\n\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when modal is fully visible and animation was finished.\n   * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if modal is closed before open animation is finished.\n   *\n   * @since 8.0.0\n   */\n\n\n  get shown() {\n    return this._windowCmptRef.instance.shown.asObservable();\n  }\n\n  constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _windowCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {\n    if (this._windowCmptRef) {\n      this._closed.next(result);\n\n      this._resolve(result);\n\n      this._removeModalElements();\n    }\n  }\n\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n\n    this._reject(reason);\n\n    this._removeModalElements();\n  }\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  _removeModalElements() {\n    const windowTransition$ = this._windowCmptRef.instance.hide();\n\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding window\n\n    windowTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._windowCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n\n      this._windowCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._windowCmptRef = null;\n      this._contentRef = null;\n    }); // hiding backdrop\n\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        this._backdropCmptRef.destroy();\n\n        this._backdropCmptRef = null;\n      }\n    }); // all done\n\n    zip(windowTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n\n      this._hidden.complete();\n    });\n  }\n\n}\n\nvar ModalDismissReasons;\n\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n  constructor(_document, _elRef, _zone) {\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to modal opening\n\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  get fullscreenClass() {\n    return this.fullscreen === true ? ' modal-fullscreen' : isString(this.fullscreen) ? ` modal-fullscreen-${this.fullscreen}-down` : '';\n  }\n\n  dismiss(reason) {\n    this.dismissEvent.emit(reason);\n  }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._show();\n    });\n  }\n\n  ngOnDestroy() {\n    this._disableEventHandling();\n  }\n\n  hide() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'stop'\n    };\n    const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n    const transitions$ = zip(windowTransition$, dialogTransition$);\n    transitions$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n\n    this._restoreFocus();\n\n    return transitions$;\n  }\n\n  _show() {\n    const context = {\n      animation: this.animation,\n      runningTransition: 'continue'\n    };\n    const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n      if (animation) {\n        reflow(element);\n      }\n\n      element.classList.add('show');\n    }, context);\n    const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => {}, context);\n    zip(windowTransition$, dialogTransition$).subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n\n    this._setFocus();\n  }\n\n  _enableEventHandling() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    this._zone.runOutsideAngular(() => {\n      fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape)).subscribe(event => {\n        if (this.keyboard) {\n          requestAnimationFrame(() => {\n            if (!event.defaultPrevented) {\n              this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n            }\n          });\n        } else if (this.backdrop === 'static') {\n          this._bumpBackdrop();\n        }\n      }); // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n\n      let preventClose = false;\n      fromEvent(this._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(this._closed$), tap(() => preventClose = false), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({\n        target\n      }) => nativeElement === target)).subscribe(() => {\n        preventClose = true;\n      }); // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\n      fromEvent(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({\n        target\n      }) => {\n        if (nativeElement === target) {\n          if (this.backdrop === 'static') {\n            this._bumpBackdrop();\n          } else if (this.backdrop === true && !preventClose) {\n            this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n          }\n        }\n\n        preventClose = false;\n      });\n    });\n  }\n\n  _disableEventHandling() {\n    this._closed$.next();\n  }\n\n  _setFocus() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n    let elementToFocus;\n\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n  _bumpBackdrop() {\n    if (this.backdrop === 'static') {\n      ngbRunTransition(this._zone, this._elRef.nativeElement, ({\n        classList\n      }) => {\n        classList.add('modal-static');\n        return () => classList.remove('modal-static');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbModalWindow_Factory(t) {\n    return new (t || NgbModalWindow)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbModalWindow,\n    selectors: [[\"ngb-modal-window\"]],\n    viewQuery: function NgbModalWindow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c32, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n    hostVars: 7,\n    hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n        i0.ɵɵclassMap(\"modal d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n        i0.ɵɵclassProp(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaDescribedBy: \"ariaDescribedBy\",\n      backdrop: \"backdrop\",\n      centered: \"centered\",\n      fullscreen: \"fullscreen\",\n      keyboard: \"keyboard\",\n      scrollable: \"scrollable\",\n      size: \"size\",\n      windowClass: \"windowClass\",\n      modalDialogClass: \"modalDialogClass\"\n    },\n    outputs: {\n      dismissEvent: \"dismiss\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 2,\n    consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n    template: function NgbModalWindow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + ctx.fullscreenClass + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\") + (ctx.modalDialogClass ? \" \" + ctx.modalDialogClass : \"\"));\n      }\n    },\n    styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      standalone: true,\n      host: {\n        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        '[class.fade]': 'animation',\n        role: 'dialog',\n        tabindex: '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      },\n      template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content></ng-content></div>\n\t\t</div>\n\t`,\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    backdrop: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    fullscreen: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }],\n    modalDialogClass: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\n\n\nclass ScrollBar {\n  constructor(_document) {\n    this._document = _document;\n  }\n  /**\n   * To be called to hide a potential vertical scrollbar:\n   * - if a scrollbar is there and has a width greater than 0, adds some compensation\n   * padding to the body to keep the same layout as when the scrollbar is there\n   * - adds overflow: hidden\n   *\n   * @return a callback used to revert the change\n   */\n\n\n  hide() {\n    const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n    const body = this._document.body;\n    const bodyStyle = body.style;\n    const {\n      overflow,\n      paddingRight\n    } = bodyStyle;\n\n    if (scrollbarWidth > 0) {\n      const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n      bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n    }\n\n    bodyStyle.overflow = 'hidden';\n    return () => {\n      if (scrollbarWidth > 0) {\n        bodyStyle.paddingRight = paddingRight;\n      }\n\n      bodyStyle.overflow = overflow;\n    };\n  }\n\n  static #_ = this.ɵfac = function ScrollBar_Factory(t) {\n    return new (t || ScrollBar)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ScrollBar,\n    factory: ScrollBar.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass NgbModalStack {\n  constructor(_applicationRef, _injector, _environmentInjector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._environmentInjector = _environmentInjector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._scrollBarRestoreFn = null;\n    this._modalRefs = [];\n    this._windowCmpts = [];\n    this._activeInstances = new EventEmitter(); // Trap focus on active WindowCmpt\n\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n\n        this._revertAriaHidden();\n\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  _restoreScrollBar() {\n    const scrollBarRestoreFn = this._scrollBarRestoreFn;\n\n    if (scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = null;\n      scrollBarRestoreFn();\n    }\n  }\n\n  _hideScrollBar() {\n    if (!this._scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = this._scrollBar.hide();\n    }\n  }\n\n  open(contentInjector, content, options) {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    this._hideScrollBar();\n\n    const activeModal = new NgbActiveModal();\n    contentInjector = options.injector || contentInjector;\n\n    const environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n\n    const contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n\n    let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n\n    let windowCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n\n    let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n\n    this._registerWindowCmpt(windowCmptRef); // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n    // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n    // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n\n\n    ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n\n        this._restoreScrollBar();\n\n        this._revertAriaHidden();\n      }\n    }));\n\n    activeModal.close = result => {\n      ngbModalRef.close(result);\n    };\n\n    activeModal.dismiss = reason => {\n      ngbModalRef.dismiss(reason);\n    };\n\n    activeModal.update = options => {\n      ngbModalRef.update(options);\n    };\n\n    ngbModalRef.update(options);\n\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      backdropCmptRef.changeDetectorRef.detectChanges();\n    }\n\n    windowCmptRef.changeDetectorRef.detectChanges();\n    return ngbModalRef;\n  }\n\n  get activeInstances() {\n    return this._activeInstances;\n  }\n\n  dismissAll(reason) {\n    this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason));\n  }\n\n  hasOpenModals() {\n    return this._modalRefs.length > 0;\n  }\n\n  _attachBackdrop(containerEl) {\n    let backdropCmptRef = createComponent(NgbModalBackdrop, {\n      environmentInjector: this._applicationRef.injector,\n      elementInjector: this._injector\n    });\n\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  _attachWindowComponent(containerEl, projectableNodes) {\n    let windowCmptRef = createComponent(NgbModalWindow, {\n      environmentInjector: this._applicationRef.injector,\n      elementInjector: this._injector,\n      projectableNodes\n    });\n\n    this._applicationRef.attachView(windowCmptRef.hostView);\n\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  _getContentRef(contentInjector, environmentInjector, content, activeModal, options) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n    }\n  }\n\n  _createFromTemplateRef(templateRef, activeModal) {\n    const context = {\n      $implicit: activeModal,\n\n      close(result) {\n        activeModal.close(result);\n      },\n\n      dismiss(reason) {\n        activeModal.dismiss(reason);\n      }\n\n    };\n    const viewRef = templateRef.createEmbeddedView(context);\n\n    this._applicationRef.attachView(viewRef);\n\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  _createFromString(content) {\n    const component = this._document.createTextNode(`${content}`);\n\n    return new ContentRef([[component]]);\n  }\n\n  _createFromComponent(contentInjector, environmentInjector, componentType, context, options) {\n    const elementInjector = Injector.create({\n      providers: [{\n        provide: NgbActiveModal,\n        useValue: context\n      }],\n      parent: contentInjector\n    });\n    const componentRef = createComponent(componentType, {\n      environmentInjector,\n      elementInjector\n    });\n    const componentNativeEl = componentRef.location.nativeElement;\n\n    if (options.scrollable) {\n      componentNativeEl.classList.add('component-host-scrollable');\n    }\n\n    this._applicationRef.attachView(componentRef.hostView); // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\n\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  _setAriaHidden(element) {\n    const parent = element.parentElement;\n\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n\n    this._ariaHiddenValues.clear();\n  }\n\n  _registerModalRef(ngbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n\n        this._activeInstances.emit(this._modalRefs);\n      }\n    };\n\n    this._modalRefs.push(ngbModalRef);\n\n    this._activeInstances.emit(this._modalRefs);\n\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  _registerWindowCmpt(ngbWindowCmpt) {\n    this._windowCmpts.push(ngbWindowCmpt);\n\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbModalStack_Factory(t) {\n    return new (t || NgbModalStack)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ScrollBar), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbModalStack,\n    factory: NgbModalStack.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.EnvironmentInjector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: i0.RendererFactory2\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\n\n\nclass NgbModalConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.backdrop = true;\n    this.fullscreen = false;\n    this.keyboard = true;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbModalConfig_Factory(t) {\n    return new (t || NgbModalConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbModalConfig,\n    factory: NgbModalConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n\n\nclass NgbModal {\n  constructor(_injector, _modalStack, _config) {\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n\n\n  open(content, options = {}) {\n    const combinedOptions = { ...this._config,\n      animation: this._config.animation,\n      ...options\n    };\n    return this._modalStack.open(this._injector, content, combinedOptions);\n  }\n  /**\n   * Returns an observable that holds the active modal instances.\n   */\n\n\n  get activeInstances() {\n    return this._modalStack.activeInstances;\n  }\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n\n\n  dismissAll(reason) {\n    this._modalStack.dismissAll(reason);\n  }\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n\n\n  hasOpenModals() {\n    return this._modalStack.hasOpenModals();\n  }\n\n  static #_ = this.ɵfac = function NgbModal_Factory(t) {\n    return new (t || NgbModal)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NgbModalStack), i0.ɵɵinject(NgbModalConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbModal,\n    factory: NgbModal.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n\nclass NgbModalModule {\n  static #_ = this.ɵfac = function NgbModalModule_Factory(t) {\n    return new (t || NgbModalModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbModalModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [NgbModal]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.destroyOnHide = true;\n    this.orientation = 'horizontal';\n    this.roles = 'tablist';\n    this.keyboard = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbNavConfig_Factory(t) {\n    return new (t || NgbNavConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbNavConfig,\n    factory: NgbNavConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nconst isValidNavId = id => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n\nclass NgbNavContent {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbNavContent_Factory(t) {\n    return new (t || NgbNavContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavContent,\n    selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\n\n\nclass NgbNavItemRole {\n  constructor(role, nav) {\n    this.role = role;\n    this.nav = nav;\n  }\n\n  static #_ = this.ɵfac = function NgbNavItemRole_Factory(t) {\n    return new (t || NgbNavItemRole)(i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(forwardRef(() => NgbNav)));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavItemRole,\n    selectors: [[\"\", \"ngbNavItem\", \"\", 5, \"ng-container\"]],\n    hostVars: 1,\n    hostBindings: function NgbNavItemRole_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"presentation\" : undefined);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavItemRole, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]:not(ng-container)',\n      standalone: true,\n      host: {\n        '[attr.role]': `role ? role : nav.roles ? 'presentation' : undefined`\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNav,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbNav)]\n      }]\n    }];\n  }, null);\n})();\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavItem {\n  constructor(_nav, elementRef) {\n    this._nav = _nav;\n    this.elementRef = elementRef;\n    /**\n     * If `true`, the current nav item is disabled and can't be toggled by user.\n     *\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n     */\n\n    this.disabled = false;\n    /**\n     * An event emitted when the fade in transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished on the related nav content\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() {\n    return this._nav.activeId === this.id;\n  }\n\n  get id() {\n    return isValidNavId(this._id) ? this._id : this.domId;\n  }\n\n  get panelDomId() {\n    return `${this.domId}-panel`;\n  }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n\n  static #_ = this.ɵfac = function NgbNavItem_Factory(t) {\n    return new (t || NgbNavItem)(i0.ɵɵdirectiveInject(forwardRef(() => NgbNav)), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavItem,\n    selectors: [[\"\", \"ngbNavItem\", \"\"]],\n    contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbNavContent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"nav-item\", true);\n      }\n    },\n    inputs: {\n      destroyOnHide: \"destroyOnHide\",\n      disabled: \"disabled\",\n      domId: \"domId\",\n      _id: [\"ngbNavItem\", \"_id\"]\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbNavItem\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      standalone: true,\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbNav,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => NgbNav)]\n      }]\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    destroyOnHide: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    domId: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNav {\n  constructor(role, config, _cd, _document) {\n    this.role = role;\n    this._cd = _cd;\n    this._document = _document;\n    /**\n     * The event emitted after the active nav changes\n     * The payload of the event is the newly active nav id\n     *\n     * If you want to prevent nav change, you should use `(navChange)` event\n     */\n\n    this.activeIdChange = new EventEmitter();\n    /**\n     * An event emitted when the fade in transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just shown.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the fade out transition is finished for one of the items.\n     *\n     * Payload of the event is the nav id that was just hidden.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n    this.destroy$ = new Subject();\n    this.navItemChange$ = new Subject();\n    /**\n     * The nav change event emitted right before the nav change happens on user click.\n     *\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n     *\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n     */\n\n    this.navChange = new EventEmitter();\n    this.animation = config.animation;\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n    this.keyboard = config.keyboard;\n  }\n\n  click(item) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  onKeyDown(event) {\n    if (this.roles !== 'tablist' || !this.keyboard) {\n      return;\n    }\n    /* eslint-disable-next-line deprecation/deprecation */\n\n\n    const key = event.which;\n    const enabledLinks = this.links.filter(link => !link.navItem.disabled);\n    const {\n      length\n    } = enabledLinks;\n    let position = -1;\n    enabledLinks.forEach((link, index) => {\n      if (link.elRef.nativeElement === this._document.activeElement) {\n        position = index;\n      }\n    });\n\n    if (length) {\n      switch (key) {\n        case Key.ArrowLeft:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.ArrowRight:\n          if (this.orientation === 'vertical') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowDown:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position + 1) % length;\n          break;\n\n        case Key.ArrowUp:\n          if (this.orientation === 'horizontal') {\n            return;\n          }\n\n          position = (position - 1 + length) % length;\n          break;\n\n        case Key.Home:\n          position = 0;\n          break;\n\n        case Key.End:\n          position = length - 1;\n          break;\n      }\n\n      if (this.keyboard === 'changeWithArrows') {\n        this.select(enabledLinks[position].navItem.id);\n      }\n\n      enabledLinks[position].elRef.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n\n\n  select(id) {\n    this._updateActiveId(id, false);\n  }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n\n        this._cd.detectChanges();\n      }\n    }\n\n    this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId));\n  }\n\n  ngOnChanges({\n    activeId\n  }) {\n    if (activeId && !activeId.firstChange) {\n      this._notifyItemChanged(activeId.currentValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  _updateActiveId(nextId, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({\n          activeId: this.activeId,\n          nextId,\n          preventDefault: () => {\n            defaultPrevented = true;\n          }\n        });\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n\n        this._notifyItemChanged(nextId);\n      }\n    }\n  }\n\n  _notifyItemChanged(nextItemId) {\n    this.navItemChange$.next(this._getItemById(nextItemId));\n  }\n\n  _getItemById(itemId) {\n    return this.items && this.items.find(item => item.id === itemId) || null;\n  }\n\n  static #_ = this.ɵfac = function NgbNav_Factory(t) {\n    return new (t || NgbNav)(i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(NgbNavConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNav,\n    selectors: [[\"\", \"ngbNav\", \"\"]],\n    contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbNavItem, 4);\n        i0.ɵɵcontentQuery(dirIndex, NgbNavLinkBase, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function NgbNav_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.arrowLeft\", function NgbNav_keydown_arrowLeft_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"keydown.arrowRight\", function NgbNav_keydown_arrowRight_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"keydown.arrowDown\", function NgbNav_keydown_arrowDown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"keydown.arrowUp\", function NgbNav_keydown_arrowUp_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"keydown.Home\", function NgbNav_keydown_Home_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        })(\"keydown.End\", function NgbNav_keydown_End_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n        i0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n      }\n    },\n    inputs: {\n      activeId: \"activeId\",\n      animation: \"animation\",\n      destroyOnHide: \"destroyOnHide\",\n      orientation: \"orientation\",\n      roles: \"roles\",\n      keyboard: \"keyboard\"\n    },\n    outputs: {\n      activeIdChange: \"activeIdChange\",\n      shown: \"shown\",\n      hidden: \"hidden\",\n      navChange: \"navChange\"\n    },\n    exportAs: [\"ngbNav\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      standalone: true,\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': `orientation === 'vertical'`,\n        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n        '(keydown.arrowLeft)': 'onKeyDown($event)',\n        '(keydown.arrowRight)': 'onKeyDown($event)',\n        '(keydown.arrowDown)': 'onKeyDown($event)',\n        '(keydown.arrowUp)': 'onKeyDown($event)',\n        '(keydown.Home)': 'onKeyDown($event)',\n        '(keydown.End)': 'onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    activeId: [{\n      type: Input\n    }],\n    activeIdChange: [{\n      type: Output\n    }],\n    animation: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }],\n    links: [{\n      type: ContentChildren,\n      args: [forwardRef(() => NgbNavLinkBase), {\n        descendants: true\n      }]\n    }],\n    navChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbNavLinkBase {\n  constructor(role, navItem, nav, elRef) {\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n    this.elRef = elRef;\n  }\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n\n  static #_ = this.ɵfac = function NgbNavLinkBase_Factory(t) {\n    return new (t || NgbNavLinkBase)(i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(NgbNavItem), i0.ɵɵdirectiveInject(NgbNav), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavLinkBase,\n    selectors: [[\"\", \"ngbNavLink\", \"\"]],\n    hostVars: 14,\n    hostBindings: function NgbNavLinkBase_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n        i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n        i0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavLinkBase, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavLink]',\n      standalone: true,\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * A directive to mark the nav link when used on a button element.\n */\n\n\nclass NgbNavLinkButton {\n  constructor(navItem, nav) {\n    this.navItem = navItem;\n    this.nav = nav;\n  }\n\n  static #_ = this.ɵfac = function NgbNavLinkButton_Factory(t) {\n    return new (t || NgbNavLinkButton)(i0.ɵɵdirectiveInject(NgbNavItem), i0.ɵɵdirectiveInject(NgbNav));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavLinkButton,\n    selectors: [[\"button\", \"ngbNavLink\", \"\"]],\n    hostAttrs: [\"type\", \"button\"],\n    hostVars: 1,\n    hostBindings: function NgbNavLinkButton_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbNavLinkButton_click_HostBindingHandler() {\n          return ctx.nav.click(ctx.navItem);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.navItem.disabled);\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavLinkButton, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbNavLink]',\n      standalone: true,\n      hostDirectives: [NgbNavLinkBase],\n      host: {\n        type: 'button',\n        '[disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }];\n  }, null);\n})();\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavLink {\n  constructor(navItem, nav) {\n    this.navItem = navItem;\n    this.nav = nav;\n  }\n\n  static #_ = this.ɵfac = function NgbNavLink_Factory(t) {\n    return new (t || NgbNavLink)(i0.ɵɵdirectiveInject(NgbNavItem), i0.ɵɵdirectiveInject(NgbNav));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavLink,\n    selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n    hostAttrs: [\"href\", \"\"],\n    hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n          ctx.nav.click(ctx.navItem);\n          return $event.preventDefault();\n        });\n      }\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      standalone: true,\n      hostDirectives: [NgbNavLinkBase],\n      host: {\n        href: '',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }];\n  }, null);\n})();\n\nconst ngbNavFadeOutTransition = ({\n  classList\n}) => {\n  classList.remove('show');\n  return () => classList.remove('active');\n};\n\nconst ngbNavFadeInTransition = (element, animation) => {\n  if (animation) {\n    reflow(element);\n  }\n\n  element.classList.add('show');\n};\n\nclass NgbNavPane {\n  constructor(elRef) {\n    this.elRef = elRef;\n  }\n\n  static #_ = this.ɵfac = function NgbNavPane_Factory(t) {\n    return new (t || NgbNavPane)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbNavPane,\n    selectors: [[\"\", \"ngbNavPane\", \"\"]],\n    hostAttrs: [1, \"tab-pane\"],\n    hostVars: 5,\n    hostBindings: function NgbNavPane_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.item.panelDomId);\n        i0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", ctx.item.domId);\n        i0.ɵɵclassProp(\"fade\", ctx.nav.animation);\n      }\n    },\n    inputs: {\n      item: \"item\",\n      nav: \"nav\",\n      role: \"role\"\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavPane, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavPane]',\n      standalone: true,\n      host: {\n        '[id]': 'item.panelDomId',\n        class: 'tab-pane',\n        '[class.fade]': 'nav.animation',\n        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n        '[attr.aria-labelledby]': 'item.domId'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    item: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n\n\nclass NgbNavOutlet {\n  constructor(_cd, _ngZone) {\n    this._cd = _cd;\n    this._ngZone = _ngZone;\n    this._activePane = null;\n  }\n\n  isPanelTransitioning(item) {\n    return this._activePane?.item === item;\n  }\n\n  ngAfterViewInit() {\n    // initial display\n    this._updateActivePane(); // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n\n\n    this.nav.navItemChange$.pipe(takeUntil(this.nav.destroy$), startWith(this._activePane?.item || null), distinctUntilChanged(), skip(1)).subscribe(nextItem => {\n      const options = {\n        animation: this.nav.animation,\n        runningTransition: 'stop'\n      }; // next panel we're switching to will only appear in DOM after the change detection is done\n      // and `this._panes` will be updated\n\n      this._cd.detectChanges(); // fading out\n\n\n      if (this._activePane) {\n        ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n          const activeItem = this._activePane?.item;\n          this._activePane = this._getPaneForItem(nextItem); // mark for check when transition finishes as outlet or parent containers might be OnPush\n          // without this the panes that have \"faded out\" will stay in DOM\n\n          this._cd.markForCheck(); // fading in\n\n\n          if (this._activePane) {\n            // we have to add the '.active' class before running the transition,\n            // because it should be in place before `ngbRunTransition` does `reflow()`\n            this._activePane.elRef.nativeElement.classList.add('active');\n\n            ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n              if (nextItem) {\n                nextItem.shown.emit();\n                this.nav.shown.emit(nextItem.id);\n              }\n            });\n          }\n\n          if (activeItem) {\n            activeItem.hidden.emit();\n            this.nav.hidden.emit(activeItem.id);\n          }\n        });\n      } else {\n        this._updateActivePane();\n      }\n    });\n  }\n\n  _updateActivePane() {\n    this._activePane = this._getActivePane();\n    this._activePane?.elRef.nativeElement.classList.add('show');\n    this._activePane?.elRef.nativeElement.classList.add('active');\n  }\n\n  _getPaneForItem(item) {\n    return this._panes && this._panes.find(pane => pane.item === item) || null;\n  }\n\n  _getActivePane() {\n    return this._panes && this._panes.find(pane => pane.item.active) || null;\n  }\n\n  static #_ = this.ɵfac = function NgbNavOutlet_Factory(t) {\n    return new (t || NgbNavOutlet)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbNavOutlet,\n    selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n    viewQuery: function NgbNavOutlet_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgbNavPane, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._panes = _t);\n      }\n    },\n    hostVars: 2,\n    hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"tab-content\", true);\n      }\n    },\n    inputs: {\n      paneRole: \"paneRole\",\n      nav: [\"ngbNavOutlet\", \"nav\"]\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    attrs: _c33,\n    decls: 1,\n    vars: 1,\n    consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\", 4, \"ngIf\"], [\"ngbNavPane\", \"\", 3, \"item\", \"nav\", \"role\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NgbNavOutlet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n      }\n    },\n    dependencies: [NgbNavPane, NgFor, NgIf, NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      standalone: true,\n      imports: [NgbNavPane, NgFor, NgIf, NgTemplateOutlet],\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n\t\t<ng-template ngFor let-item [ngForOf]=\"nav.items\">\n\t\t\t<div\n\t\t\t\tngbNavPane\n\t\t\t\t*ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\"\n\t\t\t\t[item]=\"item\"\n\t\t\t\t[nav]=\"nav\"\n\t\t\t\t[role]=\"paneRole\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t></ng-template>\n\t\t\t</div>\n\t\t</ng-template>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _panes: [{\n      type: ViewChildren,\n      args: [NgbNavPane]\n    }],\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkButton, NgbNavLinkBase, NgbNavOutlet, NgbNavPane];\n\nclass NgbNavModule {\n  static #_ = this.ɵfac = function NgbNavModule_Factory(t) {\n    return new (t || NgbNavModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbNavModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n\n\nclass NgbPaginationConfig {\n  constructor() {\n    this.disabled = false;\n    this.boundaryLinks = false;\n    this.directionLinks = true;\n    this.ellipses = true;\n    this.maxSize = 0;\n    this.pageSize = 10;\n    this.rotate = false;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationConfig_Factory(t) {\n    return new (t || NgbPaginationConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbPaginationConfig,\n    factory: NgbPaginationConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationEllipsis {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n    return new (t || NgbPaginationEllipsis)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationEllipsis,\n    selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationFirst {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationFirst_Factory(t) {\n    return new (t || NgbPaginationFirst)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationFirst,\n    selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationLast {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationLast_Factory(t) {\n    return new (t || NgbPaginationLast)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationLast,\n    selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNext {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationNext_Factory(t) {\n    return new (t || NgbPaginationNext)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationNext,\n    selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationNumber {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationNumber_Factory(t) {\n    return new (t || NgbPaginationNumber)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationNumber,\n    selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n\n\nclass NgbPaginationPrevious {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationPrevious_Factory(t) {\n    return new (t || NgbPaginationPrevious)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationPrevious,\n    selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\n\n\nclass NgbPaginationPages {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPaginationPages_Factory(t) {\n    return new (t || NgbPaginationPages)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPaginationPages,\n    selectors: [[\"ng-template\", \"ngbPaginationPages\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationPages, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPages]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n\n\nclass NgbPagination {\n  constructor(config) {\n    this.pageCount = 0;\n    this.pages = [];\n    /**\n     *  The current page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.page = 1;\n    /**\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     *  Event payload is the number of the newly selected page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious() {\n    return this.page > 1;\n  }\n\n  hasNext() {\n    return this.page < this.pageCount;\n  }\n\n  nextDisabled() {\n    return !this.hasNext() || this.disabled;\n  }\n\n  previousDisabled() {\n    return !this.hasPrevious() || this.disabled;\n  }\n\n  selectPage(pageNumber) {\n    this._updatePages(pageNumber);\n  }\n\n  ngOnChanges(changes) {\n    this._updatePages(this.page);\n  }\n\n  isEllipsis(pageNumber) {\n    return pageNumber === -1;\n  }\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n\n\n  _applyEllipses(start, end) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n\n        this.pages.unshift(1);\n      }\n\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < this.pageCount - 2) {\n          this.pages.push(-1);\n        } else if (end === this.pageCount - 2) {\n          this.pages.push(this.pageCount - 1);\n        }\n\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n\n\n  _applyRotation() {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n\n\n  _applyPagination() {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n    return [start, end];\n  }\n\n  _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  _updatePages(newPage) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    } // fill-in model needed to render pages\n\n\n    this.pages.length = 0;\n\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    } // set page within 1..max range\n\n\n    this._setPageInRange(newPage); // apply maxSize if necessary\n\n\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount; // either paginating or rotating page numbers\n\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end); // adding ellipses\n\n      this._applyEllipses(start, end);\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbPagination_Factory(t) {\n    return new (t || NgbPagination)(i0.ɵɵdirectiveInject(NgbPaginationConfig));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbPagination,\n    selectors: [[\"ngb-pagination\"]],\n    contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, 5);\n        i0.ɵɵcontentQuery(dirIndex, NgbPaginationPages, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tplPages = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"navigation\"],\n    inputs: {\n      disabled: \"disabled\",\n      boundaryLinks: \"boundaryLinks\",\n      directionLinks: \"directionLinks\",\n      ellipses: \"ellipses\",\n      rotate: \"rotate\",\n      collectionSize: \"collectionSize\",\n      maxSize: \"maxSize\",\n      page: \"page\",\n      pageSize: \"pageSize\",\n      size: \"size\"\n    },\n    outputs: {\n      pageChange: \"pageChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 20,\n    vars: 12,\n    consts: function () {\n      let i18n_34;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__35 = goog.getMsg(\"\\xAB\\xAB\");\n        i18n_34 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__35;\n      } else {\n        i18n_34 = $localize`:@@ngb.pagination.first:««`;\n      }\n\n      let i18n_36;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__37 = goog.getMsg(\"\\xAB\");\n        i18n_36 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__37;\n      } else {\n        i18n_36 = $localize`:@@ngb.pagination.previous:«`;\n      }\n\n      let i18n_38;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__39 = goog.getMsg(\"\\xBB\");\n        i18n_38 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__39;\n      } else {\n        i18n_38 = $localize`:@@ngb.pagination.next:»`;\n      }\n\n      let i18n_40;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__41 = goog.getMsg(\"\\xBB\\xBB\");\n        i18n_40 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__41;\n      } else {\n        i18n_40 = $localize`:@@ngb.pagination.last:»»`;\n      }\n\n      let i18n_44;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__45 = goog.getMsg(\"First\");\n        i18n_44 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__45;\n      } else {\n        i18n_44 = $localize`:@@ngb.pagination.first-aria:First`;\n      }\n\n      let i18n_47;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__48 = goog.getMsg(\"Previous\");\n        i18n_47 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__48;\n      } else {\n        i18n_47 = $localize`:@@ngb.pagination.previous-aria:Previous`;\n      }\n\n      let i18n_50;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__51 = goog.getMsg(\"Next\");\n        i18n_50 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__51;\n      } else {\n        i18n_50 = $localize`:@@ngb.pagination.next-aria:Next`;\n      }\n\n      let i18n_52;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__53 = goog.getMsg(\"Last\");\n        i18n_52 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__53;\n      } else {\n        i18n_52 = $localize`:@@ngb.pagination.last-aria:Last`;\n      }\n\n      return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"defaultPages\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"page-item\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_44, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_47, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n    },\n    template: function NgbPagination_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 1, 1, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(12, NgbPagination_ng_template_12_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(14, \"ul\");\n        i0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 9, \"li\", 7);\n        i0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 8, \"li\", 7);\n        i0.ɵɵtemplate(17, NgbPagination_ng_template_17_Template, 0, 0, \"ng-template\", 8);\n        i0.ɵɵtemplate(18, NgbPagination_li_18_Template, 3, 9, \"li\", 7);\n        i0.ɵɵtemplate(19, NgbPagination_li_19_Template, 3, 9, \"li\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r12 = i0.ɵɵreference(13);\n\n        i0.ɵɵadvance(14);\n        i0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.tplPages == null ? null : ctx.tplPages.templateRef) || _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(8, _c54, ctx.page, ctx.pages, ctx.disabled));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      }\n    },\n    dependencies: [NgIf, NgFor, NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      standalone: true,\n      imports: [NgIf, NgFor, NgTemplateOutlet],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        role: 'navigation'\n      },\n      template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t<li\n\t\t\t\t*ngFor=\"let pageNumber of pages\"\n\t\t\t\tclass=\"page-item\"\n\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t>\n\t\t\t\t<a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\t*ngIf=\"!isEllipsis(pageNumber)\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t>\n\t\t\t</ng-template>\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ul>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    tplPages: [{\n      type: ContentChild,\n      args: [NgbPaginationPages, {\n        static: false\n      }]\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    collectionSize: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    page: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nconst NGB_PAGINATION_DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPaginationPages];\n\nclass NgbPaginationModule {\n  static #_ = this.ɵfac = function NgbPaginationModule_Factory(t) {\n    return new (t || NgbPaginationModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbPaginationModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_PAGINATION_DIRECTIVES,\n      exports: NGB_PAGINATION_DIRECTIVES\n    }]\n  }], null, null);\n})();\n\nclass Trigger {\n  constructor(open, close) {\n    this.open = open;\n    this.close = close;\n\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n\n}\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseenter', 'mouseleave'],\n  focus: ['focusin', 'focusout']\n};\n\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map(triggerPair => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw \"Triggers parse error: manual trigger can't be mixed with other triggers\";\n  }\n\n  return parsedTriggers;\n}\n\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(subscriber => {\n    const listeners = [];\n\n    const openFn = () => subscriber.next(true);\n\n    const closeFn = () => subscriber.next(false);\n\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach(trigger => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return () => {\n      listeners.forEach(unsubscribeFn => unsubscribeFn());\n    };\n  });\n}\n\nconst delayOrNoop = time => time > 0 ? delay(time) : a => a;\n\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return input$ => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(map(open => ({\n      open\n    })), filter(event => {\n      const currentlyOpen = isOpenedFn();\n\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n\n      return false;\n    }), share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(event => {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n\n      return false;\n    }), map(event => event.open));\n  };\n}\n\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(open => open ? openFn() : closeFn());\n  return () => subscription.unsubscribe();\n}\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n\n\nclass NgbPopoverConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n\n    this.popperOptions = options => options;\n\n    this.triggers = 'click';\n    this.disablePopover = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbPopoverConfig_Factory(t) {\n    return new (t || NgbPopoverConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbPopoverConfig,\n    factory: NgbPopoverConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId$1 = 0;\n\nclass NgbPopoverWindow {\n  isTitleTemplate() {\n    return this.title instanceof TemplateRef;\n  }\n\n  static #_ = this.ɵfac = function NgbPopoverWindow_Factory(t) {\n    return new (t || NgbPopoverWindow)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbPopoverWindow,\n    selectors: [[\"ngb-popover-window\"]],\n    hostAttrs: [\"role\", \"tooltip\", 2, \"position\", \"absolute\"],\n    hostVars: 5,\n    hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n        i0.ɵɵclassProp(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      title: \"title\",\n      id: \"id\",\n      popoverClass: \"popoverClass\",\n      context: \"context\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 1,\n    consts: [[\"data-popper-arrow\", \"\", 1, \"popover-arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NgbPopoverWindow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.title);\n      }\n    },\n    dependencies: [NgTemplateOutlet, NgIf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      standalone: true,\n      imports: [NgTemplateOutlet, NgIf],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        '[class.fade]': 'animation',\n        role: 'tooltip',\n        '[id]': 'id',\n        style: 'position: absolute;'\n      },\n      template: ` <div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t<h3 class=\"popover-header\" *ngIf=\"title\">\n\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t></ng-template>\n\t\t</h3>\n\t\t<div class=\"popover-body\"><ng-content></ng-content></div>`\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n\n\nclass NgbPopover {\n  _isDisabled() {\n    if (this.disablePopover) {\n      return true;\n    }\n\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n\n    return false;\n  }\n\n  constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the popover opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover closing animation has finished. Contains no payload.\n     *\n     * At this point popover is not in the DOM anymore.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.popperOptions = config.popperOptions;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._positioning = ngbPositioning();\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n  }\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && !this._isDisabled()) {\n      // this type assertion is safe because otherwise _isDisabled would return true\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this.ngbPopover, context ?? this.popoverContext, this.animation);\n\n      this._windowRef = windowRef;\n\n      this._windowRef.setInput('animation', this.animation);\n\n      this._windowRef.setInput('title', this.popoverTitle);\n\n      this._windowRef.setInput('context', context ?? this.popoverContext);\n\n      this._windowRef.setInput('popoverClass', this.popoverClass);\n\n      this._windowRef.setInput('id', this._ngbPopoverWindowId);\n\n      this._renderer.setAttribute(this._getPositionTargetElement(), 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this._positioning.createPopper({\n          hostElement: this._getPositionTargetElement(),\n          targetElement: this._windowRef.location.nativeElement,\n          placement: this.placement,\n          appendToBody: this.container === 'body',\n          baseClass: 'bs-popover',\n          updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 8])(options))\n        });\n\n        Promise.resolve().then(() => {\n          // This update is required for correct arrow placement\n          this._positioning.update();\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        });\n      });\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  close(animation = this.animation) {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._getPositionTargetElement(), 'aria-describedby');\n\n      this._popupService.close(animation).subscribe(() => {\n        this._windowRef = null;\n\n        this._positioning.destroy();\n\n        this._zoneSubscription?.unsubscribe();\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    ngbPopover,\n    popoverTitle,\n    disablePopover,\n    popoverClass\n  }) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    } // close popover if title and content become empty, or disablePopover set to true\n\n\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close(false); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    this._unregisterListenersFn?.();\n  }\n\n  _getPositionTargetElement() {\n    return (isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) || this._elementRef.nativeElement;\n  }\n\n  static #_ = this.ɵfac = function NgbPopover_Factory(t) {\n    return new (t || NgbPopover)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgbPopoverConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbPopover,\n    selectors: [[\"\", \"ngbPopover\", \"\"]],\n    inputs: {\n      animation: \"animation\",\n      autoClose: \"autoClose\",\n      ngbPopover: \"ngbPopover\",\n      popoverTitle: \"popoverTitle\",\n      placement: \"placement\",\n      popperOptions: \"popperOptions\",\n      triggers: \"triggers\",\n      positionTarget: \"positionTarget\",\n      container: \"container\",\n      disablePopover: \"disablePopover\",\n      popoverClass: \"popoverClass\",\n      popoverContext: \"popoverContext\",\n      openDelay: \"openDelay\",\n      closeDelay: \"closeDelay\"\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbPopover\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    popperOptions: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    popoverContext: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbPopoverModule {\n  static #_ = this.ɵfac = function NgbPopoverModule_Factory(t) {\n    return new (t || NgbPopoverModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbPopoverModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbPopover],\n      exports: [NgbPopover]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n\n\nclass NgbProgressbarConfig {\n  constructor() {\n    this.max = 100;\n    this.animated = false;\n    this.ariaLabel = 'progress bar';\n    this.striped = false;\n    this.showValue = false;\n  }\n\n  static #_ = this.ɵfac = function NgbProgressbarConfig_Factory(t) {\n    return new (t || NgbProgressbarConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbProgressbarConfig,\n    factory: NgbProgressbarConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n\n\nclass NgbProgressbar {\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  set max(max) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max() {\n    return this._max;\n  }\n\n  constructor(config) {\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.ariaLabel = config.ariaLabel;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() {\n    return getValueInRange(this.value, this.max);\n  }\n\n  getPercentValue() {\n    return 100 * this.getValue() / this.max;\n  }\n\n  static #_ = this.ɵfac = function NgbProgressbar_Factory(t) {\n    return new (t || NgbProgressbar)(i0.ɵɵdirectiveInject(NgbProgressbarConfig));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbProgressbar,\n    selectors: [[\"ngb-progressbar\"]],\n    hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", 1, \"progress\"],\n    hostVars: 5,\n    hostBindings: function NgbProgressbar_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵstyleProp(\"height\", ctx.height);\n      }\n    },\n    inputs: {\n      max: \"max\",\n      animated: \"animated\",\n      ariaLabel: \"ariaLabel\",\n      striped: \"striped\",\n      showValue: \"showValue\",\n      textType: \"textType\",\n      type: \"type\",\n      value: \"value\",\n      height: \"height\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 3,\n    vars: 11,\n    consts: function () {\n      let i18n_55;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__56 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        }, {\n          original_code: {\n            \"interpolation\": \"{{ getValue() / max | percent }}\"\n          }\n        });\n        i18n_55 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__56;\n      } else {\n        i18n_55 = $localize`:@@ngb.progressbar.value:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      return [[4, \"ngIf\"], i18n_55];\n    },\n    template: function NgbProgressbar_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtemplate(1, NgbProgressbar_span_1_Template, 3, 3, \"span\", 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMapInterpolate2(\"progress-bar\", ctx.type ? ctx.textType ? \" bg-\" + ctx.type : \" text-bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\");\n        i0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n        i0.ɵɵclassProp(\"progress-bar-animated\", ctx.animated)(\"progress-bar-striped\", ctx.striped);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showValue);\n      }\n    },\n    dependencies: [NgIf, PercentPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      standalone: true,\n      imports: [NgIf, PercentPipe],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'progress',\n        role: 'progressbar',\n        '[attr.aria-valuenow]': 'getValue()',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-label]': 'ariaLabel'\n      },\n      template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"getPercentValue()\"\n\t\t>\n\t\t\t<span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span\n\t\t\t><ng-content></ng-content>\n\t\t</div>\n\t`\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    height: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['style.height']\n    }]\n  });\n})();\n\nclass NgbProgressbarModule {\n  static #_ = this.ɵfac = function NgbProgressbarModule_Factory(t) {\n    return new (t || NgbProgressbarModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbProgressbarModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbProgressbar],\n      exports: [NgbProgressbar]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n\n\nclass NgbRatingConfig {\n  constructor() {\n    this.max = 10;\n    this.readonly = false;\n    this.resettable = false;\n    this.tabindex = 0;\n  }\n\n  static #_ = this.ɵfac = function NgbRatingConfig_Factory(t) {\n    return new (t || NgbRatingConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbRatingConfig,\n    factory: NgbRatingConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n\n\nclass NgbRating {\n  /**\n   * Allows to provide a function to set a custom aria-valuetext\n   *\n   * @since 14.1.0\n   */\n  ariaValueText(current, max) {\n    return `${current} out of ${max}`;\n  }\n\n  constructor(config, _changeDetectorRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\n     * An event emitted when the user is hovering over a given rating.\n     *\n     * Event payload equals to the rating being hovered over.\n     */\n\n    this.hover = new EventEmitter();\n    /**\n     * An event emitted when the user stops hovering over a given rating.\n     *\n     * Event payload equals to the rating of the last item being hovered over.\n     */\n\n    this.leave = new EventEmitter();\n    /**\n     * An event emitted when the rating is changed.\n     *\n     * Event payload equals to the newly selected rating.\n     */\n\n    this.rateChange = new EventEmitter(true);\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.max = config.max;\n    this.readonly = config.readonly;\n    this.tabindex = config.tabindex;\n  }\n\n  isInteractive() {\n    return !this.readonly && !this.disabled;\n  }\n\n  enter(value) {\n    if (this.isInteractive()) {\n      this._updateState(value);\n    }\n\n    this.hover.emit(value);\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n\n  handleClick(value) {\n    if (this.isInteractive()) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event) {\n    /* eslint-disable-next-line deprecation/deprecation */\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n\n      case Key.Home:\n        this.update(0);\n        break;\n\n      case Key.End:\n        this.update(this.max);\n        break;\n\n      default:\n        return;\n    } // note 'return' in default case\n\n\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n\n    if (changes['max']) {\n      this._updateMax();\n    }\n  }\n\n  ngOnInit() {\n    this._setupContexts();\n\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  reset() {\n    this.leave.emit(this.nextRate);\n\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  update(value, internalChange = true) {\n    const newRate = getValueInRange(value, this.max, 0);\n\n    if (this.isInteractive() && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  _updateState(nextValue) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100));\n  }\n\n  _updateMax() {\n    if (this.max > 0) {\n      this._setupContexts();\n\n      this.update(this.rate);\n    }\n  }\n\n  _setupContexts() {\n    this.contexts = Array.from({\n      length: this.max\n    }, (v, k) => ({\n      fill: 0,\n      index: k\n    }));\n  }\n\n  static #_ = this.ɵfac = function NgbRating_Factory(t) {\n    return new (t || NgbRating)(i0.ɵɵdirectiveInject(NgbRatingConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbRating,\n    selectors: [[\"ngb-rating\"]],\n    contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, TemplateRef, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n    hostVars: 5,\n    hostBindings: function NgbRating_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n          return ctx.handleBlur();\n        })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n          return ctx.reset();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : ctx.tabindex);\n        i0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText(ctx.nextRate, ctx.max))(\"aria-disabled\", ctx.readonly ? true : null);\n      }\n    },\n    inputs: {\n      max: \"max\",\n      rate: \"rate\",\n      readonly: \"readonly\",\n      resettable: \"resettable\",\n      starTemplate: \"starTemplate\",\n      tabindex: \"tabindex\",\n      ariaValueText: \"ariaValueText\"\n    },\n    outputs: {\n      hover: \"hover\",\n      leave: \"leave\",\n      rateChange: \"rateChange\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgbRating),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"visually-hidden\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NgbRating_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n      }\n    },\n    dependencies: [NgFor, NgTemplateOutlet],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      standalone: true,\n      imports: [NgFor, NgTemplateOutlet],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : tabindex',\n        role: 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText(nextRate, max)',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t>\n\t\t\t\t</ng-template>\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbRating),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    max: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    ariaValueText: [{\n      type: Input\n    }],\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbRatingModule {\n  static #_ = this.ɵfac = function NgbRatingModule_Factory(t) {\n    return new (t || NgbRatingModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbRatingModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbRating],\n      exports: [NgbRating]\n    }]\n  }], null, null);\n})();\n\nfunction toFragmentElement(container, id) {\n  if (!container || id == null) {\n    return null;\n  }\n\n  return isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\n\nfunction getOrderedFragments(container, fragments) {\n  const selector = [...fragments].map(({\n    id\n  }) => `#${CSS.escape(id)}`).join(',');\n  return Array.from(container.querySelectorAll(selector));\n}\n\nconst defaultProcessChanges = (state, changeActive, ctx) => {\n  const {\n    rootElement,\n    fragments,\n    scrollSpy,\n    options,\n    entries\n  } = state;\n  const orderedFragments = getOrderedFragments(rootElement, fragments);\n\n  if (!ctx.initialized) {\n    ctx.initialized = true;\n    ctx.gapFragment = null;\n    ctx.visibleFragments = new Set(); // special case when one of the fragments was pre-selected\n\n    const preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n\n    if (preSelectedFragment) {\n      scrollSpy.scrollTo(preSelectedFragment);\n      return;\n    }\n  }\n\n  for (const entry of entries) {\n    const {\n      isIntersecting,\n      target: fragment\n    } = entry; // 1. an entry became visible\n\n    if (isIntersecting) {\n      // if we were in-between two elements, we have to clear it up\n      if (ctx.gapFragment) {\n        ctx.visibleFragments.delete(ctx.gapFragment);\n        ctx.gapFragment = null;\n      }\n\n      ctx.visibleFragments.add(fragment);\n    } // 2. an entry became invisible\n    else {\n      ctx.visibleFragments.delete(fragment); // nothing is visible anymore, but something just was actually\n\n      if (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n        // 2.1 scrolling down - keeping the same element\n        if (entry.boundingClientRect.top < entry.rootBounds.top) {\n          ctx.gapFragment = fragment;\n          ctx.visibleFragments.add(ctx.gapFragment);\n        } // 2.2 scrolling up - getting the previous element\n        else {\n          // scrolling up and no more fragments above\n          if (fragment === orderedFragments[0]) {\n            ctx.gapFragment = null;\n            ctx.visibleFragments.clear();\n            changeActive('');\n            return;\n          } // getting previous fragment\n          else {\n            const fragmentIndex = orderedFragments.indexOf(fragment);\n            ctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n\n            if (ctx.gapFragment) {\n              ctx.visibleFragments.add(ctx.gapFragment);\n            }\n          }\n        }\n      }\n    }\n  } // getting the first visible element in the DOM order of the fragments\n\n\n  for (const fragment of orderedFragments) {\n    if (ctx.visibleFragments.has(fragment)) {\n      changeActive(fragment.id);\n      break;\n    }\n  }\n};\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\n\n\nclass NgbScrollSpyConfig {\n  constructor() {\n    this.scrollBehavior = 'smooth';\n    this.processChanges = defaultProcessChanges;\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpyConfig_Factory(t) {\n    return new (t || NgbScrollSpyConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbScrollSpyConfig,\n    factory: NgbScrollSpyConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst MATCH_THRESHOLD = 3;\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\n\nclass NgbScrollSpyService {\n  constructor() {\n    this._observer = null;\n    this._containerElement = null;\n    this._fragments = new Set();\n    this._preRegisteredFragments = new Set();\n    this._active$ = new Subject();\n    this._distinctActive$ = this._active$.pipe(distinctUntilChanged());\n    this._active = '';\n    this._config = inject(NgbScrollSpyConfig);\n    this._document = inject(DOCUMENT);\n    this._platformId = inject(PLATFORM_ID);\n    this._scrollBehavior = this._config.scrollBehavior;\n    this._diChangeDetectorRef = inject(ChangeDetectorRef, {\n      optional: true\n    });\n    this._changeDetectorRef = this._diChangeDetectorRef;\n    this._zone = inject(NgZone);\n\n    this._distinctActive$.pipe(takeUntilDestroyed()).subscribe(active => {\n      this._active = active;\n      this._changeDetectorRef?.markForCheck();\n    });\n  }\n  /**\n   * Getter for the currently active fragment id. Returns empty string if none.\n   */\n\n\n  get active() {\n    return this._active;\n  }\n  /**\n   * An observable emitting the currently active fragment. Emits empty string if none.\n   */\n\n\n  get active$() {\n    return this._distinctActive$;\n  }\n  /**\n   * Starts the scrollspy service and observes specified fragments.\n   *\n   * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n   * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n   */\n\n\n  start(options) {\n    if (isPlatformBrowser(this._platformId)) {\n      this._cleanup();\n\n      const {\n        root,\n        rootMargin,\n        scrollBehavior,\n        threshold,\n        fragments,\n        changeDetectorRef,\n        processChanges\n      } = { ...options\n      };\n      this._containerElement = root ?? this._document.documentElement;\n      this._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n      this._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n      const processChangesFn = processChanges ?? this._config.processChanges;\n      const context = {};\n      this._observer = new IntersectionObserver(entries => processChangesFn({\n        entries,\n        rootElement: this._containerElement,\n        fragments: this._fragments,\n        scrollSpy: this,\n        options: { ...options\n        }\n      }, active => this._active$.next(active), context), {\n        root: root ?? this._document,\n        ...(rootMargin && {\n          rootMargin\n        }),\n        ...(threshold && {\n          threshold\n        })\n      }); // merging fragments added before starting and the ones passed as options\n\n      for (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n        this.observe(element);\n      }\n\n      this._preRegisteredFragments.clear();\n    }\n  }\n  /**\n   * Stops the service and unobserves all fragments.\n   */\n\n\n  stop() {\n    this._cleanup();\n\n    this._active$.next('');\n  }\n  /**\n   * Scrolls to a fragment, it must be known to the service and contained in the root element.\n   * An id or an element reference can be passed.\n   *\n   * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n   */\n\n\n  scrollTo(fragment, options) {\n    const {\n      behavior\n    } = {\n      behavior: this._scrollBehavior,\n      ...options\n    };\n\n    if (this._containerElement) {\n      const fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n      if (fragmentElement) {\n        const heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n\n        this._containerElement.scrollTo({\n          top: heightPx,\n          behavior\n        });\n\n        let lastOffset = this._containerElement.scrollTop;\n        let matchCounter = 0; // we should update the active section only after scrolling is finished\n        // and there is no clean way to do it at the moment\n\n        const containerElement = this._containerElement;\n\n        this._zone.runOutsideAngular(() => {\n          const updateActiveWhenScrollingIsFinished = () => {\n            const sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n\n            if (sameOffsetAsLastTime) {\n              matchCounter++;\n            } else {\n              matchCounter = 0;\n            }\n\n            if (!sameOffsetAsLastTime || sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD) {\n              lastOffset = containerElement.scrollTop;\n              requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n            } else {\n              this._zone.run(() => this._active$.next(fragmentElement.id));\n            }\n          };\n\n          requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n        });\n      }\n    }\n  }\n  /**\n   * Adds a fragment to observe. It must be contained in the root element.\n   * An id or an element reference can be passed.\n   */\n\n\n  observe(fragment) {\n    if (!this._observer) {\n      this._preRegisteredFragments.add(fragment);\n\n      return;\n    }\n\n    const fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n    if (fragmentElement && !this._fragments.has(fragmentElement)) {\n      this._fragments.add(fragmentElement);\n\n      this._observer.observe(fragmentElement);\n    }\n  }\n  /**\n   * Unobserves a fragment.\n   * An id or an element reference can be passed.\n   */\n\n\n  unobserve(fragment) {\n    if (!this._observer) {\n      this._preRegisteredFragments.delete(fragment);\n\n      return;\n    }\n\n    const fragmentElement = toFragmentElement(this._containerElement, fragment);\n\n    if (fragmentElement) {\n      this._fragments.delete(fragmentElement); // we're removing and re-adding all current fragments to recompute active one\n\n\n      this._observer.disconnect();\n\n      for (const fragment of this._fragments) {\n        this._observer.observe(fragment);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._cleanup();\n  }\n\n  _cleanup() {\n    this._fragments.clear();\n\n    this._observer?.disconnect();\n    this._changeDetectorRef = this._diChangeDetectorRef;\n    this._scrollBehavior = this._config.scrollBehavior;\n    this._observer = null;\n    this._containerElement = null;\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpyService_Factory(t) {\n    return new (t || NgbScrollSpyService)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbScrollSpyService,\n    factory: NgbScrollSpyService.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\n\n\nclass NgbScrollSpyItem {\n  constructor() {\n    this._changeDetector = inject(ChangeDetectorRef);\n    this._scrollSpyMenu = inject(NgbScrollSpyMenu, {\n      optional: true\n    });\n    this._scrollSpyAPI = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n    this._destroyRef = inject(DestroyRef);\n    this._isActive = false;\n  }\n  /**\n   * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n   *\n   * Can be used like:\n   *  - `ngbScrollSpyItem=\"fragmentId\"`\n   *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n   *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n   *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n   *\n   *  As well as together with `[fragment]` and `[parent]` inputs.\n   */\n\n\n  set data(data) {\n    if (Array.isArray(data)) {\n      this._scrollSpyAPI = data[0];\n      this.fragment = data[1];\n      this.parent ??= data[2];\n    } else if (data instanceof NgbScrollSpy) {\n      this._scrollSpyAPI = data;\n    } else if (isString(data)) {\n      this.fragment = data;\n    }\n  }\n\n  ngOnInit() {\n    // if it is not a part of a bigger menu, it should handle activation itself\n    if (!this._scrollSpyMenu) {\n      this._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(active => {\n        if (active === this.fragment) {\n          this._activate();\n        } else {\n          this._deactivate();\n        }\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _activate() {\n    this._isActive = true;\n\n    if (this._scrollSpyMenu) {\n      this._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  _deactivate() {\n    this._isActive = false;\n\n    if (this._scrollSpyMenu) {\n      this._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n    }\n  }\n  /**\n   * Returns `true`, if the associated fragment is active.\n   */\n\n\n  isActive() {\n    return this._isActive;\n  }\n  /**\n   * Scrolls to the associated fragment.\n   */\n\n\n  scrollTo(options) {\n    this._scrollSpyAPI.scrollTo(this.fragment, options);\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpyItem_Factory(t) {\n    return new (t || NgbScrollSpyItem)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbScrollSpyItem,\n    selectors: [[\"\", \"ngbScrollSpyItem\", \"\"]],\n    hostVars: 2,\n    hostBindings: function NgbScrollSpyItem_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgbScrollSpyItem_click_HostBindingHandler() {\n          return ctx.scrollTo();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"active\", ctx.isActive());\n      }\n    },\n    inputs: {\n      data: [\"ngbScrollSpyItem\", \"data\"],\n      fragment: \"fragment\",\n      parent: \"parent\"\n    },\n    exportAs: [\"ngbScrollSpyItem\"],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbScrollSpyItem]',\n      standalone: true,\n      exportAs: 'ngbScrollSpyItem',\n      host: {\n        '[class.active]': 'isActive()',\n        '(click)': 'scrollTo();'\n      }\n    }]\n  }], null, {\n    data: [{\n      type: Input,\n      args: ['ngbScrollSpyItem']\n    }],\n    fragment: [{\n      type: Input\n    }],\n    parent: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\n\n\nclass NgbScrollSpyMenu {\n  constructor() {\n    this._scrollSpyRef = inject(NgbScrollSpyService);\n    this._destroyRef = inject(DestroyRef);\n    this._map = new Map();\n    this._lastActiveItem = null;\n  }\n\n  set scrollSpy(scrollSpy) {\n    this._scrollSpyRef = scrollSpy;\n  }\n\n  get active() {\n    return this._scrollSpyRef.active;\n  }\n\n  get active$() {\n    return this._scrollSpyRef.active$;\n  }\n\n  scrollTo(fragment, options) {\n    this._scrollSpyRef.scrollTo(fragment, options);\n  }\n\n  getItem(id) {\n    return this._map.get(id);\n  }\n\n  ngAfterViewInit() {\n    this._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n\n    this._rebuildMap();\n\n    this._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(activeId => {\n      this._lastActiveItem?._deactivate();\n\n      const item = this._map.get(activeId);\n\n      if (item) {\n        item._activate();\n\n        this._lastActiveItem = item;\n      }\n    });\n  }\n\n  _rebuildMap() {\n    this._map.clear();\n\n    for (let item of this._items) {\n      this._map.set(item.fragment, item);\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpyMenu_Factory(t) {\n    return new (t || NgbScrollSpyMenu)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbScrollSpyMenu,\n    selectors: [[\"\", \"ngbScrollSpyMenu\", \"\"]],\n    contentQueries: function NgbScrollSpyMenu_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbScrollSpyItem, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n      }\n    },\n    inputs: {\n      scrollSpy: [\"ngbScrollSpyMenu\", \"scrollSpy\"]\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbScrollSpyMenu]',\n      standalone: true\n    }]\n  }], null, {\n    _items: [{\n      type: ContentChildren,\n      args: [NgbScrollSpyItem, {\n        descendants: true\n      }]\n    }],\n    scrollSpy: [{\n      type: Input,\n      args: ['ngbScrollSpyMenu']\n    }]\n  });\n})();\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\n\n\nclass NgbScrollSpy {\n  constructor() {\n    this._initialFragment = null;\n    this._service = inject(NgbScrollSpyService);\n    this._nativeElement = inject(ElementRef).nativeElement;\n    /**\n     * An event raised when the active section changes.\n     *\n     * Payload is the id of the new active section, empty string if none.\n     */\n\n    this.activeChange = this._service.active$;\n  }\n\n  set active(fragment) {\n    this._initialFragment = fragment;\n    this.scrollTo(fragment);\n  }\n  /**\n   * Getter/setter for the currently active fragment id.\n   */\n\n\n  get active() {\n    return this._service.active;\n  }\n  /**\n   * Returns an observable that emits currently active section id.\n   */\n\n\n  get active$() {\n    return this._service.active$;\n  }\n\n  ngAfterViewInit() {\n    this._service.start({\n      processChanges: this.processChanges,\n      root: this._nativeElement,\n      rootMargin: this.rootMargin,\n      threshold: this.threshold,\n      ...(this._initialFragment && {\n        initialFragment: this._initialFragment\n      })\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  _registerFragment(fragment) {\n    this._service.observe(fragment.id);\n  }\n  /**\n   * @internal\n   */\n\n\n  _unregisterFragment(fragment) {\n    this._service.unobserve(fragment.id);\n  }\n  /**\n   * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n   * An id or an element reference can be passed.\n   */\n\n\n  scrollTo(fragment, options) {\n    this._service.scrollTo(fragment, { ...(this.scrollBehavior && {\n        behavior: this.scrollBehavior\n      }),\n      ...options\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpy_Factory(t) {\n    return new (t || NgbScrollSpy)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbScrollSpy,\n    selectors: [[\"\", \"ngbScrollSpy\", \"\"]],\n    hostAttrs: [\"tabindex\", \"0\", 2, \"overflow-y\", \"auto\"],\n    inputs: {\n      processChanges: \"processChanges\",\n      rootMargin: \"rootMargin\",\n      scrollBehavior: \"scrollBehavior\",\n      threshold: \"threshold\",\n      active: \"active\"\n    },\n    outputs: {\n      activeChange: \"activeChange\"\n    },\n    exportAs: [\"ngbScrollSpy\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([NgbScrollSpyService])]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpy, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbScrollSpy]',\n      standalone: true,\n      exportAs: 'ngbScrollSpy',\n      host: {\n        tabindex: '0',\n        style: 'overflow-y: auto'\n      },\n      providers: [NgbScrollSpyService]\n    }]\n  }], null, {\n    processChanges: [{\n      type: Input\n    }],\n    rootMargin: [{\n      type: Input\n    }],\n    scrollBehavior: [{\n      type: Input\n    }],\n    threshold: [{\n      type: Input\n    }],\n    active: [{\n      type: Input\n    }],\n    activeChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\n\n\nclass NgbScrollSpyFragment {\n  constructor() {\n    this._destroyRef = inject(DestroyRef);\n    this._scrollSpy = inject(NgbScrollSpy);\n  }\n\n  ngAfterViewInit() {\n    this._scrollSpy._registerFragment(this);\n\n    this._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n  }\n\n  static #_ = this.ɵfac = function NgbScrollSpyFragment_Factory(t) {\n    return new (t || NgbScrollSpyFragment)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbScrollSpyFragment,\n    selectors: [[\"\", \"ngbScrollSpyFragment\", \"\"]],\n    hostVars: 1,\n    hostBindings: function NgbScrollSpyFragment_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: [\"ngbScrollSpyFragment\", \"id\"]\n    },\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyFragment, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbScrollSpyFragment]',\n      standalone: true,\n      host: {\n        '[id]': 'id'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input,\n      args: ['ngbScrollSpyFragment']\n    }]\n  });\n})();\n\nclass NgbScrollSpyModule {\n  static #_ = this.ɵfac = function NgbScrollSpyModule_Factory(t) {\n    return new (t || NgbScrollSpyModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbScrollSpyModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbScrollSpyModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n      exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu]\n    }]\n  }], null, null);\n})();\n\nclass NgbTime {\n  constructor(hour, minute, second) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) {\n    this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n  }\n\n  updateHour(hour) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) {\n    this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n  }\n\n  updateMinute(minute) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) {\n    this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n  }\n\n  updateSecond(second) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() {\n    return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n  }\n\n}\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n\n\nclass NgbTimepickerConfig {\n  constructor() {\n    this.meridian = false;\n    this.spinners = true;\n    this.seconds = false;\n    this.hourStep = 1;\n    this.minuteStep = 1;\n    this.secondStep = 1;\n    this.disabled = false;\n    this.readonlyInputs = false;\n    this.size = 'medium';\n  }\n\n  static #_ = this.ɵfac = function NgbTimepickerConfig_Factory(t) {\n    return new (t || NgbTimepickerConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTimepickerConfig,\n    factory: NgbTimepickerConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n\n\nclass NgbTimeAdapter {\n  static #_ = this.ɵfac = function NgbTimeAdapter_Factory(t) {\n    return new (t || NgbTimeAdapter)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTimeAdapter,\n    factory: function () {\n      return NGB_DATEPICKER_TIME_ADAPTER_FACTORY();\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n\n\n  toModel(time) {\n    return time && isInteger(time.hour) && isInteger(time.minute) ? {\n      hour: time.hour,\n      minute: time.minute,\n      second: isInteger(time.second) ? time.second : null\n    } : null;\n  }\n\n  static #_ = this.ɵfac = /* @__PURE__ */function () {\n    let ɵNgbTimeStructAdapter_BaseFactory;\n    return function NgbTimeStructAdapter_Factory(t) {\n      return (ɵNgbTimeStructAdapter_BaseFactory || (ɵNgbTimeStructAdapter_BaseFactory = i0.ɵɵgetInheritedFactory(NgbTimeStructAdapter)))(t || NgbTimeStructAdapter);\n    };\n  }();\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTimeStructAdapter,\n    factory: NgbTimeStructAdapter.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n\n\nclass NgbTimepickerI18n {\n  static #_ = this.ɵfac = function NgbTimepickerI18n_Factory(t) {\n    return new (t || NgbTimepickerI18n)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTimepickerI18n,\n    factory: function NgbTimepickerI18n_Factory(t) {\n      let r = null;\n\n      if (t) {\n        r = new t();\n      } else {\n        r = NGB_TIMEPICKER_I18N_FACTORY(i0.ɵɵinject(LOCALE_ID));\n      }\n\n      return r;\n    },\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  constructor(locale) {\n    super();\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod() {\n    return this._periods[0];\n  }\n\n  getAfternoonPeriod() {\n    return this._periods[1];\n  }\n\n  static #_ = this.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n    return new (t || NgbTimepickerI18nDefault)(i0.ɵɵinject(LOCALE_ID));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTimepickerI18nDefault,\n    factory: NgbTimepickerI18nDefault.ɵfac\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n\nclass NgbTimepicker {\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  set hourStep(step) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep() {\n    return this._hourStep;\n  }\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n\n\n  set minuteStep(step) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep() {\n    return this._minuteStep;\n  }\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n\n\n  set secondStep(step) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep() {\n    return this._secondStep;\n  }\n\n  constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n\n    this.onChange = _ => {};\n\n    this.onTouched = () => {};\n\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /**\n   * Increments the hours by the given step.\n   */\n\n\n  changeHour(step) {\n    this.model?.changeHour(step);\n    this.propagateModelChange();\n  }\n  /**\n   * Increments the minutes by the given step.\n   */\n\n\n  changeMinute(step) {\n    this.model?.changeMinute(step);\n    this.propagateModelChange();\n  }\n  /**\n   * Increments the seconds by the given step.\n   */\n\n\n  changeSecond(step) {\n    this.model?.changeSecond(step);\n    this.propagateModelChange();\n  }\n  /**\n   * Update hours with the new value.\n   */\n\n\n  updateHour(newVal) {\n    const isPM = this.model ? this.model.hour >= 12 : false;\n    const enteredHour = toInteger(newVal);\n\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model?.updateHour(enteredHour + 12);\n    } else {\n      this.model?.updateHour(enteredHour);\n    }\n\n    this.propagateModelChange();\n  }\n  /**\n   * Update minutes with the new value.\n   */\n\n\n  updateMinute(newVal) {\n    this.model?.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n  /**\n   * Update seconds with the new value.\n   */\n\n\n  updateSecond(newVal) {\n    this.model?.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input) {\n    input.value = input.value.replace(FILTER_REGEX, '');\n  }\n\n  formatHour(value) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value) {\n    return padNumber(isNumber(value) ? value : NaN);\n  }\n\n  handleBlur() {\n    this.onTouched();\n  }\n\n  get isSmallSize() {\n    return this.size === 'small';\n  }\n\n  get isLargeSize() {\n    return this.size === 'large';\n  }\n\n  ngOnChanges(changes) {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n\n    if (this.model?.isValid(this.seconds)) {\n      this.onChange(this._ngbTimeAdapter.toModel({\n        hour: this.model.hour,\n        minute: this.model.minute,\n        second: this.model.second\n      }));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbTimepicker_Factory(t) {\n    return new (t || NgbTimepicker)(i0.ɵɵdirectiveInject(NgbTimepickerConfig), i0.ɵɵdirectiveInject(NgbTimeAdapter), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(NgbTimepickerI18n));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbTimepicker,\n    selectors: [[\"ngb-timepicker\"]],\n    inputs: {\n      meridian: \"meridian\",\n      spinners: \"spinners\",\n      seconds: \"seconds\",\n      hourStep: \"hourStep\",\n      minuteStep: \"minuteStep\",\n      secondStep: \"secondStep\",\n      readonlyInputs: \"readonlyInputs\",\n      size: \"size\"\n    },\n    exportAs: [\"ngbTimepicker\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgbTimepicker),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 16,\n    vars: 25,\n    consts: function () {\n      let i18n_57;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_58 = goog.getMsg(\"HH\");\n        i18n_57 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_58;\n      } else {\n        i18n_57 = $localize`:@@ngb.timepicker.HH:HH`;\n      }\n\n      let i18n_59;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_60 = goog.getMsg(\"Hours\");\n        i18n_59 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_60;\n      } else {\n        i18n_59 = $localize`:@@ngb.timepicker.hours:Hours`;\n      }\n\n      let i18n_61;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_62 = goog.getMsg(\"MM\");\n        i18n_61 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_62;\n      } else {\n        i18n_61 = $localize`:@@ngb.timepicker.MM:MM`;\n      }\n\n      let i18n_63;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_64 = goog.getMsg(\"Minutes\");\n        i18n_63 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS_64;\n      } else {\n        i18n_63 = $localize`:@@ngb.timepicker.minutes:Minutes`;\n      }\n\n      let i18n_65;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__66 = goog.getMsg(\"Increment hours\");\n        i18n_65 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__66;\n      } else {\n        i18n_65 = $localize`:@@ngb.timepicker.increment-hours:Increment hours`;\n      }\n\n      let i18n_67;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__68 = goog.getMsg(\"Decrement hours\");\n        i18n_67 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__68;\n      } else {\n        i18n_67 = $localize`:@@ngb.timepicker.decrement-hours:Decrement hours`;\n      }\n\n      let i18n_69;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__70 = goog.getMsg(\"Increment minutes\");\n        i18n_69 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__70;\n      } else {\n        i18n_69 = $localize`:@@ngb.timepicker.increment-minutes:Increment minutes`;\n      }\n\n      let i18n_71;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__72 = goog.getMsg(\"Decrement minutes\");\n        i18n_71 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__72;\n      } else {\n        i18n_71 = $localize`:@@ngb.timepicker.decrement-minutes:Decrement minutes`;\n      }\n\n      let i18n_73;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__74 = goog.getMsg(\"SS\");\n        i18n_73 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__74;\n      } else {\n        i18n_73 = $localize`:@@ngb.timepicker.SS:SS`;\n      }\n\n      let i18n_75;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__76 = goog.getMsg(\"Seconds\");\n        i18n_75 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__76;\n      } else {\n        i18n_75 = $localize`:@@ngb.timepicker.seconds:Seconds`;\n      }\n\n      let i18n_77;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___78 = goog.getMsg(\"Increment seconds\");\n        i18n_77 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___78;\n      } else {\n        i18n_77 = $localize`:@@ngb.timepicker.increment-seconds:Increment seconds`;\n      }\n\n      let i18n_79;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___80 = goog.getMsg(\"Decrement seconds\");\n        i18n_79 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___80;\n      } else {\n        i18n_79 = $localize`:@@ngb.timepicker.decrement-seconds:Decrement seconds`;\n      }\n\n      let i18n_81;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___82 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        }, {\n          original_code: {\n            \"interpolation\": \"{{\\n\\t\\t\\t\\t\\t\\t\\ti18n.getAfternoonPeriod()\\n\\t\\t\\t\\t\\t\\t}}\"\n          }\n        });\n        i18n_81 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___82;\n      } else {\n        i18n_81 = $localize`:@@ngb.timepicker.PM:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      let i18n_83;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___84 = goog.getMsg(\"{$interpolation}\", {\n          \"interpolation\": \"\\uFFFD0\\uFFFD\"\n        }, {\n          original_code: {\n            \"interpolation\": \"{{ i18n.getMorningPeriod() }}\"\n          }\n        });\n        i18n_83 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS___84;\n      } else {\n        i18n_83 = $localize`:@@ngb.timepicker.AM:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:`;\n      }\n\n      return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_57, \"aria-label\", i18n_59, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_61, \"aria-label\", i18n_63, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"visually-hidden\"], i18n_65, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_67, i18n_69, i18n_71, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_73, \"aria-label\", i18n_75, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"blur\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_77, i18n_79, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_81, i18n_83];\n    },\n    template: function NgbTimepicker_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"fieldset\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n          return ctx.updateHour($event.target.value);\n        })(\"blur\", function NgbTimepicker_Template_input_blur_4_listener() {\n          return ctx.handleBlur();\n        })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n          return ctx.formatInput($event.target);\n        })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n          ctx.changeHour(ctx.hourStep);\n          return $event.preventDefault();\n        })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n          ctx.changeHour(-ctx.hourStep);\n          return $event.preventDefault();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \":\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n          return ctx.updateMinute($event.target.value);\n        })(\"blur\", function NgbTimepicker_Template_input_blur_10_listener() {\n          return ctx.handleBlur();\n        })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n          return ctx.formatInput($event.target);\n        })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n          ctx.changeMinute(ctx.minuteStep);\n          return $event.preventDefault();\n        })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n          ctx.changeMinute(-ctx.minuteStep);\n          return $event.preventDefault();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n        i0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n        i0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n        i0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n        i0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.seconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.seconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.meridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      }\n    },\n    dependencies: [NgIf],\n    styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbTimepicker',\n      selector: 'ngb-timepicker',\n      standalone: true,\n      imports: [NgIf],\n      encapsulation: ViewEncapsulation.None,\n      template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-container *ngIf=\"model && model.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{\n\t\t\t\t\t\t\ti18n.getAfternoonPeriod()\n\t\t\t\t\t\t}}</ng-container>\n\t\t\t\t\t\t<ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</fieldset>\n\t`,\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTimepicker),\n        multi: true\n      }],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTimepickerModule {\n  static #_ = this.ɵfac = function NgbTimepickerModule_Factory(t) {\n    return new (t || NgbTimepickerModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbTimepickerModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbTimepicker],\n      exports: [NgbTimepicker]\n    }]\n  }], null, null);\n})();\n\nconst ngbToastFadeInTransition = (element, animation) => {\n  const {\n    classList\n  } = element;\n\n  if (animation) {\n    classList.add('fade');\n  } else {\n    classList.add('show');\n    return;\n  }\n\n  reflow(element);\n  classList.add('show', 'showing');\n  return () => {\n    classList.remove('showing');\n  };\n};\n\nconst ngbToastFadeOutTransition = ({\n  classList\n}) => {\n  classList.add('showing');\n  return () => {\n    classList.remove('show', 'showing');\n  };\n};\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autohide = true;\n    this.delay = 5000;\n    this.ariaLive = 'polite';\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbToastConfig_Factory(t) {\n    return new (t || NgbToastConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbToastConfig,\n    factory: NgbToastConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToastHeader {\n  static #_ = this.ɵfac = function NgbToastHeader_Factory(t) {\n    return new (t || NgbToastHeader)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbToastHeader,\n    selectors: [[\"\", \"ngbToastHeader\", \"\"]],\n    standalone: true\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]',\n      standalone: true\n    }]\n  }], null, null);\n})();\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n\n\nclass NgbToast {\n  constructor(ariaLive, config, _zone, _element) {\n    this.ariaLive = ariaLive;\n    this._zone = _zone;\n    this._element = _element;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n\n    this.contentHeaderTpl = null;\n    /**\n     * An event fired after the animation triggered by calling `.show()` method has finished.\n     *\n     * @since 8.0.0\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event fired after the animation triggered by calling `.hide()` method has finished.\n     *\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross\n     *\n     * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n     * to the user to take care of that.\n     *\n     * @since 8.0.0\n     */\n\n    this.hidden = new EventEmitter();\n\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n    this.animation = config.animation;\n  }\n\n  ngAfterContentInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._init();\n\n      this.show();\n    });\n  }\n\n  ngOnChanges(changes) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n\n      this._init();\n    }\n  }\n  /**\n   * Triggers toast closing programmatically.\n   *\n   * The returned observable will emit and be completed once the closing transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(hidden)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  hide() {\n    this._clearTimeout();\n\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n    transition.subscribe(() => {\n      this.hidden.emit();\n    });\n    return transition;\n  }\n  /**\n   * Triggers toast opening programmatically.\n   *\n   * The returned observable will emit and be completed once the opening transition has finished.\n   * If the animations are turned off this happens synchronously.\n   *\n   * Alternatively you could listen or subscribe to the `(shown)` output\n   *\n   * @since 8.0.0\n   */\n\n\n  show() {\n    const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n      animation: this.animation,\n      runningTransition: 'continue'\n    });\n    transition.subscribe(() => {\n      this.shown.emit();\n    });\n    return transition;\n  }\n\n  _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbToast_Factory(t) {\n    return new (t || NgbToast)(i0.ɵɵinjectAttribute('aria-live'), i0.ɵɵdirectiveInject(NgbToastConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbToast,\n    selectors: [[\"ngb-toast\"]],\n    contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, NgbToastHeader, 7, TemplateRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\", 1, \"toast\"],\n    hostVars: 3,\n    hostBindings: function NgbToast_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n        i0.ɵɵclassProp(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      delay: \"delay\",\n      autohide: \"autohide\",\n      header: \"header\"\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbToast\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 5,\n    vars: 1,\n    consts: function () {\n      let i18n_85;\n\n      if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        /**\n         * @suppress {msgDescriptions}\n         */\n        const MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__86 = goog.getMsg(\"Close\");\n        i18n_85 = MSG_D__ANGULAR_DEV_HR_EMS_EMS_CLIENTAPP_NODE_MODULES__NG_BOOTSTRAP_NG_BOOTSTRAP_FESM2022_NG_BOOTSTRAP_MJS__86;\n      } else {\n        i18n_85 = $localize`:@@ngb.toast.close-aria:Close`;\n      }\n\n      return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"me-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_85, 1, \"btn-close\", 3, \"click\"]];\n    },\n    template: function NgbToast_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 3, 1, \"ng-template\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n      }\n    },\n    dependencies: [NgIf, NgTemplateOutlet],\n    styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      standalone: true,\n      imports: [NgIf, NgTemplateOutlet],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        role: 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        class: 'toast',\n        '[class.fade]': 'animation'\n      },\n      template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t<ng-template [ngIf]=\"contentHeaderTpl || header\">\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-template>\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`,\n      styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbToastModule {\n  static #_ = this.ɵfac = function NgbToastModule_Factory(t) {\n    return new (t || NgbToastModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbToastModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbToast, NgbToastHeader],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n\n\nclass NgbTooltipConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.autoClose = true;\n    this.placement = 'auto';\n\n    this.popperOptions = options => options;\n\n    this.triggers = 'hover focus';\n    this.disableTooltip = false;\n    this.openDelay = 0;\n    this.closeDelay = 0;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbTooltipConfig_Factory(t) {\n    return new (t || NgbTooltipConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTooltipConfig,\n    factory: NgbTooltipConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n\nlet nextId = 0;\n\nclass NgbTooltipWindow {\n  static #_ = this.ɵfac = function NgbTooltipWindow_Factory(t) {\n    return new (t || NgbTooltipWindow)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbTooltipWindow,\n    selectors: [[\"ngb-tooltip-window\"]],\n    hostAttrs: [\"role\", \"tooltip\", 2, \"position\", \"absolute\"],\n    hostVars: 5,\n    hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵclassMap(\"tooltip\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n        i0.ɵɵclassProp(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      id: \"id\",\n      tooltipClass: \"tooltipClass\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 3,\n    vars: 0,\n    consts: [[\"data-popper-arrow\", \"\", 1, \"tooltip-arrow\"], [1, \"tooltip-inner\"]],\n    template: function NgbTooltipWindow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        '[class.fade]': 'animation',\n        role: 'tooltip',\n        '[id]': 'id',\n        style: 'position: absolute;'\n      },\n      template: `<div class=\"tooltip-arrow\" data-popper-arrow></div\n\t\t><div class=\"tooltip-inner\"><ng-content></ng-content></div>`\n    }]\n  }], null, {\n    animation: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n\n\nclass NgbTooltip {\n  constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the tooltip opening animation has finished. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the tooltip closing animation has finished. Contains no payload.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n    this._windowRef = null;\n    this.animation = config.animation;\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.popperOptions = config.popperOptions;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    this._positioning = ngbPositioning();\n  }\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n\n\n  set ngbTooltip(value) {\n    this._ngbTooltip = value;\n\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() {\n    return this._ngbTooltip;\n  }\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n\n\n  open(context) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      const {\n        windowRef,\n        transition$\n      } = this._popupService.open(this._ngbTooltip, context ?? this.tooltipContext, this.animation);\n\n      this._windowRef = windowRef;\n\n      this._windowRef.setInput('animation', this.animation);\n\n      this._windowRef.setInput('tooltipClass', this.tooltipClass);\n\n      this._windowRef.setInput('id', this._ngbTooltipWindowId);\n\n      this._renderer.setAttribute(this._getPositionTargetElement(), 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      } // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n      this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n\n\n      this._windowRef.changeDetectorRef.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        this._positioning.createPopper({\n          hostElement: this._getPositionTargetElement(),\n          targetElement: this._windowRef.location.nativeElement,\n          placement: this.placement,\n          appendToBody: this.container === 'body',\n          baseClass: 'bs-tooltip',\n          updatePopperOptions: options => this.popperOptions(options)\n        });\n\n        Promise.resolve().then(() => {\n          // This update is required for correct arrow placement\n          this._positioning.update();\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        });\n      });\n\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n      transition$.subscribe(() => this.shown.emit());\n    }\n  }\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  close(animation = this.animation) {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._getPositionTargetElement(), 'aria-describedby');\n\n      this._popupService.close(animation).subscribe(() => {\n        this._windowRef = null;\n\n        this._positioning.destroy();\n\n        this._zoneSubscription?.unsubscribe();\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      });\n    }\n  }\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n\n\n  toggle() {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n\n\n  isOpen() {\n    return this._windowRef != null;\n  }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({\n    tooltipClass\n  }) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close(false); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n    this._unregisterListenersFn?.();\n  }\n\n  _getPositionTargetElement() {\n    return (isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) || this._elementRef.nativeElement;\n  }\n\n  static #_ = this.ɵfac = function NgbTooltip_Factory(t) {\n    return new (t || NgbTooltip)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgbTooltipConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbTooltip,\n    selectors: [[\"\", \"ngbTooltip\", \"\"]],\n    inputs: {\n      animation: \"animation\",\n      autoClose: \"autoClose\",\n      placement: \"placement\",\n      popperOptions: \"popperOptions\",\n      triggers: \"triggers\",\n      positionTarget: \"positionTarget\",\n      container: \"container\",\n      disableTooltip: \"disableTooltip\",\n      tooltipClass: \"tooltipClass\",\n      tooltipContext: \"tooltipContext\",\n      openDelay: \"openDelay\",\n      closeDelay: \"closeDelay\",\n      ngbTooltip: \"ngbTooltip\"\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"ngbTooltip\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      standalone: true,\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    popperOptions: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    tooltipContext: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTooltipModule {\n  static #_ = this.ɵfac = function NgbTooltipModule_Factory(t) {\n    return new (t || NgbTooltipModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbTooltipModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbTooltip],\n      exports: [NgbTooltip]\n    }]\n  }], null, null);\n})();\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n\n\nclass NgbHighlight {\n  constructor() {\n    /**\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n     */\n    this.highlightClass = 'ngb-highlight';\n    /**\n     * Boolean option to determine if the highlighting should be sensitive to accents or not.\n     *\n     * This feature is only available for browsers that implement the `String.normalize` function\n     * (typically not Internet Explorer).\n     * If you want to use this feature in a browser that does not implement `String.normalize`,\n     * you will have to include a polyfill in your application (`unorm` for example).\n     *\n     * @since 9.1.0\n     */\n\n    this.accentSensitive = true;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.accentSensitive && !String.prototype.normalize) {\n      console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' + 'that does not implement the `String.normalize` function. ' + 'You will have to include a polyfill in your application to use this feature in the current browser.');\n      this.accentSensitive = true;\n    }\n\n    const result = toString(this.result);\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n\n    const prepareTerm = term => this.accentSensitive ? term : removeAccents(term);\n\n    const escapedTerms = terms.map(term => regExpEscape(prepareTerm(toString(term)))).filter(term => term);\n    const toSplit = this.accentSensitive ? result : removeAccents(result);\n    const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n\n    if (this.accentSensitive) {\n      this.parts = parts;\n    } else {\n      let offset = 0;\n      this.parts = parts.map(part => result.substring(offset, offset += part.length));\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbHighlight_Factory(t) {\n    return new (t || NgbHighlight)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbHighlight,\n    selectors: [[\"ngb-highlight\"]],\n    inputs: {\n      highlightClass: \"highlightClass\",\n      result: \"result\",\n      term: \"term\",\n      accentSensitive: \"accentSensitive\"\n    },\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n    template: function NgbHighlight_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.parts);\n      }\n    },\n    dependencies: [NgIf, NgFor],\n    styles: [\".ngb-highlight{font-weight:700}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      standalone: true,\n      imports: [NgIf, NgFor],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` + `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` + `</ng-template>`,\n      styles: [\".ngb-highlight{font-weight:700}\\n\"]\n    }]\n  }], null, {\n    highlightClass: [{\n      type: Input\n    }],\n    result: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    term: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }],\n    accentSensitive: [{\n      type: Input\n    }]\n  });\n})();\n\nclass NgbTypeaheadWindow {\n  constructor() {\n    this.activeIdx = 0;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n\n    this.focusFirst = true;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n\n    this.formatter = toString;\n    /**\n     * Event raised when user selects a particular result row\n     */\n\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n\n  hasActive() {\n    return this.activeIdx > -1 && this.activeIdx < this.results.length;\n  }\n\n  getActive() {\n    return this.results[this.activeIdx];\n  }\n\n  markActive(activeIdx) {\n    this.activeIdx = activeIdx;\n\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n\n    this._activeChanged();\n  }\n\n  select(item) {\n    this.selectEvent.emit(item);\n  }\n\n  ngOnInit() {\n    this.resetActive();\n  }\n\n  _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n\n  static #_ = this.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n    return new (t || NgbTypeaheadWindow)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbTypeaheadWindow,\n    selectors: [[\"ngb-typeahead-window\"]],\n    hostAttrs: [\"role\", \"listbox\"],\n    hostVars: 3,\n    hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n          return $event.preventDefault();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵclassMap(\"dropdown-menu show\" + (ctx.popupClass ? \" \" + ctx.popupClass : \"\"));\n      }\n    },\n    inputs: {\n      id: \"id\",\n      focusFirst: \"focusFirst\",\n      results: \"results\",\n      term: \"term\",\n      formatter: \"formatter\",\n      resultTemplate: \"resultTemplate\",\n      popupClass: \"popupClass\"\n    },\n    outputs: {\n      selectEvent: \"select\",\n      activeChangeEvent: \"activeChange\"\n    },\n    exportAs: [\"ngbTypeaheadWindow\"],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function NgbTypeaheadWindow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.results);\n      }\n    },\n    dependencies: [NgbHighlight, NgFor, NgTemplateOutlet],\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      standalone: true,\n      imports: [NgbHighlight, NgFor, NgTemplateOutlet],\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n        role: 'listbox',\n        '[id]': 'id'\n      },\n      template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n\t\t</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + idx\"\n\t\t\t\t[class.active]=\"idx === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive(idx)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t`\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }]\n  });\n})();\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n\n\nclass NgbTypeaheadConfig {\n  constructor() {\n    this.editable = true;\n    this.focusFirst = true;\n    this.selectOnExact = false;\n    this.showHint = false;\n    this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n\n    this.popperOptions = options => options;\n  }\n\n  static #_ = this.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n    return new (t || NgbTypeaheadConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbTypeaheadConfig,\n    factory: NgbTypeaheadConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\n\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\n\nfunction getLiveElement(document, lazyCreate = false) {\n  let element = document.body.querySelector('#ngb-live');\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('visually-hidden');\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\nclass Live {\n  constructor(_document, _delay) {\n    this._document = _document;\n    this._delay = _delay;\n  }\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n\n    if (element) {\n      // if exists, it will always be attached to the <body>\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    if (element != null) {\n      element.textContent = '';\n\n      const setText = () => element.textContent = message;\n\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }\n\n  static #_ = this.ɵfac = function Live_Factory(t) {\n    return new (t || Live)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ARIA_LIVE_DELAY));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Live,\n    factory: Live.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n\nclass NgbTypeahead {\n  constructor(_elementRef, viewContainerRef, _renderer, injector, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._subscription = null;\n    this._closed$ = new Subject();\n    this._inputValueBackup = null;\n    this._inputValueForSelectOnExact = null;\n    this._windowRef = null;\n    /**\n     * The value for the `autocomplete` attribute for the `<input>` element.\n     *\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n     *\n     * @since 2.1.0\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n     *\n     * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n     *\n     * Please see the [positioning overview](#/positioning) for more details.\n     */\n\n    this.placement = 'bottom-start';\n    /**\n     * An event emitted right before an item is selected from the result list.\n     *\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n     */\n\n    this.selectItem = new EventEmitter();\n    this.activeDescendant = null;\n    this.popupId = `ngb-typeahead-${nextWindowId++}`;\n\n    this._onTouched = () => {};\n\n    this._onChange = _ => {};\n\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.selectOnExact = config.selectOnExact;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this.popperOptions = config.popperOptions;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map($event => $event.target.value));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    this._positioning = ngbPositioning();\n  }\n\n  ngOnInit() {\n    this._subscribeToUserInput();\n  }\n\n  ngOnChanges({\n    ngbTypeahead\n  }) {\n    if (ngbTypeahead && !ngbTypeahead.firstChange) {\n      this._unsubscribeFromUserInput();\n\n      this._subscribeToUserInput();\n    }\n  }\n\n  ngOnDestroy() {\n    this._closePopup();\n\n    this._unsubscribeFromUserInput();\n  }\n\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n  /**\n   * Dismisses typeahead popup window\n   */\n\n\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n\n      this._closePopup();\n\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n\n      this._changeDetector.markForCheck();\n    }\n  }\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n\n\n  isPopupOpen() {\n    return this._windowRef != null;\n  }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n\n    this._onTouched();\n  }\n\n  handleKeyDown(event) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n    /* eslint-disable-next-line deprecation/deprecation */\n\n\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n\n        this._windowRef.instance.next();\n\n        this._showHint();\n\n        break;\n\n      case Key.ArrowUp:\n        event.preventDefault();\n\n        this._windowRef.instance.prev();\n\n        this._showHint();\n\n        break;\n\n      case Key.Enter:\n      case Key.Tab:\n        {\n          const result = this._windowRef.instance.getActive();\n\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._selectResult(result);\n          }\n\n          this._closePopup();\n\n          break;\n        }\n    }\n  }\n\n  _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n\n      const {\n        windowRef\n      } = this._popupService.open();\n\n      this._windowRef = windowRef;\n\n      this._windowRef.setInput('id', this.popupId);\n\n      this._windowRef.setInput('popupClass', this.popupClass);\n\n      this._windowRef.instance.selectEvent.subscribe(result => this._selectResultClosePopup(result));\n\n      this._windowRef.instance.activeChangeEvent.subscribe(activeId => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        this._renderer.setStyle(this._windowRef.location.nativeElement, 'z-index', '1055');\n\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck(); // Setting up popper and scheduling updates when zone is stable\n\n\n      this._ngZone.runOutsideAngular(() => {\n        if (this._windowRef) {\n          this._positioning.createPopper({\n            hostElement: this._elementRef.nativeElement,\n            targetElement: this._windowRef.location.nativeElement,\n            placement: this.placement,\n            appendToBody: this.container === 'body',\n            updatePopperOptions: options => this.popperOptions(addPopperOffset([0, 2])(options))\n          });\n\n          this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n        }\n      });\n\n      ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  _closePopup() {\n    this._popupService.close().subscribe(() => {\n      this._positioning.destroy();\n\n      this._zoneSubscription?.unsubscribe();\n\n      this._closed$.next();\n\n      this._windowRef = null;\n      this.activeDescendant = null;\n    });\n  }\n\n  _selectResult(result) {\n    let defaultPrevented = false;\n    this.selectItem.emit({\n      item: result,\n      preventDefault: () => {\n        defaultPrevented = true;\n      }\n    });\n\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n\n      this._onChange(result);\n    }\n  }\n\n  _selectResultClosePopup(result) {\n    this._selectResult(result);\n\n    this._closePopup();\n  }\n\n  _showHint() {\n    if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n\n        this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  _formatItemForInput(item) {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  _writeInputValue(value) {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  _subscribeToUserInput() {\n    const results$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n\n      this._onChange(this.editable ? value : undefined);\n    }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n\n    this._subscription = this._resubscribeTypeahead.pipe(switchMap(() => results$)).subscribe(results => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        // when there is only one result and this matches the input value\n        if (this.selectOnExact && results.length === 1 && this._formatItemForInput(results[0]) === this._inputValueForSelectOnExact) {\n          this._selectResult(results[0]);\n\n          this._closePopup();\n        } else {\n          this._openPopup();\n\n          this._windowRef.instance.focusFirst = this.focusFirst;\n          this._windowRef.instance.results = results;\n          this._windowRef.instance.term = this._elementRef.nativeElement.value;\n\n          if (this.resultFormatter) {\n            this._windowRef.instance.formatter = this.resultFormatter;\n          }\n\n          if (this.resultTemplate) {\n            this._windowRef.instance.resultTemplate = this.resultTemplate;\n          }\n\n          this._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps\n          // and if a component containing typeahead is using the OnPush strategy\n          // the change detection turn wouldn't be invoked automatically.\n\n\n          this._windowRef.changeDetectorRef.detectChanges();\n\n          this._showHint();\n        }\n      } // live announcer\n\n\n      const count = results ? results.length : 0;\n\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n\n    this._subscription = null;\n  }\n\n  static #_ = this.ɵfac = function NgbTypeahead_Factory(t) {\n    return new (t || NgbTypeahead)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(NgbTypeaheadConfig), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(Live), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgbTypeahead,\n    selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n    hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\"],\n    hostVars: 7,\n    hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n          return ctx.handleBlur();\n        })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyDown($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n        i0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n        i0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n      }\n    },\n    inputs: {\n      autocomplete: \"autocomplete\",\n      container: \"container\",\n      editable: \"editable\",\n      focusFirst: \"focusFirst\",\n      inputFormatter: \"inputFormatter\",\n      ngbTypeahead: \"ngbTypeahead\",\n      resultFormatter: \"resultFormatter\",\n      resultTemplate: \"resultTemplate\",\n      selectOnExact: \"selectOnExact\",\n      showHint: \"showHint\",\n      placement: \"placement\",\n      popperOptions: \"popperOptions\",\n      popupClass: \"popupClass\"\n    },\n    outputs: {\n      selectItem: \"selectItem\"\n    },\n    exportAs: [\"ngbTypeahead\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgbTypeahead),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      standalone: true,\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        autocapitalize: 'off',\n        autocorrect: 'off',\n        role: 'combobox',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgbTypeahead),\n        multi: true\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }],\n    selectOnExact: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    popperOptions: [{\n      type: Input\n    }],\n    popupClass: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }]\n  });\n})();\n\nclass NgbTypeaheadModule {\n  static #_ = this.ɵfac = function NgbTypeaheadModule_Factory(t) {\n    return new (t || NgbTypeaheadModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbTypeaheadModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NgbHighlight, NgbTypeahead],\n      exports: [NgbHighlight, NgbTypeahead]\n    }]\n  }], null, null);\n})();\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\n\n\nclass NgbActiveOffcanvas {\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n   */\n  close(result) {}\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {}\n\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvasRef {\n  /**\n   * The instance of a component used for the offcanvas content.\n   *\n   * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n   */\n  get componentInstance() {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n  /**\n   * The observable that emits when the offcanvas is closed via the `.close()` method.\n   *\n   * It will emit the result passed to the `.close()` method.\n   */\n\n\n  get closed() {\n    return this._closed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n   *\n   * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n   * reasons like backdrop click or ESC key press.\n   */\n\n\n  get dismissed() {\n    return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n  }\n  /**\n   * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n   * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n   *\n   * This observable will be completed after emitting.\n   */\n\n\n  get hidden() {\n    return this._hidden.asObservable();\n  }\n  /**\n   * The observable that emits when offcanvas is fully visible and animation was finished.\n   * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n   *\n   * This observable will be completed after emitting.\n   * It will not emit, if offcanvas is closed before open animation is finished.\n   */\n\n\n  get shown() {\n    return this._panelCmptRef.instance.shown.asObservable();\n  }\n\n  constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    this._panelCmptRef = _panelCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n    this._closed = new Subject();\n    this._dismissed = new Subject();\n    this._hidden = new Subject();\n\n    _panelCmptRef.instance.dismissEvent.subscribe(reason => {\n      this.dismiss(reason);\n    });\n\n    if (_backdropCmptRef) {\n      _backdropCmptRef.instance.dismissEvent.subscribe(reason => {\n        this.dismiss(reason);\n      });\n    }\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n  /**\n   * Closes the offcanvas with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n\n\n  close(result) {\n    if (this._panelCmptRef) {\n      this._closed.next(result);\n\n      this._resolve(result);\n\n      this._removeOffcanvasElements();\n    }\n  }\n\n  _dismiss(reason) {\n    this._dismissed.next(reason);\n\n    this._reject(reason);\n\n    this._removeOffcanvasElements();\n  }\n  /**\n   * Dismisses the offcanvas with an optional `reason` value.\n   *\n   * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n   */\n\n\n  dismiss(reason) {\n    if (this._panelCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n\n        if (isPromise(dismiss)) {\n          dismiss.then(result => {\n            if (result !== false) {\n              this._dismiss(reason);\n            }\n          }, () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  _removeOffcanvasElements() {\n    const panelTransition$ = this._panelCmptRef.instance.hide();\n\n    const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined); // hiding panel\n\n    panelTransition$.subscribe(() => {\n      const {\n        nativeElement\n      } = this._panelCmptRef.location;\n      nativeElement.parentNode.removeChild(nativeElement);\n\n      this._panelCmptRef.destroy();\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._panelCmptRef = null;\n      this._contentRef = null;\n    }); // hiding backdrop\n\n    backdropTransition$.subscribe(() => {\n      if (this._backdropCmptRef) {\n        const {\n          nativeElement\n        } = this._backdropCmptRef.location;\n        nativeElement.parentNode.removeChild(nativeElement);\n\n        this._backdropCmptRef.destroy();\n\n        this._backdropCmptRef = null;\n      }\n    }); // all done\n\n    zip(panelTransition$, backdropTransition$).subscribe(() => {\n      this._hidden.next();\n\n      this._hidden.complete();\n    });\n  }\n\n}\n\nvar OffcanvasDismissReasons;\n\n(function (OffcanvasDismissReasons) {\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n  constructor(_el, _zone) {\n    this._el = _el;\n    this._zone = _zone;\n    this.dismissEvent = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n        if (animation) {\n          reflow(element);\n        }\n\n        element.classList.add('show');\n      }, {\n        animation: this.animation,\n        runningTransition: 'continue'\n      });\n    });\n  }\n\n  hide() {\n    return ngbRunTransition(this._zone, this._el.nativeElement, ({\n      classList\n    }) => classList.remove('show'), {\n      animation: this.animation,\n      runningTransition: 'stop'\n    });\n  }\n\n  dismiss() {\n    if (!this.static) {\n      this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n    }\n  }\n\n  static #_ = this.ɵfac = function NgbOffcanvasBackdrop_Factory(t) {\n    return new (t || NgbOffcanvasBackdrop)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbOffcanvasBackdrop,\n    selectors: [[\"ngb-offcanvas-backdrop\"]],\n    hostVars: 6,\n    hostBindings: function NgbOffcanvasBackdrop_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function NgbOffcanvasBackdrop_mousedown_HostBindingHandler() {\n          return ctx.dismiss();\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(\"offcanvas-backdrop\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n        i0.ɵɵclassProp(\"show\", !ctx.animation)(\"fade\", ctx.animation);\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      backdropClass: \"backdropClass\",\n      static: \"static\"\n    },\n    outputs: {\n      dismissEvent: \"dismiss\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function NgbOffcanvasBackdrop_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-offcanvas-backdrop',\n      standalone: true,\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        '[class.show]': '!animation',\n        '[class.fade]': 'animation',\n        '(mousedown)': 'dismiss()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    backdropClass: [{\n      type: Input\n    }],\n    static: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n\nclass NgbOffcanvasPanel {\n  constructor(_document, _elRef, _zone) {\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this._elWithFocus = null; // element that is focused prior to offcanvas opening\n\n    this.keyboard = true;\n    this.position = 'start';\n    this.dismissEvent = new EventEmitter();\n    this.shown = new Subject();\n    this.hidden = new Subject();\n  }\n\n  dismiss(reason) {\n    this.dismissEvent.emit(reason);\n  }\n\n  ngOnInit() {\n    this._elWithFocus = this._document.activeElement;\n\n    this._zone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._show();\n    });\n  }\n\n  ngOnDestroy() {\n    this._disableEventHandling();\n  }\n\n  hide() {\n    const {\n      nativeElement\n    } = this._elRef;\n    const context = {\n      animation: this.animation,\n      runningTransition: 'stop'\n    };\n    const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, element => {\n      nativeElement.classList.remove('showing');\n      nativeElement.classList.add('hiding');\n      return () => nativeElement.classList.remove('show', 'hiding');\n    }, context);\n    offcanvasTransition$.subscribe(() => {\n      this.hidden.next();\n      this.hidden.complete();\n    });\n\n    this._disableEventHandling();\n\n    this._restoreFocus();\n\n    return offcanvasTransition$;\n  }\n\n  _show() {\n    const context = {\n      animation: this.animation,\n      runningTransition: 'continue'\n    };\n    const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n      if (animation) {\n        reflow(element);\n      }\n\n      element.classList.add('show', 'showing');\n      return () => element.classList.remove('showing');\n    }, context);\n    offcanvasTransition$.subscribe(() => {\n      this.shown.next();\n      this.shown.complete();\n    });\n\n    this._enableEventHandling();\n\n    this._setFocus();\n  }\n\n  _enableEventHandling() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    this._zone.runOutsideAngular(() => {\n      fromEvent(nativeElement, 'keydown').pipe(takeUntil(this._closed$),\n      /* eslint-disable-next-line deprecation/deprecation */\n      filter(e => e.which === Key.Escape)).subscribe(event => {\n        if (this.keyboard) {\n          requestAnimationFrame(() => {\n            if (!event.defaultPrevented) {\n              this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n            }\n          });\n        }\n      });\n    });\n  }\n\n  _disableEventHandling() {\n    this._closed$.next();\n  }\n\n  _setFocus() {\n    const {\n      nativeElement\n    } = this._elRef;\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  _restoreFocus() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n    let elementToFocus;\n\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbOffcanvasPanel_Factory(t) {\n    return new (t || NgbOffcanvasPanel)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgbOffcanvasPanel,\n    selectors: [[\"ngb-offcanvas-panel\"]],\n    hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n    hostVars: 5,\n    hostBindings: function NgbOffcanvasPanel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"aria-describedby\", ctx.ariaDescribedBy);\n        i0.ɵɵclassMap(\"offcanvas offcanvas-\" + ctx.position + (ctx.panelClass ? \" \" + ctx.panelClass : \"\"));\n      }\n    },\n    inputs: {\n      animation: \"animation\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      ariaDescribedBy: \"ariaDescribedBy\",\n      keyboard: \"keyboard\",\n      panelClass: \"panelClass\",\n      position: \"position\"\n    },\n    outputs: {\n      dismissEvent: \"dismiss\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 1,\n    vars: 0,\n    template: function NgbOffcanvasPanel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasPanel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-offcanvas-panel',\n      standalone: true,\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n        role: 'dialog',\n        tabindex: '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy',\n        '[attr.aria-describedby]': 'ariaDescribedBy'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    animation: [{\n      type: Input\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    ariaDescribedBy: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }]\n  });\n})();\n\nclass NgbOffcanvasStack {\n  constructor(_applicationRef, _injector, _document, _scrollBar, _ngZone) {\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._ngZone = _ngZone;\n    this._activePanelCmptHasChanged = new Subject();\n    this._scrollBarRestoreFn = null;\n    this._backdropAttributes = ['animation', 'backdropClass'];\n    this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n    this._activeInstance = new EventEmitter(); // Trap focus on active PanelCmpt\n\n    this._activePanelCmptHasChanged.subscribe(() => {\n      if (this._panelCmpt) {\n        ngbFocusTrap(this._ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n      }\n    });\n  }\n\n  _restoreScrollBar() {\n    const scrollBarRestoreFn = this._scrollBarRestoreFn;\n\n    if (scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = null;\n      scrollBarRestoreFn();\n    }\n  }\n\n  _hideScrollBar() {\n    if (!this._scrollBarRestoreFn) {\n      this._scrollBarRestoreFn = this._scrollBar.hide();\n    }\n  }\n\n  open(contentInjector, content, options) {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n    if (!containerEl) {\n      throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    if (!options.scroll) {\n      this._hideScrollBar();\n    }\n\n    const activeOffcanvas = new NgbActiveOffcanvas();\n\n    const contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n\n    let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n\n    let panelCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n\n    let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerOffcanvasRef(ngbOffcanvasRef);\n\n    this._registerPanelCmpt(panelCmptRef);\n\n    ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n\n    activeOffcanvas.close = result => {\n      ngbOffcanvasRef.close(result);\n    };\n\n    activeOffcanvas.dismiss = reason => {\n      ngbOffcanvasRef.dismiss(reason);\n    };\n\n    this._applyPanelOptions(panelCmptRef.instance, options);\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n\n      backdropCmptRef.changeDetectorRef.detectChanges();\n    }\n\n    panelCmptRef.changeDetectorRef.detectChanges();\n    return ngbOffcanvasRef;\n  }\n\n  get activeInstance() {\n    return this._activeInstance;\n  }\n\n  dismiss(reason) {\n    this._offcanvasRef?.dismiss(reason);\n  }\n\n  hasOpenOffcanvas() {\n    return !!this._offcanvasRef;\n  }\n\n  _attachBackdrop(containerEl) {\n    let backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n      environmentInjector: this._applicationRef.injector,\n      elementInjector: this._injector\n    });\n\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  _attachWindowComponent(containerEl, projectableNodes) {\n    let panelCmptRef = createComponent(NgbOffcanvasPanel, {\n      environmentInjector: this._applicationRef.injector,\n      elementInjector: this._injector,\n      projectableNodes\n    });\n\n    this._applicationRef.attachView(panelCmptRef.hostView);\n\n    containerEl.appendChild(panelCmptRef.location.nativeElement);\n    return panelCmptRef;\n  }\n\n  _applyPanelOptions(windowInstance, options) {\n    this._panelAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  _applyBackdropOptions(backdropInstance, options) {\n    this._backdropAttributes.forEach(optionName => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n\n    backdropInstance.static = options.backdrop === 'static';\n  }\n\n  _getContentRef(contentInjector, content, activeOffcanvas) {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeOffcanvas);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(contentInjector, content, activeOffcanvas);\n    }\n  }\n\n  _createFromTemplateRef(templateRef, activeOffcanvas) {\n    const context = {\n      $implicit: activeOffcanvas,\n\n      close(result) {\n        activeOffcanvas.close(result);\n      },\n\n      dismiss(reason) {\n        activeOffcanvas.dismiss(reason);\n      }\n\n    };\n    const viewRef = templateRef.createEmbeddedView(context);\n\n    this._applicationRef.attachView(viewRef);\n\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  _createFromString(content) {\n    const component = this._document.createTextNode(`${content}`);\n\n    return new ContentRef([[component]]);\n  }\n\n  _createFromComponent(contentInjector, componentType, context) {\n    const elementInjector = Injector.create({\n      providers: [{\n        provide: NgbActiveOffcanvas,\n        useValue: context\n      }],\n      parent: contentInjector\n    });\n    const componentRef = createComponent(componentType, {\n      environmentInjector: this._applicationRef.injector,\n      elementInjector\n    });\n    const componentNativeEl = componentRef.location.nativeElement;\n\n    this._applicationRef.attachView(componentRef.hostView);\n\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  _registerOffcanvasRef(ngbOffcanvasRef) {\n    const unregisterOffcanvasRef = () => {\n      this._offcanvasRef = undefined;\n\n      this._activeInstance.emit(this._offcanvasRef);\n    };\n\n    this._offcanvasRef = ngbOffcanvasRef;\n\n    this._activeInstance.emit(this._offcanvasRef);\n\n    ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n  }\n\n  _registerPanelCmpt(ngbPanelCmpt) {\n    this._panelCmpt = ngbPanelCmpt;\n\n    this._activePanelCmptHasChanged.next();\n\n    ngbPanelCmpt.onDestroy(() => {\n      this._panelCmpt = undefined;\n\n      this._activePanelCmptHasChanged.next();\n    });\n  }\n\n  static #_ = this.ɵfac = function NgbOffcanvasStack_Factory(t) {\n    return new (t || NgbOffcanvasStack)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ScrollBar), i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbOffcanvasStack,\n    factory: NgbOffcanvasStack.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.ApplicationRef\n    }, {\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvasConfig {\n  constructor(_ngbConfig) {\n    this._ngbConfig = _ngbConfig;\n    this.backdrop = true;\n    this.keyboard = true;\n    this.position = 'start';\n    this.scroll = false;\n  }\n\n  get animation() {\n    return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n  }\n\n  set animation(animation) {\n    this._animation = animation;\n  }\n\n  static #_ = this.ɵfac = function NgbOffcanvasConfig_Factory(t) {\n    return new (t || NgbOffcanvasConfig)(i0.ɵɵinject(NgbConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbOffcanvasConfig,\n    factory: NgbOffcanvasConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgbConfig\n    }];\n  }, null);\n})();\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\n\n\nclass NgbOffcanvas {\n  constructor(_injector, _offcanvasStack, _config) {\n    this._injector = _injector;\n    this._offcanvasStack = _offcanvasStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new offcanvas panel with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n   * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n   *\n   * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n   * options.\n   */\n\n\n  open(content, options = {}) {\n    const combinedOptions = { ...this._config,\n      animation: this._config.animation,\n      ...options\n    };\n    return this._offcanvasStack.open(this._injector, content, combinedOptions);\n  }\n  /**\n   * Returns an observable that holds the active offcanvas instance.\n   */\n\n\n  get activeInstance() {\n    return this._offcanvasStack.activeInstance;\n  }\n  /**\n   * Dismisses the currently displayed offcanvas with the supplied reason.\n   */\n\n\n  dismiss(reason) {\n    this._offcanvasStack.dismiss(reason);\n  }\n  /**\n   * Indicates if there is currently an open offcanvas in the application.\n   */\n\n\n  hasOpenOffcanvas() {\n    return this._offcanvasStack.hasOpenOffcanvas();\n  }\n\n  static #_ = this.ɵfac = function NgbOffcanvas_Factory(t) {\n    return new (t || NgbOffcanvas)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NgbOffcanvasStack), i0.ɵɵinject(NgbOffcanvasConfig));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgbOffcanvas,\n    factory: NgbOffcanvas.ɵfac,\n    providedIn: 'root'\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvas, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: NgbOffcanvasStack\n    }, {\n      type: NgbOffcanvasConfig\n    }];\n  }, null);\n})();\n\nclass NgbOffcanvasModule {\n  static #_ = this.ɵfac = function NgbOffcanvasModule_Factory(t) {\n    return new (t || NgbOffcanvasModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbOffcanvasModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbOffcanvasModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\nconst NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbScrollSpyModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule];\n\nclass NgbModule {\n  static #_ = this.ɵfac = function NgbModule_Factory(t) {\n    return new (t || NgbModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgbModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbOffcanvasModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbScrollSpyModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule]\n  });\n}\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionBody, NgbAccordionButton, NgbAccordionCollapse, NgbAccordionConfig, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem, NgbAccordionModule, NgbAccordionToggle, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDateStructAdapter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkBase, NgbNavLinkButton, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRating, NgbRatingConfig, NgbRatingModule, NgbScrollSpy, NgbScrollSpyConfig, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu, NgbScrollSpyModule, NgbScrollSpyService, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };","map":{"version":3,"names":["i0","Injectable","Directive","EventEmitter","Input","Output","ContentChildren","forwardRef","Inject","Optional","Host","Component","ViewEncapsulation","inject","ApplicationRef","ElementRef","TemplateRef","ContentChild","NgModule","ChangeDetectionStrategy","PLATFORM_ID","LOCALE_ID","ViewChild","Injector","EnvironmentInjector","createComponent","Attribute","ViewChildren","HostBinding","ChangeDetectorRef","NgZone","DestroyRef","InjectionToken","Observable","EMPTY","of","Subject","fromEvent","timer","race","BehaviorSubject","combineLatest","NEVER","zip","merge","endWith","takeUntil","filter","take","map","startWith","distinctUntilChanged","switchMap","tap","withLatestFrom","delay","mergeMap","skip","share","finalize","NgFor","NgTemplateOutlet","NgIf","isPlatformBrowser","getLocaleMonthNames","FormStyle","TranslationWidth","getLocaleDayNames","formatDate","DOCUMENT","PercentPipe","getLocaleDayPeriods","NG_VALUE_ACCESSOR","NG_VALIDATORS","flip","preventOverflow","arrow","createPopperLite","offset","takeUntilDestroyed","toInteger","value","parseInt","toString","undefined","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","isPromise","v","then","padNumber","slice","regExpEscape","text","replace","hasClassName","element","className","split","indexOf","closest","selector","reflow","document","body","getBoundingClientRect","runInZone","zone","source","observer","next","run","error","e","complete","subscribe","removeAccents","str","normalize","getActiveElement","root","activeEl","activeElement","shadowRoot","getTransitionDurationMs","transitionDelay","transitionDuration","window","getComputedStyle","transitionDelaySec","parseFloat","transitionDurationSec","environment","animation","transitionTimerDelayMs","noopFn","runningTransitions","Map","ngbRunTransition","startFn","options","context","running","get","runningTransition","transition$","Object","assign","delete","endFn","transitionProperty","pipe","finishTransition$","stop$","set","transitionDurationMs","runOutsideAngular","transitionEnd$","target","timer$","asObservable","ngbCompleteTransition","measureCollapsingElementDimensionPx","dimension","navigator","classList","hasShownClass","contains","add","style","dimensionSize","remove","ngbCollapsingTransition","direction","maxSize","setInitialClasses","NgbConfig","constructor","ɵfac","ɵprov","type","args","providedIn","NgbAccordionConfig","_ngbConfig","closeOthers","_animation","nextId$4","NgbPanelHeader","templateRef","ɵdir","standalone","NgbPanelTitle","NgbPanelContent","NgbPanel","disabled","id","isOpen","initClassDone","transitionRunning","shown","hidden","ngAfterContentChecked","titleTpl","titleTpls","first","headerTpl","headerTpls","contentTpl","contentTpls","title","cardClass","descendants","NgbRefDirective","_El","ngbRef","ngOnInit","emit","nativeElement","ngOnDestroy","NgbPanelToggle","ngbPanelToggle","panel","accordion","NgbAccordion","host","decorators","config","_ngZone","_changeDetector","activeIds","destroyOnHide","panelChange","closeOtherPanels","isExpanded","panelId","expand","_changeOpenState","_findPanelById","expandAll","length","panels","forEach","collapse","collapseAll","toggle","_closeOthers","_updateActiveIds","onStable","panelElement","panelDiv","nextState","defaultPrevented","preventDefault","_runTransitions","enableTransition","find","p","detectChanges","ɵcmp","exportAs","imports","encapsulation","None","class","role","template","NgbCollapseConfig","horizontal","NgbCollapse","collapsed","isCollapsed","_isCollapsed","_afterInit","_runTransitionWithEvents","_element","_zone","ngbCollapseChange","_runTransition","open","nextId$3","NgbAccordionBody","_appRef","_item","NgbAccordionItem","_viewRef","_bodyTpl","animatingBodyCollapse","_createViewIfNotExists","_destroyViewIfExists","detachView","destroy","createEmbeddedView","attachView","node","rootNodes","appendChild","static","NgbAccordionCollapse","item","ngbCollapse","hostDirectives","directive","NgbAccordionToggle","NgbAccordionDirective","NgbAccordionButton","NgbAccordionHeader","_accordion","_cd","_subscriptions","_collapsed","_id","show","hide","_destroyOnHide","_ensureCanExpand","markForCheck","_collapse","toggleId","collapseId","ngAfterContentInit","push","s","unsubscribe","_anItemWasAlreadyExpandedDuringInitialisation","itemId","_getItem","_items","toExpand","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","ɵmod","ɵinj","exports","ngbAlertFadingTransition","NgbAlertConfig","dismissible","NgbAlert","_renderer","closed","close","transition","ngOnChanges","changes","typeChange","firstChange","removeClass","previousValue","addClass","currentValue","Renderer2","changeDetection","OnPush","styles","NgbAlertModule","NgbSlideEventDirection","isBeingAnimated","removeDirectionClasses","removeClasses","ngbCarouselTransitionIn","START","ngbCarouselTransitionOut","NgbCarouselConfig","interval","wrap","keyboard","pauseOnHover","pauseOnFocus","showNavigationArrows","showNavigationIndicators","nextId$2","NgbSlide","tplRef","slid","NgbCarousel","_interval$","_wrap$","_pauseOnHover$","_pauseOnFocus$","mouseHover","_mouseHover$","focused","_focused$","_platformId","_container","NgbSlideEventSource","_destroy$","_pause$","slide","_transitionIds","arrowLeft","focus","prev","ARROW_LEFT","arrowRight","ARROW_RIGHT","hasNextSlide$","slideEvent","current","activeId","slides","currentSlideId","slideArr","toArray","currentSlideIdx","_getSlideIdxById","pause","hasNextSlide","TIMER","_getSlideElement","activeSlide","_getSlideById","ngAfterViewInit","select","slideId","_cycleToSelected","_getSlideEventDirection","_getPrevSlide","END","_getNextSlide","cycle","slideIdx","transitionIds","selectedSlide","paused","transitions","activeSlideTransition","isShown","previousId","nextSlide","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","nextActiveSlideIdx","isLastSlide","isFirstSlide","querySelector","tabIndex","NgbCarouselModule","NgbCollapseModule","NgbDate","from","date","year","month","day","equals","other","before","after","isChangedDate","dateComparator","isChangedMonth","checkMinBeforeMax","minDate","maxDate","Error","checkDateInRange","isDateSelectable","state","markDisabled","generateSelectBoxMonths","calendar","months","getMonths","index","findIndex","generateSelectBoxYears","start","end","numbers","Array","i","nextMonthDisabled","nextDate","getNext","prevMonthDisabled","prevDate","getPrev","buildMonths","i18n","force","displayMonths","monthsToReuse","splice","firstDates","_","firstDate","reusedIndex","buildMonth","shift","dayTemplateData","firstDayOfWeek","outsideDays","weekdayWidth","weekdaysVisible","calendarToday","getToday","lastDate","number","weeks","weekdays","getFirstViewDate","week","getWeeksPerMonth","weekObject","days","getDaysPerWeek","getWeekdayLabel","getWeekday","newDate","ariaLabel","getDayAriaLabel","today","contextUserData","dayObject","$implicit","data","currentMonth","currentYear","selected","tabindex","getWeekNumber","daysPerWeek","firstMonthDate","dayOfWeek","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","useFactory","period","checkMonth","expectedMonth","setMonth","setDate","getDay","thursdayIndex","time","round","isValid","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","getMonthLabel","getMonthFullName","getYearNumerals","getDayNumerals","getWeekNumerals","weekNumber","getWeekLabel","deps","_locale","_monthsShort","Standalone","Abbreviated","_monthsFull","Wide","weekday","width","weekdaysStartingOnSunday","Short","getMonthShortName","NgbDatepickerService","model$","_model$","model","dateSelect$","_dateSelect$","patch","keys","key","_VALIDATORS","reduce","obj","part","_nextState","_calendar","_i18n","_state","focusVisible","toValidDate","navigation","focusDate","prevDisabled","nextDisabled","selectedDate","selectBoxes","years","focusedDate","focusSelect","emitEvent","defaultValue","ngbDate","struct","newState","_updateState","_patchContexts","startDate","forceRebuild","yearChanged","monthChanged","NavigationEvent","NgbDatepickerDayView","isMuted","NgbDatepickerNavigationSelect","_month","_year","changeMonth","changeYear","ngAfterViewChecked","setProperty","monthSelect","yearSelect","read","NgbDatepickerNavigation","navigate","onClickPrev","event","currentTarget","PREV","onClickNext","NEXT","showSelect","Key","NgbDatepickerKeyboardService","processKey","datepicker","which","PageUp","shiftKey","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Enter","Space","stopPropagation","NgbDatepickerConfig","showWeekNumbers","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","fromModel","toModel","NgbDatepickerContent","NgbDatepickerMonth","viewModel","_service","_keyboardService","onKeyDown","doSelect","onDateSelect","NgbDatepicker","cd","_elementRef","_ngbDateAdapter","injector","_controlValue","_destroyed$","_publicState","dateSelect","onChange","onTouched","input","oldDate","navigationPrevented","newSelectedDate","newFocusedDate","oldFocusedDate","elementToFocus","navigateTo","focusIns$","_contentEl","focusOuts$","relatedTarget","inputs","name","dayTemplate","_defaultDayTemplate","onNavigateDateSelect","onNavigateEvent","registerOnChange","fn","registerOnTouched","setDisabledState","writeValue","provide","useExisting","multi","providers","contentTemplate","contentTemplateFromContent","footerTemplate","isContainedIn","array","some","matchesSelectorIfAny","isMobile","isIOS","test","userAgent","maxTouchPoints","isAndroid","wrapAsyncForMobile","setTimeout","ngbAutoClose","closed$","insideElements","ignoreElements","insideSelector","shouldCloseOnClick","button","escapes$","Escape","mouseDowns$","closeableClicks$","shouldClose","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","el","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","Tab","tabEvent","focusedElement","last","arr","lastFocusedElement","NgbRTL","documentElement","isRTL","getAttribute","toLowerCase","placementSeparator","spacesRegExp","bootstrapPopperMatches","top","bottom","left","right","getPopperClassPlacement","placement","leftClass","rightClass","popperStartPrimaryPlacement","popperEndPrimaryPlacement","popperStartSecondaryPlacement","popperEndSecondaryPlacement","getBootstrapBaseClassPlacement","baseClass","primary","secondary","newPrimary","classnames","newSecondary","classname","getPopperOptions","rtl","placementVals","isArray","allowedPlacements","hasAuto","val","search","popperPlacements","_placement","mainPlacement","bsModifier","enabled","phase","bsClassRegExp","RegExp","popperElement","elements","popper","popperPlacement","trim","modifiers","fallbackPlacements","noop","arg","ngbPositioning","popperInstance","createPopper","positioningOption","updatePopperOptions","popperOptions","hostElement","targetElement","update","setOptions","NgbInputDatepickerConfig","arguments","autoClose","restoreFocus","addPopperOffset","offset$1","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","parse","dateParts","format","NgbInputDatepicker","_disabled","_cRef","instance","_parserFormatter","_elRef","_vcRef","_dateAdapter","_document","_elWithFocus","_model","_destroyCloseHandlers$","_onChange","_onTouched","_validatorChange","_positioning","registerOnValidatorChange","isDisabled","validate","c","_fromDateStruct","invalid","actual","_writeModelValue","manualDateChange","updateView","inputValueChanged","_inputValue","_applyPopupStyling","location","_applyDatepickerInputs","_subscribeForDatepickerOutputs","changeDetectorRef","container","positionTarget","HTMLElement","appendToBody","_zoneSubscription","_setCloseHandlers","hostView","onBlur","onFocus","_applyPopupClass","datepickerComponentRef","inputName","setInput","newClass","oldClass","popupEl","datepickerClass","datepickerInstance","navigateEvent","ViewContainerRef","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","isIslamicLeapYear","hYear","isGregorianLeapYear$1","gDate","getIslamicMonthStart","hMonth","ceil","getIslamicYearStart","mod$1","a","b","GREGORIAN_EPOCH$1","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hDay","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","gYearStart","yearday","tjd","leapadj","tjd2","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","HIJRI_END","ONE_DAY","MONTH_LENGTH","getDaysDiff","date1","date2","time1","UTC","time2","diff","abs","NgbCalendarIslamicUmalqura","daysDiff","j","numOfDays","dayDiff","y","m","pos","toGregorian$2","jalaliDate","jdn","jalaliToJulian","julianToGregorian","setHours","fromGregorian$2","gdate","g2d","gregorianToJulian","julianToJalali","setJalaliYear","yearValue","setJalaliMonth","setJalaliDay","mod","div","trunc","jalCal","jalaliYear","breaks","breaksLength","leapJ","jp","jump","jm","n","leapG","march","leap","gy","julianDayNumber","gm","gd","d","r","gregorianDay","jalaliDay","jalaliMonth","numberOfDays","jYear","jMonth","jDay","NgbCalendarPersian","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","GREGORIAN_EPOCH","isGregorianLeapYear","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","leapYear","daysInMonth","getDayNumberInHebrewYear","numberOfDay","setHebrewMonth","setHebrewDay","fromGregorian$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","geresh","gershaim","mem","result","step","unshift","NgbCalendarHebrew","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbCalendarBuddhist","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","setUTCFullYear","NGB_DATEPICKER_DIRECTIVES","NgbDatepickerModule","NgbDropdownConfig","NgbNavbar","NgbDropdownItem","elementRef","NgbDropdownMenu","dropdown","NgbDropdown","menuItems","NgbDropdownAnchor","NgbDropdownToggle","_bodyContainer","_open","openChange","display","_applyPlacementClasses","_applyContainer","_anchor","_menu","dropdownClass","_applyCustomDropdownClass","_positionMenu","_resetContainer","itemElements","_getMenuElements","position","itemElement","isEventFromToggle","_isEventFromToggle","setAttribute","removeAttribute","focusableElements","_isDropup","menu","_getFirstPlacement","renderer","dropdownElement","dropdownMenuElement","removeChild","bodyContainer","createElement","setStyle","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","ContentRef","nodes","viewRef","componentRef","PopupService","_componentType","_injector","_viewContainerRef","_applicationRef","_windowRef","_contentRef","content","templateContext","_getContentRef","projectableNodes","windowRef","createText","NgbModalBackdrop","_el","backdropClass","NgbActiveModal","dismiss","reason","WINDOW_ATTRIBUTES","BACKDROP_ATTRIBUTES","NgbModalRef","_applyWindowOptions","windowInstance","optionName","_applyBackdropOptions","backdropInstance","_windowCmptRef","_backdropCmptRef","componentInstance","_closed","_hidden","dismissed","_dismissed","_beforeDismiss","dismissEvent","Promise","resolve","reject","_resolve","_reject","_removeModalElements","_dismiss","windowTransition$","backdropTransition$","parentNode","ModalDismissReasons","NgbModalWindow","_closed$","backdrop","fullscreenClass","fullscreen","_show","_disableEventHandling","dialogTransition$","_dialogEl","transitions$","_restoreFocus","_enableEventHandling","_setFocus","requestAnimationFrame","ESC","_bumpBackdrop","preventClose","BACKDROP_CLICK","autoFocusable","firstFocusable","elWithFocus","ariaLabelledBy","ariaDescribedBy","centered","scrollable","size","windowClass","modalDialogClass","ScrollBar","scrollbarWidth","innerWidth","clientWidth","bodyStyle","overflow","paddingRight","actualPadding","NgbModalStack","_environmentInjector","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","_scrollBarRestoreFn","_modalRefs","_windowCmpts","_activeInstances","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","_restoreScrollBar","scrollBarRestoreFn","_hideScrollBar","contentInjector","containerEl","createRenderer","activeModal","environmentInjector","contentRef","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","activeInstances","dismissAll","hasOpenModals","elementInjector","_createFromTemplateRef","_createFromString","_createFromComponent","component","createTextNode","componentType","create","useValue","parent","componentNativeEl","parentElement","children","sibling","nodeName","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","RendererFactory2","NgbModalConfig","NgbModal","_modalStack","_config","combinedOptions","NgbModalModule","NgbNavConfig","orientation","roles","isValidNavId","navCounter","NgbNavContent","NgbNavItemRole","nav","NgbNav","NgbNavItem","_nav","domId","active","panelDomId","isPanelInDom","activeIdChange","destroy$","navItemChange$","navChange","click","_updateActiveId","enabledLinks","links","link","navItem","elRef","nextId","items","_notifyItemChanged","emitNavChange","nextItemId","_getItemById","NgbNavLinkBase","hasNavItemClass","nodeType","Node","COMMENT_NODE","NgbNavLinkButton","NgbNavLink","href","ngbNavFadeOutTransition","ngbNavFadeInTransition","NgbNavPane","NgbNavOutlet","_activePane","isPanelTransitioning","_updateActivePane","nextItem","activeItem","_getPaneForItem","_getActivePane","_panes","pane","paneRole","NGB_NAV_DIRECTIVES","NgbNavModule","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","pageSize","rotate","NgbPaginationEllipsis","NgbPaginationFirst","NgbPaginationLast","NgbPaginationNext","NgbPaginationNumber","NgbPaginationPrevious","NgbPaginationPages","NgbPagination","pageCount","pages","page","pageChange","hasPrevious","hasNext","previousDisabled","selectPage","pageNumber","_updatePages","isEllipsis","_applyEllipses","_applyRotation","leftOffset","rightOffset","_applyPagination","_setPageInRange","newPageNo","prevPageNo","collectionSize","newPage","tplEllipsis","tplFirst","tplLast","tplNext","tplNumber","tplPrevious","tplPages","required","NGB_PAGINATION_DIRECTIVES","NgbPaginationModule","Trigger","isManual","DEFAULT_ALIASES","hover","parseTriggers","triggers","aliases","trimmedTriggers","parsedTriggers","trigger","triggerPair","alias","manualTriggers","observeTriggers","isOpenedFn","subscriber","listeners","openFn","closeFn","toggleFn","listen","unsubscribeFn","delayOrNoop","triggerDelay","openDelay","closeDelay","input$","pending","filteredInput$","currentlyOpen","delayedOpen$","delayedClose$","listenToTriggers","subscription","NgbPopoverConfig","disablePopover","nextId$1","NgbPopoverWindow","isTitleTemplate","popoverClass","NgbPopover","_isDisabled","ngbPopover","popoverTitle","viewContainerRef","applicationRef","_ngbPopoverWindowId","_popupService","popoverContext","_getPositionTargetElement","_unregisterListenersFn","bind","NgbPopoverModule","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbar","_max","textType","height","getValue","getPercentValue","NgbProgressbarModule","NgbRatingConfig","readonly","resettable","NgbRating","ariaValueText","_changeDetectorRef","contexts","leave","rateChange","isInteractive","enter","handleBlur","handleClick","rate","handleKeyDown","_updateMax","_setupContexts","reset","nextRate","internalChange","newRate","nextValue","fill","k","starTemplate","starTemplateFromContent","NgbRatingModule","toFragmentElement","CSS","escape","getOrderedFragments","fragments","defaultProcessChanges","changeActive","ctx","rootElement","scrollSpy","entries","orderedFragments","initialized","gapFragment","visibleFragments","Set","preSelectedFragment","initialFragment","scrollTo","entry","isIntersecting","fragment","boundingClientRect","rootBounds","fragmentIndex","has","NgbScrollSpyConfig","scrollBehavior","processChanges","MATCH_THRESHOLD","NgbScrollSpyService","_observer","_containerElement","_fragments","_preRegisteredFragments","_active$","_distinctActive$","_active","_scrollBehavior","_diChangeDetectorRef","optional","active$","_cleanup","rootMargin","threshold","processChangesFn","IntersectionObserver","observe","stop","behavior","fragmentElement","heightPx","offsetTop","lastOffset","scrollTop","matchCounter","containerElement","updateActiveWhenScrollingIsFinished","sameOffsetAsLastTime","unobserve","disconnect","NgbScrollSpyItem","_scrollSpyMenu","NgbScrollSpyMenu","_scrollSpyAPI","_destroyRef","_isActive","NgbScrollSpy","_activate","_deactivate","getItem","isActive","_scrollSpyRef","_map","_lastActiveItem","_rebuildMap","_initialFragment","_nativeElement","activeChange","_registerFragment","_unregisterFragment","NgbScrollSpyFragment","_scrollSpy","NgbScrollSpyModule","NgbTime","hour","minute","second","changeHour","updateHour","NaN","changeMinute","updateMinute","changeSecond","updateSecond","checkSecs","NgbTimepickerConfig","meridian","spinners","seconds","hourStep","minuteStep","secondStep","readonlyInputs","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NGB_TIMEPICKER_I18N_FACTORY","NgbTimepickerI18nDefault","NgbTimepickerI18n","_periods","Narrow","getMorningPeriod","getAfternoonPeriod","FILTER_REGEX","NgbTimepicker","_hourStep","_minuteStep","_secondStep","_ngbTimeAdapter","structValue","propagateModelChange","newVal","isPM","enteredHour","toggleMeridian","formatInput","formatHour","formatMinSec","isSmallSize","isLargeSize","touched","NgbTimepickerModule","ngbToastFadeInTransition","ngbToastFadeOutTransition","NgbToastConfig","autohide","ariaLive","NgbToastHeader","NgbToast","contentHeaderTpl","_init","_clearTimeout","_timeoutID","clearTimeout","header","NgbToastModule","NgbTooltipConfig","disableTooltip","NgbTooltipWindow","tooltipClass","NgbTooltip","_ngbTooltipWindowId","ngbTooltip","_ngbTooltip","tooltipContext","NgbTooltipModule","NgbHighlight","highlightClass","accentSensitive","String","prototype","console","warn","terms","term","prepareTerm","escapedTerms","toSplit","parts","substring","NgbTypeaheadWindow","activeIdx","focusFirst","formatter","selectEvent","activeChangeEvent","hasActive","results","getActive","markActive","_activeChanged","resetActive","resultTemplate","popupClass","NgbTypeaheadConfig","editable","selectOnExact","showHint","ARIA_LIVE_DELAY","factory","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","say","message","textContent","setText","nextWindowId","NgbTypeahead","ngZone","_live","_subscription","_inputValueBackup","_inputValueForSelectOnExact","autocomplete","selectItem","activeDescendant","popupId","_valueChanges","$event","_resubscribeTypeahead","_subscribeToUserInput","ngbTypeahead","_unsubscribeFromUserInput","_closePopup","_writeInputValue","_formatItemForInput","dismissPopup","isPopupOpen","_showHint","_selectResult","_openPopup","_selectResultClosePopup","userInputLowerCase","formattedVal","apply","inputFormatter","results$","resultFormatter","count","autocapitalize","autocorrect","NgbTypeaheadModule","NgbActiveOffcanvas","NgbOffcanvasRef","_panelCmptRef","_removeOffcanvasElements","panelTransition$","OffcanvasDismissReasons","NgbOffcanvasBackdrop","NgbOffcanvasPanel","offcanvasTransition$","panelClass","NgbOffcanvasStack","_activePanelCmptHasChanged","_backdropAttributes","_panelAttributes","_activeInstance","_panelCmpt","scroll","activeOffcanvas","panelCmptRef","ngbOffcanvasRef","_registerOffcanvasRef","_registerPanelCmpt","_applyPanelOptions","activeInstance","_offcanvasRef","hasOpenOffcanvas","unregisterOffcanvasRef","ngbPanelCmpt","NgbOffcanvasConfig","NgbOffcanvas","_offcanvasStack","NgbOffcanvasModule","NGB_MODULES","NgbModule"],"sources":["D:/Angular Dev/HR_EMS/EMS/ClientApp/node_modules/@ng-bootstrap/ng-bootstrap/fesm2022/ng-bootstrap.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Directive, EventEmitter, Input, Output, ContentChildren, forwardRef, Inject, Optional, Host, Component, ViewEncapsulation, inject, ApplicationRef, ElementRef, TemplateRef, ContentChild, NgModule, ChangeDetectionStrategy, PLATFORM_ID, LOCALE_ID, ViewChild, Injector, EnvironmentInjector, createComponent, Attribute, ViewChildren, HostBinding, ChangeDetectorRef, NgZone, DestroyRef, InjectionToken } from '@angular/core';\nimport { Observable, EMPTY, of, Subject, fromEvent, timer, race, BehaviorSubject, combineLatest, NEVER, zip, merge } from 'rxjs';\nimport { endWith, takeUntil, filter, take, map, startWith, distinctUntilChanged, switchMap, tap, withLatestFrom, delay, mergeMap, skip, share, finalize } from 'rxjs/operators';\nimport { NgFor, NgTemplateOutlet, NgIf, isPlatformBrowser, getLocaleMonthNames, FormStyle, TranslationWidth, getLocaleDayNames, formatDate, DOCUMENT, PercentPipe, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { flip, preventOverflow, arrow, createPopperLite, offset } from '@popperjs/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\nfunction toString(value) {\n    return value !== undefined && value !== null ? `${value}` : '';\n}\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isPromise(v) {\n    return v && v.then;\n}\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\nfunction hasClassName(element, className) {\n    return (element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0);\n}\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    /*\n     * In certain browsers (e.g. Edge 44.18362.449.0) HTMLDocument does\n     * not support `Element.prototype.closest`. To emulate the correct behaviour\n     * we return null when the method is missing.\n     *\n     * Note that in evergreen browsers `closest(document.documentElement, 'html')`\n     * will return the document element whilst in Edge null will be returned. This\n     * compromise was deemed good enough.\n     */\n    if (typeof element.closest === 'undefined') {\n        return null;\n    }\n    return element.closest(selector);\n}\n/**\n * Force a browser reflow\n * @param element element where to apply the reflow\n */\nfunction reflow(element) {\n    return (element || document.body).getBoundingClientRect();\n}\n/**\n * Creates an observable where all callbacks are executed inside a given zone\n *\n * @param zone\n */\nfunction runInZone(zone) {\n    return (source) => {\n        return new Observable((observer) => {\n            const next = (value) => zone.run(() => observer.next(value));\n            const error = (e) => zone.run(() => observer.error(e));\n            const complete = () => zone.run(() => observer.complete());\n            return source.subscribe({ next, error, complete });\n        });\n    };\n}\nfunction removeAccents(str) {\n    return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n/**\n * Returns the active element in the given root.\n * If the active element is inside a shadow root, it is searched recursively.\n */\nfunction getActiveElement(root = document) {\n    const activeEl = root?.activeElement;\n    if (!activeEl) {\n        return null;\n    }\n    return activeEl.shadowRoot ? getActiveElement(activeEl.shadowRoot) : activeEl;\n}\n\nfunction getTransitionDurationMs(element) {\n    const { transitionDelay, transitionDuration } = window.getComputedStyle(element);\n    const transitionDelaySec = parseFloat(transitionDelay);\n    const transitionDurationSec = parseFloat(transitionDuration);\n    return (transitionDelaySec + transitionDurationSec) * 1000;\n}\n\nconst environment = {\n    animation: true,\n    transitionTimerDelayMs: 5,\n};\n\nconst noopFn = () => { };\nconst { transitionTimerDelayMs } = environment;\nconst runningTransitions = new Map();\nconst ngbRunTransition = (zone, element, startFn, options) => {\n    // Getting initial context from options\n    let context = options.context || {};\n    // Checking if there are already running transitions on the given element.\n    const running = runningTransitions.get(element);\n    if (running) {\n        switch (options.runningTransition) {\n            // If there is one running and we want for it to 'continue' to run, we have to cancel the new one.\n            // We're not emitting any values, but simply completing the observable (EMPTY).\n            case 'continue':\n                return EMPTY;\n            // If there is one running and we want for it to 'stop', we have to complete the running one.\n            // We're simply completing the running one and not emitting any values and merging newly provided context\n            // with the one coming from currently running transition.\n            case 'stop':\n                zone.run(() => running.transition$.complete());\n                context = Object.assign(running.context, context);\n                runningTransitions.delete(element);\n        }\n    }\n    // Running the start function\n    const endFn = startFn(element, options.animation, context) || noopFn;\n    // If 'prefer-reduced-motion' is enabled, the 'transition' will be set to 'none'.\n    // If animations are disabled, we have to emit a value and complete the observable\n    // In this case we have to call the end function, but can finish immediately by emitting a value,\n    // completing the observable and executing end functions synchronously.\n    if (!options.animation || window.getComputedStyle(element).transitionProperty === 'none') {\n        zone.run(() => endFn());\n        return of(undefined).pipe(runInZone(zone));\n    }\n    // Starting a new transition\n    const transition$ = new Subject();\n    const finishTransition$ = new Subject();\n    const stop$ = transition$.pipe(endWith(true));\n    runningTransitions.set(element, {\n        transition$,\n        complete: () => {\n            finishTransition$.next();\n            finishTransition$.complete();\n        },\n        context,\n    });\n    const transitionDurationMs = getTransitionDurationMs(element);\n    // 1. We have to both listen for the 'transitionend' event and have a 'just-in-case' timer,\n    // because 'transitionend' event might not be fired in some browsers, if the transitioning\n    // element becomes invisible (ex. when scrolling, making browser tab inactive, etc.). The timer\n    // guarantees, that we'll release the DOM element and complete 'ngbRunTransition'.\n    // 2. We need to filter transition end events, because they might bubble from shorter transitions\n    // on inner DOM elements. We're only interested in the transition on the 'element' itself.\n    zone.runOutsideAngular(() => {\n        const transitionEnd$ = fromEvent(element, 'transitionend').pipe(takeUntil(stop$), filter(({ target }) => target === element));\n        const timer$ = timer(transitionDurationMs + transitionTimerDelayMs).pipe(takeUntil(stop$));\n        race(timer$, transitionEnd$, finishTransition$)\n            .pipe(takeUntil(stop$))\n            .subscribe(() => {\n            runningTransitions.delete(element);\n            zone.run(() => {\n                endFn();\n                transition$.next();\n                transition$.complete();\n            });\n        });\n    });\n    return transition$.asObservable();\n};\nconst ngbCompleteTransition = (element) => {\n    runningTransitions.get(element)?.complete();\n};\n\nfunction measureCollapsingElementDimensionPx(element, dimension) {\n    // SSR fix for without injecting the PlatformId\n    if (typeof navigator === 'undefined') {\n        return '0px';\n    }\n    const { classList } = element;\n    const hasShownClass = classList.contains('show');\n    if (!hasShownClass) {\n        classList.add('show');\n    }\n    element.style[dimension] = '';\n    const dimensionSize = element.getBoundingClientRect()[dimension] + 'px';\n    if (!hasShownClass) {\n        classList.remove('show');\n    }\n    return dimensionSize;\n}\nconst ngbCollapsingTransition = (element, animation, context) => {\n    let { direction, maxSize, dimension } = context;\n    const { classList } = element;\n    function setInitialClasses() {\n        classList.add('collapse');\n        if (direction === 'show') {\n            classList.add('show');\n        }\n        else {\n            classList.remove('show');\n        }\n    }\n    // without animations we just need to set initial classes\n    if (!animation) {\n        setInitialClasses();\n        return;\n    }\n    // No maxHeight -> running the transition for the first time\n    if (!maxSize) {\n        maxSize = measureCollapsingElementDimensionPx(element, dimension);\n        context.maxSize = maxSize;\n        // Fix the height before starting the animation\n        element.style[dimension] = direction !== 'show' ? maxSize : '0px';\n        classList.remove('collapse');\n        classList.remove('collapsing');\n        classList.remove('show');\n        reflow(element);\n        // Start the animation\n        classList.add('collapsing');\n    }\n    // Start or revert the animation\n    element.style[dimension] = direction === 'show' ? maxSize : '0px';\n    return () => {\n        setInitialClasses();\n        classList.remove('collapsing');\n        element.style[dimension] = '';\n    };\n};\n\n/**\n * Global ng-bootstrap config\n *\n * @since 8.0.0\n */\nclass NgbConfig {\n    constructor() {\n        this.animation = environment.animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbAccordionDirective`](#/components/accordion/api#NgbAccordionDirective).\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.closeOthers = false;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/* eslint-disable deprecation/deprecation */\nlet nextId$4 = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n * @deprecated 14.1.0\n */\nclass NgbPanelHeader {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelHeader, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPanelHeader, isStandalone: true, selector: \"ng-template[ngbPanelHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelHeader]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n *\n * @deprecated 14.1.0\n */\nclass NgbPanelTitle {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelTitle, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPanelTitle, isStandalone: true, selector: \"ng-template[ngbPanelTitle]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelTitle, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelTitle]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps the accordion panel content.\n *\n * @deprecated 14.1.0\n */\nclass NgbPanelContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPanelContent, isStandalone: true, selector: \"ng-template[ngbPanelContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPanelContent]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n *\n * @deprecated 14.1.0\n */\nclass NgbPanel {\n    constructor() {\n        /**\n         *  If `true`, the panel is disabled an can't be toggled.\n         */\n        this.disabled = false;\n        /**\n         *  An optional id for the panel that must be unique on the page.\n         *\n         *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n         */\n        this.id = `ngb-panel-${nextId$4++}`;\n        this.isOpen = false;\n        /* A flag to specified that the transition panel classes have been initialized */\n        this.initClassDone = false;\n        /* A flag to specified if the panel is currently being animated, to ensure its presence in the dom */\n        this.transitionRunning = false;\n        /**\n         * An event emitted when the panel is shown, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the panel is hidden, after the transition. It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.headerTpl = this.headerTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPanel, isStandalone: true, selector: \"ngb-panel\", inputs: { disabled: \"disabled\", id: \"id\", title: \"title\", type: \"type\", cardClass: \"cardClass\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, queries: [{ propertyName: \"titleTpls\", predicate: NgbPanelTitle }, { propertyName: \"headerTpls\", predicate: NgbPanelHeader }, { propertyName: \"contentTpls\", predicate: NgbPanelContent }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanel, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ngb-panel', standalone: true }]\n        }], propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], cardClass: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], titleTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelTitle, { descendants: false }]\n            }], headerTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelHeader, { descendants: false }]\n            }], contentTpls: [{\n                type: ContentChildren,\n                args: [NgbPanelContent, { descendants: false }]\n            }] } });\nclass NgbRefDirective {\n    constructor(_El) {\n        this._El = _El;\n        this.ngbRef = new EventEmitter();\n    }\n    ngOnInit() {\n        this.ngbRef.emit(this._El.nativeElement);\n    }\n    ngOnDestroy() {\n        this.ngbRef.emit(null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRefDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbRefDirective, isStandalone: true, selector: \"[ngbRef]\", outputs: { ngbRef: \"ngbRef\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRefDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbRef]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { ngbRef: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n * @deprecated 14.1.0\n */\nclass NgbPanelToggle {\n    set ngbPanelToggle(panel) {\n        if (panel) {\n            this.panel = panel;\n        }\n    }\n    constructor(accordion, panel) {\n        this.accordion = accordion;\n        this.panel = panel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelToggle, deps: [{ token: forwardRef(() => NgbAccordion) }, { token: NgbPanel, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPanelToggle, isStandalone: true, selector: \"button[ngbPanelToggle]\", inputs: { ngbPanelToggle: \"ngbPanelToggle\" }, host: { attributes: { \"type\": \"button\" }, listeners: { \"click\": \"accordion.toggle(panel.id)\" }, properties: { \"disabled\": \"panel.disabled\", \"class.collapsed\": \"!panel.isOpen\", \"attr.aria-expanded\": \"panel.isOpen\", \"attr.aria-controls\": \"panel.id\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPanelToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbPanelToggle]',\n                    standalone: true,\n                    host: {\n                        type: 'button',\n                        '[disabled]': 'panel.disabled',\n                        '[class.collapsed]': '!panel.isOpen',\n                        '[attr.aria-expanded]': 'panel.isOpen',\n                        '[attr.aria-controls]': 'panel.id',\n                        '(click)': 'accordion.toggle(panel.id)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordion, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordion)]\n                }] }, { type: NgbPanel, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { ngbPanelToggle: [{\n                type: Input\n            }] } });\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n *\n * @deprecated 14.1.0\n */\nclass NgbAccordion {\n    constructor(config, _ngZone, _changeDetector) {\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        /**\n         * An array or comma separated strings of panel ids that should be opened **initially**.\n         *\n         * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n         * the `(panelChange)` event.\n         */\n        this.activeIds = [];\n        /**\n         * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted right before the panel toggle happens.\n         *\n         * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n         */\n        this.panelChange = new EventEmitter();\n        /**\n         * An event emitted when the expanding animation is finished on the panel. The payload is the panel id.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapsing animation is finished on the panel, and before the panel element is removed.\n         * The payload is the panel id.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.animation = config.animation;\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Checks if a panel with a given id is expanded.\n     */\n    isExpanded(panelId) {\n        return this.activeIds.indexOf(panelId) > -1;\n    }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     */\n    expand(panelId) {\n        this._changeOpenState(this._findPanelById(panelId), true);\n    }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     */\n    expandAll() {\n        if (this.closeOtherPanels) {\n            if (this.activeIds.length === 0 && this.panels.length) {\n                this._changeOpenState(this.panels.first, true);\n            }\n        }\n        else {\n            this.panels.forEach((panel) => this._changeOpenState(panel, true));\n        }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     */\n    collapse(panelId) {\n        this._changeOpenState(this._findPanelById(panelId), false);\n    }\n    /**\n     * Collapses all opened panels.\n     */\n    collapseAll() {\n        this.panels.forEach((panel) => {\n            this._changeOpenState(panel, false);\n        });\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     */\n    toggle(panelId) {\n        const panel = this._findPanelById(panelId);\n        if (panel) {\n            this._changeOpenState(panel, !panel.isOpen);\n        }\n    }\n    ngAfterContentChecked() {\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach((panel) => {\n            panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1;\n        });\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0], false);\n            this._updateActiveIds();\n        }\n        // Setup the initial classes here\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this.panels.forEach((panel) => {\n                const panelElement = panel.panelDiv;\n                if (panelElement) {\n                    if (!panel.initClassDone) {\n                        panel.initClassDone = true;\n                        ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n                            animation: false,\n                            runningTransition: 'continue',\n                            context: { direction: panel.isOpen ? 'show' : 'hide', dimension: 'height' },\n                        });\n                    }\n                }\n                else {\n                    // Classes must be initialized next time it will be in the dom\n                    panel.initClassDone = false;\n                }\n            });\n        });\n    }\n    _changeOpenState(panel, nextState) {\n        if (panel != null && !panel.disabled && panel.isOpen !== nextState) {\n            let defaultPrevented = false;\n            this.panelChange.emit({\n                panelId: panel.id,\n                nextState: nextState,\n                preventDefault: () => {\n                    defaultPrevented = true;\n                },\n            });\n            if (!defaultPrevented) {\n                panel.isOpen = nextState;\n                panel.transitionRunning = true;\n                if (nextState && this.closeOtherPanels) {\n                    this._closeOthers(panel.id);\n                }\n                this._updateActiveIds();\n                this._runTransitions(this.animation);\n            }\n        }\n    }\n    _closeOthers(panelId, enableTransition = true) {\n        this.panels.forEach((panel) => {\n            if (panel.id !== panelId && panel.isOpen) {\n                panel.isOpen = false;\n                panel.transitionRunning = enableTransition;\n            }\n        });\n    }\n    _findPanelById(panelId) {\n        return this.panels.find((p) => p.id === panelId) || null;\n    }\n    _updateActiveIds() {\n        this.activeIds = this.panels.filter((panel) => panel.isOpen && !panel.disabled).map((panel) => panel.id);\n    }\n    _runTransitions(animation) {\n        // detectChanges is performed to ensure that all panels are in the dom (via transitionRunning = true)\n        // before starting the animation\n        this._changeDetector.detectChanges();\n        this.panels.forEach((panel) => {\n            // When panel.transitionRunning is true, the transition needs to be started OR reversed,\n            // The direction (show or hide) is choosen by each panel.isOpen state\n            if (panel.transitionRunning) {\n                const panelElement = panel.panelDiv;\n                ngbRunTransition(this._ngZone, panelElement, ngbCollapsingTransition, {\n                    animation,\n                    runningTransition: 'stop',\n                    context: { direction: panel.isOpen ? 'show' : 'hide', dimension: 'height' },\n                }).subscribe(() => {\n                    panel.transitionRunning = false;\n                    const { id } = panel;\n                    if (panel.isOpen) {\n                        panel.shown.emit();\n                        this.shown.emit(id);\n                    }\n                    else {\n                        panel.hidden.emit();\n                        this.hidden.emit(id);\n                    }\n                });\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordion, deps: [{ token: NgbAccordionConfig }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordion, isStandalone: true, selector: \"ngb-accordion\", inputs: { animation: \"animation\", activeIds: \"activeIds\", closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"], destroyOnHide: \"destroyOnHide\", type: \"type\" }, outputs: { panelChange: \"panelChange\", shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"attr.aria-multiselectable\": \"!closeOtherPanels\" }, classAttribute: \"accordion\" }, queries: [{ propertyName: \"panels\", predicate: NgbPanel }], exportAs: [\"ngbAccordion\"], ngImport: i0, template: `\n\t\t<ng-template #t ngbPanelHeader let-panel>\n\t\t\t<button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n\t\t\t\t{{ panel.title }}\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t\t<ng-template ngFor let-panel [ngForOf]=\"panels\">\n\t\t\t<div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n\t\t\t\t<div\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\tid=\"{{ panel.id }}-header\"\n\t\t\t\t\t[class]=\"'accordion-header ' + (panel.type ? 'bg-' + panel.type : type ? 'bg-' + type : '')\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: panel, opened: panel.isOpen }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"{{ panel.id }}\"\n\t\t\t\t\t(ngbRef)=\"panel.panelDiv = $event\"\n\t\t\t\t\trole=\"tabpanel\"\n\t\t\t\t\t[attr.aria-labelledby]=\"panel.id + '-header'\"\n\t\t\t\t\t*ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"accordion-body\">\n\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NgbPanelToggle, selector: \"button[ngbPanelToggle]\", inputs: [\"ngbPanelToggle\"] }, { kind: \"directive\", type: NgbRefDirective, selector: \"[ngbRef]\", outputs: [\"ngbRef\"] }, { kind: \"directive\", type: NgbPanelHeader, selector: \"ng-template[ngbPanelHeader]\" }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordion, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-accordion',\n                    exportAs: 'ngbAccordion',\n                    standalone: true,\n                    imports: [NgFor, NgTemplateOutlet, NgbPanelToggle, NgbRefDirective, NgbPanelHeader, NgIf],\n                    encapsulation: ViewEncapsulation.None,\n                    host: { class: 'accordion', role: 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                    template: `\n\t\t<ng-template #t ngbPanelHeader let-panel>\n\t\t\t<button class=\"accordion-button\" [ngbPanelToggle]=\"panel\">\n\t\t\t\t{{ panel.title }}\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t\t<ng-template ngFor let-panel [ngForOf]=\"panels\">\n\t\t\t<div [class]=\"'accordion-item ' + (panel.cardClass || '')\">\n\t\t\t\t<div\n\t\t\t\t\trole=\"tab\"\n\t\t\t\t\tid=\"{{ panel.id }}-header\"\n\t\t\t\t\t[class]=\"'accordion-header ' + (panel.type ? 'bg-' + panel.type : type ? 'bg-' + type : '')\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: panel, opened: panel.isOpen }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tid=\"{{ panel.id }}\"\n\t\t\t\t\t(ngbRef)=\"panel.panelDiv = $event\"\n\t\t\t\t\trole=\"tabpanel\"\n\t\t\t\t\t[attr.aria-labelledby]=\"panel.id + '-header'\"\n\t\t\t\t\t*ngIf=\"!destroyOnHide || panel.isOpen || panel.transitionRunning\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"accordion-body\">\n\t\t\t\t\t\t<ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef || null\"></ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionConfig }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { panels: [{\n                type: ContentChildren,\n                args: [NgbPanel]\n            }], animation: [{\n                type: Input\n            }], activeIds: [{\n                type: Input\n            }], closeOtherPanels: [{\n                type: Input,\n                args: ['closeOthers']\n            }], destroyOnHide: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], panelChange: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\n/**\n * A configuration service for the [NgbCollapse](#/components/collapse/api#NgbCollapse) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all collapses used in the application.\n */\nclass NgbCollapseConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.horizontal = false;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the\n * page.\n */\nclass NgbCollapse {\n    /**\n     * If `true`, will collapse the element or show it otherwise.\n     */\n    set collapsed(isCollapsed) {\n        if (this._isCollapsed !== isCollapsed) {\n            this._isCollapsed = isCollapsed;\n            if (this._afterInit) {\n                this._runTransitionWithEvents(isCollapsed, this.animation);\n            }\n        }\n    }\n    constructor(_element, config, _zone) {\n        this._element = _element;\n        this._zone = _zone;\n        /**\n         * Flag used to track if the collapse setter is invoked during initialization\n         * or not. This distinction is made in order to avoid running the transition during initialization.\n         */\n        this._afterInit = false;\n        this._isCollapsed = false;\n        this.ngbCollapseChange = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is shown, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the collapse element is hidden, after the transition.\n         * It has no payload.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.animation = config.animation;\n        this.horizontal = config.horizontal;\n    }\n    ngOnInit() {\n        this._runTransition(this._isCollapsed, false);\n        this._afterInit = true;\n    }\n    /**\n     * Triggers collapsing programmatically.\n     *\n     * If there is a collapsing transition running already, it will be reversed.\n     * If the animations are turned off this happens synchronously.\n     *\n     * @since 8.0.0\n     */\n    toggle(open = this._isCollapsed) {\n        this.collapsed = !open;\n        this.ngbCollapseChange.next(this._isCollapsed);\n    }\n    _runTransition(collapsed, animation) {\n        return ngbRunTransition(this._zone, this._element.nativeElement, ngbCollapsingTransition, {\n            animation,\n            runningTransition: 'stop',\n            context: { direction: collapsed ? 'hide' : 'show', dimension: this.horizontal ? 'width' : 'height' },\n        });\n    }\n    _runTransitionWithEvents(collapsed, animation) {\n        this._runTransition(collapsed, animation).subscribe(() => {\n            if (collapsed) {\n                this.hidden.emit();\n            }\n            else {\n                this.shown.emit();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapse, deps: [{ token: i0.ElementRef }, { token: NgbCollapseConfig }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbCollapse, isStandalone: true, selector: \"[ngbCollapse]\", inputs: { animation: \"animation\", collapsed: [\"ngbCollapse\", \"collapsed\"], horizontal: \"horizontal\" }, outputs: { ngbCollapseChange: \"ngbCollapseChange\", shown: \"shown\", hidden: \"hidden\" }, host: { properties: { \"class.collapse-horizontal\": \"horizontal\" } }, exportAs: [\"ngbCollapse\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbCollapse]',\n                    exportAs: 'ngbCollapse',\n                    standalone: true,\n                    host: { '[class.collapse-horizontal]': 'horizontal' },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgbCollapseConfig }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], collapsed: [{\n                type: Input,\n                args: ['ngbCollapse']\n            }], ngbCollapseChange: [{\n                type: Output\n            }], horizontal: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nlet nextId$3 = 0;\n/**\n * A directive that wraps the content of an accordion item's collapsible body.\n *\n * The actual content is provided in a child `ng-template` element.\n * Depending on the state of the accordion, the template will be either inserted or removed from the DOM.\n *\n * @since 14.1.0\n */\nclass NgbAccordionBody {\n    constructor() {\n        this._appRef = inject(ApplicationRef);\n        this._element = inject((ElementRef)).nativeElement;\n        this._item = inject(NgbAccordionItem);\n        this._viewRef = null;\n    }\n    ngAfterContentChecked() {\n        if (this._bodyTpl) {\n            if (this._item.animatingBodyCollapse || !this._item.destroyOnHide) {\n                this._createViewIfNotExists();\n            }\n            else {\n                this._destroyViewIfExists();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyViewIfExists();\n    }\n    _destroyViewIfExists() {\n        if (this._viewRef) {\n            this._appRef.detachView(this._viewRef);\n            this._viewRef.destroy();\n            this._viewRef = null;\n        }\n    }\n    _createViewIfNotExists() {\n        if (!this._viewRef) {\n            this._viewRef = this._bodyTpl.createEmbeddedView(null);\n            this._viewRef.detectChanges();\n            this._appRef.attachView(this._viewRef);\n            for (const node of this._viewRef.rootNodes) {\n                this._element.appendChild(node);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionBody, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionBody, isStandalone: true, selector: \"[ngbAccordionBody]\", host: { properties: { \"class.accordion-body\": \"true\" } }, queries: [{ propertyName: \"_bodyTpl\", first: true, predicate: TemplateRef, descendants: true, static: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionBody, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionBody]',\n                    standalone: true,\n                    host: { '[class.accordion-body]': 'true' },\n                }]\n        }], propDecorators: { _bodyTpl: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: true }]\n            }] } });\n/**\n * A directive that wraps the collapsible item's content of the accordion.\n *\n * Internally it reuses the [`NgbCollapse` directive](#/components/collapse)\n *\n * @since 14.1.0\n */\nclass NgbAccordionCollapse {\n    constructor(item, ngbCollapse) {\n        this.item = item;\n        this.ngbCollapse = ngbCollapse;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionCollapse, deps: [{ token: forwardRef(() => NgbAccordionItem) }, { token: NgbCollapse }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionCollapse, isStandalone: true, selector: \"[ngbAccordionCollapse]\", host: { attributes: { \"role\": \"region\" }, properties: { \"class.accordion-collapse\": \"true\", \"id\": \"item.collapseId\", \"attr.aria-labelledby\": \"item.toggleId\" } }, exportAs: [\"ngbAccordionCollapse\"], hostDirectives: [{ directive: NgbCollapse }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionCollapse, decorators: [{\n            type: Directive,\n            args: [{\n                    exportAs: 'ngbAccordionCollapse',\n                    standalone: true,\n                    selector: '[ngbAccordionCollapse]',\n                    host: {\n                        role: 'region',\n                        '[class.accordion-collapse]': 'true',\n                        '[id]': 'item.collapseId',\n                        '[attr.aria-labelledby]': 'item.toggleId',\n                    },\n                    hostDirectives: [\n                        {\n                            directive: NgbCollapse,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionItem, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionItem)]\n                }] }, { type: NgbCollapse }]; } });\n/**\n * A directive to put on a toggling element inside the accordion item's header.\n * It will register click handlers that toggle the associated panel and will handle accessibility attributes.\n *\n * This directive is used internally by the [`NgbAccordionButton` directive](#/components/accordion/api#NgbAccordionButton).\n *\n * @since 14.1.0\n */\nclass NgbAccordionToggle {\n    constructor(item, accordion) {\n        this.item = item;\n        this.accordion = accordion;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionToggle, deps: [{ token: forwardRef(() => NgbAccordionItem) }, { token: forwardRef(() => NgbAccordionDirective) }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionToggle, isStandalone: true, selector: \"[ngbAccordionToggle]\", host: { listeners: { \"click\": \"!item.disabled && accordion.toggle(item.id)\" }, properties: { \"id\": \"item.toggleId\", \"class.collapsed\": \"item.collapsed\", \"attr.aria-controls\": \"item.collapseId\", \"attr.aria-expanded\": \"!item.collapsed\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionToggle]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'item.toggleId',\n                        '[class.collapsed]': 'item.collapsed',\n                        '[attr.aria-controls]': 'item.collapseId',\n                        '[attr.aria-expanded]': '!item.collapsed',\n                        '(click)': '!item.disabled && accordion.toggle(item.id)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionItem, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionItem)]\n                }] }, { type: NgbAccordionDirective, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionDirective)]\n                }] }]; } });\n/**\n * A directive to put on a button element inside an accordion item's header.\n *\n * If you want a custom markup for the header, you can also use the [`NgbAccordionToggle` directive](#/components/accordion/api#NgbAccordionToggle).\n *\n * @since 14.1.0\n */\nclass NgbAccordionButton {\n    constructor(item) {\n        this.item = item;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionButton, deps: [{ token: forwardRef(() => NgbAccordionItem) }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionButton, isStandalone: true, selector: \"button[ngbAccordionButton]\", host: { attributes: { \"type\": \"button\" }, properties: { \"disabled\": \"item.disabled\", \"class.accordion-button\": \"true\" } }, hostDirectives: [{ directive: NgbAccordionToggle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbAccordionButton]',\n                    standalone: true,\n                    host: {\n                        '[disabled]': 'item.disabled',\n                        '[class.accordion-button]': 'true',\n                        type: 'button',\n                    },\n                    hostDirectives: [\n                        {\n                            directive: NgbAccordionToggle,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionItem, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionItem)]\n                }] }]; } });\n/**\n * A directive that wraps an accordion item's header.\n *\n * @since 14.1.0\n */\nclass NgbAccordionHeader {\n    constructor(item) {\n        this.item = item;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionHeader, deps: [{ token: forwardRef(() => NgbAccordionItem) }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionHeader, isStandalone: true, selector: \"[ngbAccordionHeader]\", host: { attributes: { \"role\": \"heading\" }, properties: { \"class.accordion-header\": \"true\", \"class.collapsed\": \"item.collapsed\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionHeader]',\n                    standalone: true,\n                    host: {\n                        role: 'heading',\n                        '[class.accordion-header]': 'true',\n                        '[class.collapsed]': 'item.collapsed',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionItem, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionItem)]\n                }] }]; } });\n/**\n * A directive that wraps an accordion item: a toggleable header + body that collapses.\n *\n * You can get hold of the `NgbAccordionItem` instance in the template with `#item=\"ngbAccordionItem\"`.\n * It allows to check if the item is collapsed or not, toggle the collapse state, etc.\n *\n * Every accordion item has a string ID that is automatically generated in the `ngb-accordion-item-XX` format, unless provided explicitly.\n *\n * @since 14.1.0\n */\nclass NgbAccordionItem {\n    constructor(_accordion, _cd) {\n        this._accordion = _accordion;\n        this._cd = _cd;\n        this._subscriptions = [];\n        this._collapsed = true;\n        this._id = `ngb-accordion-item-${nextId$3++}`;\n        this.animatingBodyCollapse = false;\n        /**\n         * If `true`, the accordion item will be disabled.\n         * It won't react to user's clicks, but still will be toggelable programmatically.\n         */\n        this.disabled = false;\n        /**\n         * Event emitted before the expanding animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. It has no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. It has no payload.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * It has no payload.\n         */\n        this.hidden = new EventEmitter();\n    }\n    /**\n     * Sets the custom ID of the accordion item. It must be unique for the document.\n     *\n     * @param id The ID of the accordion item, must be a non-empty string\n     */\n    set id(id) {\n        if (isString(id) && id !== '') {\n            this._id = id;\n        }\n    }\n    /**\n     * If `true`, the content of the accordion item's body will be removed from the DOM. It will be just hidden otherwise.\n     *\n     * This property can also be set up on the parent [`NgbAccordion` directive](#/components/accordion/api#NgbAccordionDirective).\n     */\n    set destroyOnHide(destroyOnHide) {\n        this._destroyOnHide = destroyOnHide;\n    }\n    get destroyOnHide() {\n        return this._destroyOnHide === undefined ? this._accordion.destroyOnHide : this._destroyOnHide;\n    }\n    /**\n     *\tIf `true`, the accordion item will be collapsed. Otherwise, it will be expanded.\n     *\n     * @param collapsed New state of the accordion item.\n     */\n    set collapsed(collapsed) {\n        if (this.collapsed !== collapsed) {\n            // checking if accordion allows to expand the panel in respect to 'closeOthers' flag\n            if (this.collapsed && !this._accordion._ensureCanExpand(this)) {\n                return;\n            }\n            // changing the collapsed state\n            this._collapsed = collapsed;\n            this._cd.markForCheck(); // need if the accordion is used inside a component having OnPush change detection strategy\n            // we need force CD to get template into DOM before starting animation to calculate its height correctly\n            if (!this.collapsed) {\n                this.animatingBodyCollapse = true;\n                this._cd.detectChanges();\n            }\n            // firing events before starting animations\n            if (!this.collapsed) {\n                this.show.emit();\n                this._accordion.show.emit(this.id);\n            }\n            else {\n                this.hide.emit();\n                this._accordion.hide.emit(this.id);\n            }\n            // we also need to make sure 'animation' flag is up-to- date\n            this._collapse.ngbCollapse.animation = this._accordion.animation;\n            this._collapse.ngbCollapse.collapsed = this.collapsed;\n        }\n    }\n    get collapsed() {\n        return this._collapsed;\n    }\n    get id() {\n        return `${this._id}`;\n    }\n    get toggleId() {\n        return `${this.id}-toggle`;\n    }\n    get collapseId() {\n        return `${this.id}-collapse`;\n    }\n    ngAfterContentInit() {\n        const { ngbCollapse } = this._collapse;\n        // we need to disable the animation for the first init\n        ngbCollapse.animation = false;\n        ngbCollapse.collapsed = this.collapsed;\n        // we set the animation to the default of the accordion\n        ngbCollapse.animation = this._accordion.animation;\n        // event forwarding from 'ngbCollapse' to 'ngbAccordion'\n        this._subscriptions.push(ngbCollapse.hidden.subscribe(() => {\n            // when the animation finishes we can remove the template from DOM\n            this.animatingBodyCollapse = false;\n            this.hidden.emit();\n            this._accordion.hidden.emit(this.id);\n        }), ngbCollapse.shown.subscribe(() => {\n            this.shown.emit();\n            this._accordion.shown.emit(this.id);\n        }));\n    }\n    ngOnDestroy() {\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    /**\n     * Toggles an accordion item.\n     */\n    toggle() {\n        this.collapsed = !this.collapsed;\n    }\n    /**\n     * Expands an accordion item.\n     */\n    expand() {\n        this.collapsed = false;\n    }\n    /**\n     * Collapses an accordion item.\n     */\n    collapse() {\n        this.collapsed = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionItem, deps: [{ token: forwardRef(() => NgbAccordionDirective) }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionItem, isStandalone: true, selector: \"[ngbAccordionItem]\", inputs: { id: [\"ngbAccordionItem\", \"id\"], destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", collapsed: \"collapsed\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { properties: { \"class.accordion-item\": \"true\", \"id\": \"id\" } }, queries: [{ propertyName: \"_collapse\", first: true, predicate: NgbAccordionCollapse, descendants: true, static: true }], exportAs: [\"ngbAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordionItem]',\n                    exportAs: 'ngbAccordionItem',\n                    standalone: true,\n                    host: {\n                        '[class.accordion-item]': 'true',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionDirective, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbAccordionDirective)]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _collapse: [{\n                type: ContentChild,\n                args: [NgbAccordionCollapse, { static: true }]\n            }], id: [{\n                type: Input,\n                args: ['ngbAccordionItem']\n            }], destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], collapsed: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n/**\n * Accordion is a stack of cards that have a header and collapsible body.\n *\n * This directive is a container for these items and provides an API to handle them.\n *\n * @since 14.1.0\n */\nclass NgbAccordionDirective {\n    constructor(config) {\n        /**\n         * If `true`, the content of the accordion items body will be removed from the DOM. It will be just hidden otherwise.\n         *\n         * This property can be overwritten at the [`NgbAccordionItem`](#/components/accordion/api#NgbAccordionItem) level\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted before expanding animation starts. The payload is the id of shown accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.show = new EventEmitter();\n        /**\n         * Event emitted when the expanding animation is finished. The payload is the id of shown accordion item.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * Event emitted before the collapsing animation starts. The payload is the id of hidden accordion item.\n         *\n         * @since 15.1.0\n         */\n        this.hide = new EventEmitter();\n        /**\n         * Event emitted when the collapsing animation is finished and before the content is removed from DOM.\n         * The payload is the id of hidden accordion item.\n         */\n        this.hidden = new EventEmitter();\n        this._anItemWasAlreadyExpandedDuringInitialisation = false;\n        this.animation = config.animation;\n        this.closeOthers = config.closeOthers;\n    }\n    /**\n     * Toggles an item with the given id.\n     *\n     * It will toggle an item, even if it is disabled.\n     *\n     * @param itemId The id of the item to toggle.\n     */\n    toggle(itemId) {\n        this._getItem(itemId)?.toggle();\n    }\n    /**\n     * Expands an item with the given id.\n     *\n     * If `closeOthers` is `true`, it will collapse other panels.\n     *\n     * @param itemId The id of the item to expand.\n     */\n    expand(itemId) {\n        this._getItem(itemId)?.expand();\n    }\n    /**\n     * Expands all items.\n     *\n     * If `closeOthers` is `true` and all items are closed, it will open the first one. Otherwise, it will keep the opened one.\n     */\n    expandAll() {\n        if (this._items) {\n            if (this.closeOthers) {\n                // we check if there is an item open and if it is not we can expand the first item\n                // (otherwise we toggle nothing)\n                if (!this._items.find((item) => !item.collapsed)) {\n                    this._items.first.expand();\n                }\n            }\n            else {\n                this._items.forEach((item) => item.expand());\n            }\n        }\n    }\n    /**\n     * Collapses an item with the given id.\n     *\n     * Has no effect if the `itemId` does not correspond to any item.\n     *\n     * @param itemId The id of the item to collapse.\n     */\n    collapse(itemId) {\n        this._getItem(itemId)?.collapse();\n    }\n    /**\n     * Collapses all items.\n     */\n    collapseAll() {\n        this._items?.forEach((item) => item.collapse());\n    }\n    /**\n     * Checks if an item with the given id is expanded.\n     *\n     * If the `itemId` does not correspond to any item, it returns `false`.\n     *\n     * @param itemId The id of the item to check.\n     */\n    isExpanded(itemId) {\n        const item = this._getItem(itemId);\n        return item ? !item.collapsed : false;\n    }\n    /**\n     * It checks, if the item can be expanded in the current state of the accordion.\n     * With `closeOthers` there can be only one expanded item at a time.\n     *\n     * @internal\n     */\n    _ensureCanExpand(toExpand) {\n        if (!this.closeOthers) {\n            return true;\n        }\n        // special case during the initialization of the [collapse]=\"false\" inputs\n        // `this._items` QueryList is not yet initialized, but we need to ensure only one item can be expanded at a time\n        if (!this._items) {\n            if (!this._anItemWasAlreadyExpandedDuringInitialisation) {\n                this._anItemWasAlreadyExpandedDuringInitialisation = true;\n                return true;\n            }\n            return false;\n        }\n        // if there is an expanded item, we need to collapse it first\n        this._items.find((item) => !item.collapsed && toExpand !== item)?.collapse();\n        return true;\n    }\n    _getItem(itemId) {\n        return this._items?.find((item) => item.id === itemId);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionDirective, deps: [{ token: NgbAccordionConfig }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAccordionDirective, isStandalone: true, selector: \"[ngbAccordion]\", inputs: { animation: \"animation\", closeOthers: \"closeOthers\", destroyOnHide: \"destroyOnHide\" }, outputs: { show: \"show\", shown: \"shown\", hide: \"hide\", hidden: \"hidden\" }, host: { properties: { \"class.accordion\": \"true\" } }, queries: [{ propertyName: \"_items\", predicate: NgbAccordionItem }], exportAs: [\"ngbAccordion\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbAccordion]',\n                    standalone: true,\n                    exportAs: 'ngbAccordion',\n                    host: { '[class.accordion]': 'true' },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbAccordionConfig }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbAccordionItem, { descendants: false }]\n            }], animation: [{\n                type: Input\n            }], closeOthers: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], show: [{\n                type: Output\n            }], shown: [{\n                type: Output\n            }], hide: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\n/* eslint-disable deprecation/deprecation */\nconst NGB_ACCORDION_DIRECTIVES = [\n    NgbAccordion,\n    NgbPanel,\n    NgbPanelTitle,\n    NgbPanelContent,\n    NgbPanelHeader,\n    NgbPanelToggle,\n    NgbAccordionButton,\n    NgbAccordionDirective,\n    NgbAccordionItem,\n    NgbAccordionHeader,\n    NgbAccordionToggle,\n    NgbAccordionBody,\n    NgbAccordionCollapse,\n];\nclass NgbAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionModule, imports: [NgbAccordion,\n            NgbPanel,\n            NgbPanelTitle,\n            NgbPanelContent,\n            NgbPanelHeader,\n            NgbPanelToggle,\n            NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse], exports: [NgbAccordion,\n            NgbPanel,\n            NgbPanelTitle,\n            NgbPanelContent,\n            NgbPanelHeader,\n            NgbPanelToggle,\n            NgbAccordionButton,\n            NgbAccordionDirective,\n            NgbAccordionItem,\n            NgbAccordionHeader,\n            NgbAccordionToggle,\n            NgbAccordionBody,\n            NgbAccordionCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_ACCORDION_DIRECTIVES,\n                    exports: NGB_ACCORDION_DIRECTIVES,\n                }]\n        }] });\n\nconst ngbAlertFadingTransition = ({ classList }) => {\n    classList.remove('show');\n};\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    constructor(config, _renderer, _element, _zone) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._zone = _zone;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         *\n         * @since 8.0.0\n         */\n        this.closed = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n        this.animation = config.animation;\n    }\n    /**\n     * Triggers alert closing programmatically (same as clicking on the close button (×)).\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(closed)` output\n     *\n     * @since 8.0.0\n     */\n    close() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbAlertFadingTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => this.closed.emit());\n        return transition;\n    }\n    ngOnChanges(changes) {\n        const typeChange = changes['type'];\n        if (typeChange && !typeChange.firstChange) {\n            this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n            this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n        }\n    }\n    ngOnInit() {\n        this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlert, deps: [{ token: NgbAlertConfig }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbAlert, isStandalone: true, selector: \"ngb-alert\", inputs: { animation: \"animation\", dismissible: \"dismissible\", type: \"type\" }, outputs: { closed: \"closed\" }, host: { attributes: { \"role\": \"alert\" }, properties: { \"class.fade\": \"animation\", \"class.alert-dismissible\": \"dismissible\" }, classAttribute: \"alert show\" }, exportAs: [\"ngbAlert\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-content></ng-content>\n\t\t<button\n\t\t\t*ngIf=\"dismissible\"\n\t\t\ttype=\"button\"\n\t\t\tclass=\"btn-close\"\n\t\t\taria-label=\"Close\"\n\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t(click)=\"close()\"\n\t\t>\n\t\t</button>\n\t`, isInline: true, styles: [\"ngb-alert{display:block}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlert, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-alert', exportAs: 'ngbAlert', standalone: true, imports: [NgIf], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { role: 'alert', class: 'alert show', '[class.fade]': 'animation', '[class.alert-dismissible]': 'dismissible' }, template: `\n\t\t<ng-content></ng-content>\n\t\t<button\n\t\t\t*ngIf=\"dismissible\"\n\t\t\ttype=\"button\"\n\t\t\tclass=\"btn-close\"\n\t\t\taria-label=\"Close\"\n\t\t\ti18n-aria-label=\"@@ngb.alert.close\"\n\t\t\t(click)=\"close()\"\n\t\t>\n\t\t</button>\n\t`, styles: [\"ngb-alert{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbAlertConfig }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }] } });\n\nclass NgbAlertModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertModule, imports: [NgbAlert], exports: [NgbAlert] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbAlertModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbAlert],\n                    exports: [NgbAlert],\n                }]\n        }] });\n\n/**\n * Defines the carousel slide transition direction.\n */\nvar NgbSlideEventDirection;\n(function (NgbSlideEventDirection) {\n    NgbSlideEventDirection[\"START\"] = \"start\";\n    NgbSlideEventDirection[\"END\"] = \"end\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\nconst isBeingAnimated = ({ classList }) => {\n    return classList.contains('carousel-item-start') || classList.contains('carousel-item-end');\n};\nconst removeDirectionClasses = (classList) => {\n    classList.remove('carousel-item-start');\n    classList.remove('carousel-item-end');\n};\nconst removeClasses = (classList) => {\n    removeDirectionClasses(classList);\n    classList.remove('carousel-item-prev');\n    classList.remove('carousel-item-next');\n};\nconst ngbCarouselTransitionIn = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeDirectionClasses(classList);\n        removeClasses(classList);\n        classList.add('active');\n        return;\n    }\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        // For the 'in' transition, a 'pre-class' is applied to the element to ensure its visibility\n        classList.add('carousel-item-' + (direction === NgbSlideEventDirection.START ? 'next' : 'prev'));\n        reflow(element);\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.add('active');\n    };\n};\nconst ngbCarouselTransitionOut = (element, animation, { direction }) => {\n    const { classList } = element;\n    if (!animation) {\n        removeDirectionClasses(classList);\n        removeClasses(classList);\n        classList.remove('active');\n        return;\n    }\n    //  direction is left or right, depending on the way the slide goes out.\n    if (isBeingAnimated(element)) {\n        // Revert the transition\n        removeDirectionClasses(classList);\n    }\n    else {\n        classList.add('carousel-item-' + direction);\n    }\n    return () => {\n        removeClasses(classList);\n        classList.remove('active');\n    };\n};\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.pauseOnFocus = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    constructor(tplRef) {\n        this.tplRef = tplRef;\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n        /**\n         * An event emitted when the slide transition is finished\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbSlide, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbSlide, isStandalone: true, selector: \"ng-template[ngbSlide]\", inputs: { id: \"id\" }, outputs: { slid: \"slid\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbSlide, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbSlide]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { id: [{\n                type: Input\n            }], slid: [{\n                type: Output\n            }] } });\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    /**\n     * Time in milliseconds before the next slide is shown.\n     */\n    set interval(value) {\n        this._interval$.next(value);\n    }\n    get interval() {\n        return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n    set wrap(value) {\n        this._wrap$.next(value);\n    }\n    get wrap() {\n        return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n    set pauseOnHover(value) {\n        this._pauseOnHover$.next(value);\n    }\n    get pauseOnHover() {\n        return this._pauseOnHover$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when the focus is inside the carousel.\n     */\n    set pauseOnFocus(value) {\n        this._pauseOnFocus$.next(value);\n    }\n    get pauseOnFocus() {\n        return this._pauseOnFocus$.value;\n    }\n    set mouseHover(value) {\n        this._mouseHover$.next(value);\n    }\n    get mouseHover() {\n        return this._mouseHover$.value;\n    }\n    set focused(value) {\n        this._focused$.next(value);\n    }\n    get focused() {\n        return this._focused$.value;\n    }\n    constructor(config, _platformId, _ngZone, _cd, _container) {\n        this._platformId = _platformId;\n        this._ngZone = _ngZone;\n        this._cd = _cd;\n        this._container = _container;\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._destroy$ = new Subject();\n        this._interval$ = new BehaviorSubject(0);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._focused$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(false);\n        this._pauseOnFocus$ = new BehaviorSubject(false);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(false);\n        /**\n         * An event emitted just before the slide transition starts.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         *\n         * @since 8.0.0\n         */\n        this.slid = new EventEmitter();\n        /*\n         * Keep the ids of the panels currently transitionning\n         * in order to allow only the transition revertion\n         */\n        this._transitionIds = null;\n        this.animation = config.animation;\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n        this.pauseOnHover = config.pauseOnHover;\n        this.pauseOnFocus = config.pauseOnFocus;\n        this.showNavigationArrows = config.showNavigationArrows;\n        this.showNavigationIndicators = config.showNavigationIndicators;\n    }\n    arrowLeft() {\n        this.focus();\n        this.prev(NgbSlideEventSource.ARROW_LEFT);\n    }\n    arrowRight() {\n        this.focus();\n        this.next(NgbSlideEventSource.ARROW_RIGHT);\n    }\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular(() => {\n                const hasNextSlide$ = combineLatest([\n                    this.slide.pipe(map((slideEvent) => slideEvent.current), startWith(this.activeId)),\n                    this._wrap$,\n                    this.slides.changes.pipe(startWith(null)),\n                ]).pipe(map(([currentSlideId, wrap]) => {\n                    const slideArr = this.slides.toArray();\n                    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                }), distinctUntilChanged());\n                combineLatest([\n                    this._pause$,\n                    this._pauseOnHover$,\n                    this._mouseHover$,\n                    this._pauseOnFocus$,\n                    this._focused$,\n                    this._interval$,\n                    hasNextSlide$,\n                ])\n                    .pipe(map(([pause, pauseOnHover, mouseHover, pauseOnFocus, focused, interval, hasNextSlide]) => pause || (pauseOnHover && mouseHover) || (pauseOnFocus && focused) || !hasNextSlide ? 0 : interval), distinctUntilChanged(), switchMap((interval) => (interval > 0 ? timer(interval, interval) : NEVER)), takeUntil(this._destroy$))\n                    .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n            });\n        }\n        this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => {\n            this._transitionIds?.forEach((id) => ngbCompleteTransition(this._getSlideElement(id)));\n            this._transitionIds = null;\n            this._cd.markForCheck();\n            // The following code need to be done asynchronously, after the dom becomes stable,\n            // otherwise all changes will be undone.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                for (const { id } of this.slides) {\n                    const element = this._getSlideElement(id);\n                    if (id === this.activeId) {\n                        element.classList.add('active');\n                    }\n                    else {\n                        element.classList.remove('active');\n                    }\n                }\n            });\n        });\n    }\n    ngAfterContentChecked() {\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : '';\n    }\n    ngAfterViewInit() {\n        // Initialize the 'active' class (not managed by the template)\n        if (this.activeId) {\n            const element = this._getSlideElement(this.activeId);\n            if (element) {\n                element.classList.add('active');\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n    select(slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n    prev(source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.END, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n    next(source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.START, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n    pause() {\n        this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from start to end.\n     */\n    cycle() {\n        this._pause$.next(false);\n    }\n    /**\n     * Set the focus on the carousel.\n     */\n    focus() {\n        this._container.nativeElement.focus();\n    }\n    _cycleToSelected(slideIdx, direction, source) {\n        const transitionIds = this._transitionIds;\n        if (transitionIds && (transitionIds[0] !== slideIdx || transitionIds[1] !== this.activeId)) {\n            // Revert prevented\n            return;\n        }\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this._transitionIds = [this.activeId, slideIdx];\n            this.slide.emit({\n                prev: this.activeId,\n                current: selectedSlide.id,\n                direction: direction,\n                paused: this._pause$.value,\n                source,\n            });\n            const options = {\n                animation: this.animation,\n                runningTransition: 'stop',\n                context: { direction },\n            };\n            const transitions = [];\n            const activeSlide = this._getSlideById(this.activeId);\n            if (activeSlide) {\n                const activeSlideTransition = ngbRunTransition(this._ngZone, this._getSlideElement(activeSlide.id), ngbCarouselTransitionOut, options);\n                activeSlideTransition.subscribe(() => {\n                    activeSlide.slid.emit({ isShown: false, direction, source });\n                });\n                transitions.push(activeSlideTransition);\n            }\n            const previousId = this.activeId;\n            this.activeId = selectedSlide.id;\n            const nextSlide = this._getSlideById(this.activeId);\n            const transition = ngbRunTransition(this._ngZone, this._getSlideElement(selectedSlide.id), ngbCarouselTransitionIn, options);\n            transition.subscribe(() => {\n                nextSlide?.slid.emit({ isShown: true, direction, source });\n            });\n            transitions.push(transition);\n            zip(...transitions)\n                .pipe(take(1))\n                .subscribe(() => {\n                this._transitionIds = null;\n                this.slid.emit({\n                    prev: previousId,\n                    current: selectedSlide.id,\n                    direction: direction,\n                    paused: this._pause$.value,\n                    source,\n                });\n            });\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.END : NgbSlideEventDirection.START;\n    }\n    _getSlideById(slideId) {\n        return this.slides.find((slide) => slide.id === slideId) || null;\n    }\n    _getSlideIdxById(slideId) {\n        const slide = this._getSlideById(slideId);\n        return slide != null ? this.slides.toArray().indexOf(slide) : -1;\n    }\n    _getNextSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide\n            ? this.wrap\n                ? slideArr[0].id\n                : slideArr[slideArr.length - 1].id\n            : slideArr[currentSlideIdx + 1].id;\n    }\n    _getPrevSlide(currentSlideId) {\n        const slideArr = this.slides.toArray();\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide\n            ? this.wrap\n                ? slideArr[slideArr.length - 1].id\n                : slideArr[0].id\n            : slideArr[currentSlideIdx - 1].id;\n    }\n    _getSlideElement(slideId) {\n        return this._container.nativeElement.querySelector(`#slide-${slideId}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarousel, deps: [{ token: NgbCarouselConfig }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbCarousel, isStandalone: true, selector: \"ngb-carousel\", inputs: { animation: \"animation\", activeId: \"activeId\", interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", pauseOnFocus: \"pauseOnFocus\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\" }, outputs: { slide: \"slide\", slid: \"slid\" }, host: { attributes: { \"tabIndex\": \"0\" }, listeners: { \"keydown.arrowLeft\": \"keyboard && arrowLeft()\", \"keydown.arrowRight\": \"keyboard && arrowRight()\", \"mouseenter\": \"mouseHover = true\", \"mouseleave\": \"mouseHover = false\", \"focusin\": \"focused = true\", \"focusout\": \"focused = false\" }, properties: { \"style.display\": \"\\\"block\\\"\", \"attr.aria-activedescendant\": \"'slide-' + activeId\" }, classAttribute: \"carousel slide\" }, queries: [{ propertyName: \"slides\", predicate: NgbSlide }], exportAs: [\"ngbCarousel\"], ngImport: i0, template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-bs-target\n\t\t\t\t*ngFor=\"let slide of slides\"\n\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\trole=\"tab\"\n\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t></button>\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t<div\n\t\t\t\t*ngFor=\"let slide of slides; index as i; count as c\"\n\t\t\t\tclass=\"carousel-item\"\n\t\t\t\t[id]=\"'slide-' + slide.id\"\n\t\t\t\trole=\"tabpanel\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t>\n\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t</span>\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t\t<button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n\t\t</button>\n\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n\t\t</button>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarousel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-carousel',\n                    exportAs: 'ngbCarousel',\n                    standalone: true,\n                    imports: [NgFor, NgTemplateOutlet, NgIf],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'carousel slide',\n                        '[style.display]': '\"block\"',\n                        tabIndex: '0',\n                        '(keydown.arrowLeft)': 'keyboard && arrowLeft()',\n                        '(keydown.arrowRight)': 'keyboard && arrowRight()',\n                        '(mouseenter)': 'mouseHover = true',\n                        '(mouseleave)': 'mouseHover = false',\n                        '(focusin)': 'focused = true',\n                        '(focusout)': 'focused = false',\n                        '[attr.aria-activedescendant]': `'slide-' + activeId`,\n                    },\n                    template: `\n\t\t<div class=\"carousel-indicators\" [class.visually-hidden]=\"!showNavigationIndicators\" role=\"tablist\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tdata-bs-target\n\t\t\t\t*ngFor=\"let slide of slides\"\n\t\t\t\t[class.active]=\"slide.id === activeId\"\n\t\t\t\trole=\"tab\"\n\t\t\t\t[attr.aria-labelledby]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-controls]=\"'slide-' + slide.id\"\n\t\t\t\t[attr.aria-selected]=\"slide.id === activeId\"\n\t\t\t\t(click)=\"focus(); select(slide.id, NgbSlideEventSource.INDICATOR)\"\n\t\t\t></button>\n\t\t</div>\n\t\t<div class=\"carousel-inner\">\n\t\t\t<div\n\t\t\t\t*ngFor=\"let slide of slides; index as i; count as c\"\n\t\t\t\tclass=\"carousel-item\"\n\t\t\t\t[id]=\"'slide-' + slide.id\"\n\t\t\t\trole=\"tabpanel\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclass=\"visually-hidden\"\n\t\t\t\t\ti18n=\"Currently selected slide number read by screen reader@@ngb.carousel.slide-number\"\n\t\t\t\t>\n\t\t\t\t\tSlide {{ i + 1 }} of {{ c }}\n\t\t\t\t</span>\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n\t\t\t</div>\n\t\t</div>\n\t\t<button class=\"carousel-control-prev\" type=\"button\" (click)=\"arrowLeft()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n\t\t</button>\n\t\t<button class=\"carousel-control-next\" type=\"button\" (click)=\"arrowRight()\" *ngIf=\"showNavigationArrows\">\n\t\t\t<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.carousel.next\">Next</span>\n\t\t</button>\n\t`,\n                }]\n        }], ctorParameters: function () { return [{ type: NgbCarouselConfig }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }]; }, propDecorators: { slides: [{\n                type: ContentChildren,\n                args: [NgbSlide]\n            }], animation: [{\n                type: Input\n            }], activeId: [{\n                type: Input\n            }], interval: [{\n                type: Input\n            }], wrap: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], pauseOnHover: [{\n                type: Input\n            }], pauseOnFocus: [{\n                type: Input\n            }], showNavigationArrows: [{\n                type: Input\n            }], showNavigationIndicators: [{\n                type: Input\n            }], slide: [{\n                type: Output\n            }], slid: [{\n                type: Output\n            }] } });\nvar NgbSlideEventSource;\n(function (NgbSlideEventSource) {\n    NgbSlideEventSource[\"TIMER\"] = \"timer\";\n    NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n    NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n    NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nclass NgbCarouselModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselModule, imports: [NgbCarousel, NgbSlide], exports: [NgbCarousel, NgbSlide] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCarousel, NgbSlide],\n                    exports: [NgbCarousel, NgbSlide],\n                }]\n        }] });\n\nclass NgbCollapseModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseModule, imports: [NgbCollapse], exports: [NgbCollapse] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCollapseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbCollapse],\n                    exports: [NgbCollapse],\n                }]\n        }] });\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nclass NgbDate {\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    equals(other) {\n        return other != null && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date || null;\n}\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    return !(date === null ||\n        date === undefined ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n}\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        const index = months.findIndex((month) => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        const index = months.findIndex((month) => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n    const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n    const length = end - start + 1;\n    const numbers = Array(length);\n    for (let i = 0; i < length; i++) {\n        numbers[i] = start + i;\n    }\n    return numbers;\n}\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    const nextDate = Object.assign(calendar.getNext(date, 'm'), { day: 1 });\n    return maxDate != null && nextDate.after(maxDate);\n}\nfunction prevMonthDisabled(calendar, date, minDate) {\n    const prevDate = Object.assign(calendar.getPrev(date, 'm'), { day: 1 });\n    return (minDate != null &&\n        ((prevDate.year === minDate.year && prevDate.month < minDate.month) ||\n            (prevDate.year < minDate.year && minDate.month === 1)));\n}\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        const firstDate = Object.assign(calendar.getNext(date, 'm', i), { day: 1 });\n        months[i] = null;\n        if (!force) {\n            const reusedIndex = monthsToReuse.findIndex((month) => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n        }\n    });\n    return months;\n}\nfunction buildMonth(calendar, date, state, i18n, month = {}) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays, weekdayWidth, weekdaysVisible, } = state;\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // clearing weekdays, if not visible\n    if (!weekdaysVisible) {\n        month.weekdays.length = 0;\n    }\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0 && weekdaysVisible) {\n                month.weekdays[day] = i18n.getWeekdayLabel(calendar.getWeekday(date), weekdayWidth);\n            }\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            const nextDate = calendar.getNext(newDate);\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            let contextUserData = dayTemplateData\n                ? dayTemplateData(newDate, { month: month.number, year: month.year })\n                : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = {};\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number,\n                currentYear: month.year,\n                disabled,\n                focused: false,\n                selected: false,\n                today,\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map((day) => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed =\n            outsideDays === 'collapsed' &&\n                days[0].date.month !== month.number &&\n                days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    const daysPerWeek = calendar.getDaysPerWeek();\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nfunction toJSDate(date) {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\nclass NgbCalendar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendar, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendar, providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }]\n        }] });\nclass NgbCalendarGregorian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toJSDate(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromJSDate(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toJSDate(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromJSDate(new Date());\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toJSDate(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarGregorian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarGregorian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarGregorian, decorators: [{\n            type: Injectable\n        }] });\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the text label to display above the day view.\n     *\n     * @since 9.1.0\n     */\n    getMonthLabel(date) {\n        return `${this.getMonthFullName(date.month, date.year)} ${this.getYearNumerals(date.year)}`;\n    }\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    getDayNumerals(date) {\n        return `${date.day}`;\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n    getWeekNumerals(weekNumber) {\n        return `${weekNumber}`;\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n    getYearNumerals(year) {\n        return `${year}`;\n    }\n    /**\n     * Returns the week label to display in the heading of the month view.\n     *\n     * @since 9.1.0\n     */\n    getWeekLabel() {\n        return '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18n, providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [{ token: LOCALE_ID }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID] }]\n        }] });\n/**\n * A service providing default implementation for the datepicker i18n.\n * It can be used as a base implementation if necessary.\n *\n * @since 9.1.0\n */\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    constructor(_locale) {\n        super();\n        this._locale = _locale;\n        this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    }\n    getWeekdayLabel(weekday, width) {\n        const weekdaysStartingOnSunday = getLocaleDayNames(this._locale, FormStyle.Standalone, width === undefined ? TranslationWidth.Short : width);\n        const weekdays = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n        return weekdays[weekday - 1] || '';\n    }\n    getMonthShortName(month) {\n        return this._monthsShort[month - 1] || '';\n    }\n    getMonthFullName(month) {\n        return this._monthsFull[month - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nDefault, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nDefault, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\nclass NgbDatepickerService {\n    get model$() {\n        return this._model$.pipe(filter((model) => model.months.length > 0));\n    }\n    get dateSelect$() {\n        return this._dateSelect$.pipe(filter((date) => date !== null));\n    }\n    set(options) {\n        let patch = Object.keys(options)\n            .map((key) => this._VALIDATORS[key](options[key]))\n            .reduce((obj, part) => ({ ...obj, ...part }), {});\n        if (Object.keys(patch).length > 0) {\n            this._nextState(patch);\n        }\n    }\n    constructor(_calendar, _i18n) {\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._VALIDATORS = {\n            dayTemplateData: (dayTemplateData) => {\n                if (this._state.dayTemplateData !== dayTemplateData) {\n                    return { dayTemplateData };\n                }\n            },\n            displayMonths: (displayMonths) => {\n                displayMonths = toInteger(displayMonths);\n                if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n                    return { displayMonths };\n                }\n            },\n            disabled: (disabled) => {\n                if (this._state.disabled !== disabled) {\n                    return { disabled };\n                }\n            },\n            firstDayOfWeek: (firstDayOfWeek) => {\n                firstDayOfWeek = toInteger(firstDayOfWeek);\n                if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n                    return { firstDayOfWeek };\n                }\n            },\n            focusVisible: (focusVisible) => {\n                if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n                    return { focusVisible };\n                }\n            },\n            markDisabled: (markDisabled) => {\n                if (this._state.markDisabled !== markDisabled) {\n                    return { markDisabled };\n                }\n            },\n            maxDate: (date) => {\n                const maxDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.maxDate, maxDate)) {\n                    return { maxDate };\n                }\n            },\n            minDate: (date) => {\n                const minDate = this.toValidDate(date, null);\n                if (isChangedDate(this._state.minDate, minDate)) {\n                    return { minDate };\n                }\n            },\n            navigation: (navigation) => {\n                if (this._state.navigation !== navigation) {\n                    return { navigation };\n                }\n            },\n            outsideDays: (outsideDays) => {\n                if (this._state.outsideDays !== outsideDays) {\n                    return { outsideDays };\n                }\n            },\n            weekdays: (weekdays) => {\n                const weekdayWidth = weekdays === true || weekdays === false ? TranslationWidth.Short : weekdays;\n                const weekdaysVisible = weekdays === true || weekdays === false ? weekdays : true;\n                if (this._state.weekdayWidth !== weekdayWidth || this._state.weekdaysVisible !== weekdaysVisible) {\n                    return { weekdayWidth, weekdaysVisible };\n                }\n            },\n        };\n        this._model$ = new Subject();\n        this._dateSelect$ = new Subject();\n        this._state = {\n            dayTemplateData: null,\n            markDisabled: null,\n            maxDate: null,\n            minDate: null,\n            disabled: false,\n            displayMonths: 1,\n            firstDate: null,\n            firstDayOfWeek: 1,\n            lastDate: null,\n            focusDate: null,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectedDate: null,\n            selectBoxes: { years: [], months: [] },\n            weekdayWidth: TranslationWidth.Short,\n            weekdaysVisible: true,\n        };\n    }\n    focus(date) {\n        const focusedDate = this.toValidDate(date, null);\n        if (focusedDate != null && !this._state.disabled && isChangedDate(this._state.focusDate, focusedDate)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    open(date) {\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (firstDate != null &&\n            !this._state.disabled &&\n            (!this._state.firstDate || isChangedMonth(this._state.firstDate, firstDate))) {\n            this._nextState({ firstDate });\n        }\n    }\n    select(date, options = {}) {\n        const selectedDate = this.toValidDate(date, null);\n        if (selectedDate != null && !this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._dateSelect$.next(selectedDate);\n            }\n        }\n    }\n    toValidDate(date, defaultValue) {\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    getMonth(struct) {\n        for (let month of this._state.months) {\n            if (struct.month === month.number && struct.year === month.year) {\n                return month;\n            }\n        }\n        throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n    }\n    _nextState(patch) {\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach((month) => {\n            month.weeks.forEach((week) => {\n                week.days.forEach((day) => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex =\n                        !disabled && focusDate && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden =\n                            outsideDays === 'hidden' ||\n                                outsideDays === 'collapsed' ||\n                                (displayMonths > 1 &&\n                                    day.date.after(months[0].firstDate) &&\n                                    day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    }\n    _updateState(patch) {\n        // patching fields\n        const state = Object.assign({}, this._state, patch);\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 &&\n                state.focusDate &&\n                !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            const forceRebuild = 'dayTemplateData' in patch ||\n                'firstDayOfWeek' in patch ||\n                'markDisabled' in patch ||\n                'minDate' in patch ||\n                'maxDate' in patch ||\n                'disabled' in patch ||\n                'outsideDays' in patch ||\n                'weekdaysVisible' in patch;\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months[0].firstDate;\n            state.lastDate = months[months.length - 1].lastDate;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (!state.focusDate || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerService, deps: [{ token: NgbCalendar }, { token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NgbCalendar }, { type: NgbDatepickerI18n }]; } });\n\nvar NavigationEvent;\n(function (NavigationEvent) {\n    NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n    NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n\nclass NgbDatepickerDayView {\n    constructor(i18n) {\n        this.i18n = i18n;\n    }\n    isMuted() {\n        return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerDayView, deps: [{ token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepickerDayView, isStandalone: true, selector: \"[ngbDatepickerDayView]\", inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, host: { properties: { \"class.bg-primary\": \"selected\", \"class.text-white\": \"selected\", \"class.text-muted\": \"isMuted()\", \"class.outside\": \"isMuted()\", \"class.active\": \"focused\" }, classAttribute: \"btn-light\" }, ngImport: i0, template: `{{ i18n.getDayNumerals(date) }}`, isInline: true, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-btn-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerDayView, decorators: [{\n            type: Component,\n            args: [{ selector: '[ngbDatepickerDayView]', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'btn-light',\n                        '[class.bg-primary]': 'selected',\n                        '[class.text-white]': 'selected',\n                        '[class.text-muted]': 'isMuted()',\n                        '[class.outside]': 'isMuted()',\n                        '[class.active]': 'focused',\n                    }, template: `{{ i18n.getDayNumerals(date) }}`, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:transparent}[ngbDatepickerDayView]:hover:not(.bg-primary),[ngbDatepickerDayView].active:not(.bg-primary){background-color:var(--bs-btn-bg);outline:1px solid var(--bs-border-color)}[ngbDatepickerDayView].outside{opacity:.5}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }]; }, propDecorators: { currentMonth: [{\n                type: Input\n            }], date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], focused: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n\nclass NgbDatepickerNavigationSelect {\n    constructor(i18n, _renderer) {\n        this.i18n = i18n;\n        this._renderer = _renderer;\n        this.select = new EventEmitter();\n        this._month = -1;\n        this._year = -1;\n    }\n    changeMonth(month) {\n        this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n    changeYear(year) {\n        this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n    ngAfterViewChecked() {\n        if (this.date) {\n            if (this.date.month !== this._month) {\n                this._month = this.date.month;\n                this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n            }\n            if (this.date.year !== this._year) {\n                this._year = this.date.year;\n                this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerNavigationSelect, deps: [{ token: NgbDatepickerI18n }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepickerNavigationSelect, isStandalone: true, selector: \"ngb-datepicker-navigation-select\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, viewQueries: [{ propertyName: \"monthSelect\", first: true, predicate: [\"month\"], descendants: true, read: ElementRef, static: true }, { propertyName: \"yearSelect\", first: true, predicate: [\"year\"], descendants: true, read: ElementRef, static: true }], ngImport: i0, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t}}</option> </select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t</select>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"], dependencies: [{ kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerNavigationSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation-select', standalone: true, imports: [NgFor], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<select\n\t\t\t#month\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-month\"\n\t\t\taria-label=\"Select month\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-month\"\n\t\t\ttitle=\"Select month\"\n\t\t\t(change)=\"changeMonth($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date.year)\" [value]=\"m\">{{\n\t\t\t\ti18n.getMonthShortName(m, date.year)\n\t\t\t}}</option> </select\n\t\t><select\n\t\t\t#year\n\t\t\t[disabled]=\"disabled\"\n\t\t\tclass=\"form-select\"\n\t\t\ti18n-aria-label=\"@@ngb.datepicker.select-year\"\n\t\t\taria-label=\"Select year\"\n\t\t\ti18n-title=\"@@ngb.datepicker.select-year\"\n\t\t\ttitle=\"Select year\"\n\t\t\t(change)=\"changeYear($any($event).target.value)\"\n\t\t>\n\t\t\t<option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n\t\t</select>\n\t`, styles: [\"ngb-datepicker-navigation-select>.form-select{flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.form-select:focus{z-index:1}ngb-datepicker-navigation-select>.form-select::-ms-value{background-color:transparent!important}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }, { type: i0.Renderer2 }]; }, propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], years: [{\n                type: Input\n            }], select: [{\n                type: Output\n            }], monthSelect: [{\n                type: ViewChild,\n                args: ['month', { static: true, read: ElementRef }]\n            }], yearSelect: [{\n                type: ViewChild,\n                args: ['year', { static: true, read: ElementRef }]\n            }] } });\n\nclass NgbDatepickerNavigation {\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n    onClickPrev(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.PREV);\n    }\n    onClickNext(event) {\n        event.currentTarget.focus();\n        this.navigate.emit(this.navigation.NEXT);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerNavigation, deps: [{ token: NgbDatepickerI18n }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepickerNavigation, isStandalone: true, selector: \"ngb-datepicker-navigation\", inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, ngImport: i0, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t<ngb-datepicker-navigation-select\n\t\t\t*ngIf=\"showSelect\"\n\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t[date]=\"date\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t(select)=\"select.emit($event)\"\n\t\t>\n\t\t</ngb-datepicker-navigation-select>\n\n\t\t<ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t</div>\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n\t\t</ng-template>\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: NgbDatepickerNavigationSelect, selector: \"ngb-datepicker-navigation-select\", inputs: [\"date\", \"disabled\", \"months\", \"years\"], outputs: [\"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerNavigation, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-navigation', standalone: true, imports: [NgIf, NgFor, NgbDatepickerNavigationSelect], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-prev\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickPrev($event)\"\n\t\t\t\t[disabled]=\"prevDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.previous-month\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.previous-month\"\n\t\t\t\ttitle=\"Previous month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t\t<ngb-datepicker-navigation-select\n\t\t\t*ngIf=\"showSelect\"\n\t\t\tclass=\"ngb-dp-navigation-select\"\n\t\t\t[date]=\"date\"\n\t\t\t[disabled]=\"disabled\"\n\t\t\t[months]=\"selectBoxes.months\"\n\t\t\t[years]=\"selectBoxes.years\"\n\t\t\t(select)=\"select.emit($event)\"\n\t\t>\n\t\t</ngb-datepicker-navigation-select>\n\n\t\t<ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n\t\t\t<div class=\"ngb-dp-month-name\">\n\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t</div>\n\t\t\t<div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n\t\t</ng-template>\n\t\t<div class=\"ngb-dp-arrow ngb-dp-arrow-next\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn btn-link ngb-dp-arrow-btn\"\n\t\t\t\t(click)=\"onClickNext($event)\"\n\t\t\t\t[disabled]=\"nextDisabled\"\n\t\t\t\ti18n-aria-label=\"@@ngb.datepicker.next-month\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\ti18n-title=\"@@ngb.datepicker.next-month\"\n\t\t\t\ttitle=\"Next month\"\n\t\t\t>\n\t\t\t\t<span class=\"ngb-dp-navigation-chevron\"></span>\n\t\t\t</button>\n\t\t</div>\n\t`, styles: [\"ngb-datepicker-navigation{display:flex;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;transform:rotate(-135deg)}.ngb-dp-arrow{display:flex;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow-next{justify-content:flex-end}.ngb-dp-arrow-next .ngb-dp-navigation-chevron{transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:flex;flex:1 1 9rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }]; }, propDecorators: { date: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], months: [{\n                type: Input\n            }], showSelect: [{\n                type: Input\n            }], prevDisabled: [{\n                type: Input\n            }], nextDisabled: [{\n                type: Input\n            }], selectBoxes: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], select: [{\n                type: Output\n            }] } });\n\nvar Key;\n(function (Key) {\n    Key[Key[\"Tab\"] = 9] = \"Tab\";\n    Key[Key[\"Enter\"] = 13] = \"Enter\";\n    Key[Key[\"Escape\"] = 27] = \"Escape\";\n    Key[Key[\"Space\"] = 32] = \"Space\";\n    Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n    Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n    Key[Key[\"End\"] = 35] = \"End\";\n    Key[Key[\"Home\"] = 36] = \"Home\";\n    Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\nclass NgbDatepickerKeyboardService {\n    /**\n     * Processes a keyboard event.\n     */\n    processKey(event, datepicker) {\n        const { state, calendar } = datepicker;\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.PageUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.PageDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n                break;\n            case Key.End:\n                datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n                break;\n            case Key.Home:\n                datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n                break;\n            case Key.ArrowLeft:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowUp:\n                datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.ArrowRight:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n                break;\n            case Key.ArrowDown:\n                datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n                break;\n            case Key.Enter:\n            case Key.Space:\n                datepicker.focusSelect();\n                break;\n            default:\n                return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerKeyboardService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerKeyboardService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerKeyboardService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekNumbers = false;\n        this.weekdays = TranslationWidth.Short;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\nclass NgbDateAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }]\n        }] });\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    fromModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? { year: date.year, month: date.month, day: date.day }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\nclass NgbDatepickerContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepickerContent, isStandalone: true, selector: \"ng-template[ngbDatepickerContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbDatepickerContent]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\nclass NgbDatepickerMonth {\n    /**\n     * The first date of month to be rendered.\n     *\n     * This month must one of the months present in the\n     * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n     */\n    set month(month) {\n        this.viewModel = this._service.getMonth(month);\n    }\n    constructor(i18n, datepicker, _keyboardService, _service) {\n        this.i18n = i18n;\n        this.datepicker = datepicker;\n        this._keyboardService = _keyboardService;\n        this._service = _service;\n    }\n    onKeyDown(event) {\n        this._keyboardService.processKey(event, this.datepicker);\n    }\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.datepicker.onDateSelect(day.date);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerMonth, deps: [{ token: NgbDatepickerI18n }, { token: forwardRef(() => NgbDatepicker) }, { token: NgbDatepickerKeyboardService }, { token: NgbDatepickerService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepickerMonth, isStandalone: true, selector: \"ngb-datepicker-month\", inputs: { month: \"month\" }, host: { attributes: { \"role\": \"grid\" }, listeners: { \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n\t\t<div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{\n\t\t\t\ti18n.getWeekLabel()\n\t\t\t}}</div>\n\t\t\t<div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{\n\t\t\t\tweekday\n\t\t\t}}</div>\n\t\t</div>\n\t\t<ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n\t\t\t<div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{\n\t\t\t\t\ti18n.getWeekNumerals(week.number)\n\t\t\t\t}}</div>\n\t\t\t\t<div\n\t\t\t\t\t*ngFor=\"let day of week.days\"\n\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template [ngIf]=\"!day.hidden\">\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"datepicker.dayTemplate\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"day.context\"\n\t\t\t\t\t\t></ng-template>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`, isInline: true, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerMonth, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-datepicker-month', standalone: true, imports: [NgIf, NgFor, NgTemplateOutlet], host: { role: 'grid', '(keydown)': 'onKeyDown($event)' }, encapsulation: ViewEncapsulation.None, template: `\n\t\t<div *ngIf=\"viewModel.weekdays.length > 0\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek small\">{{\n\t\t\t\ti18n.getWeekLabel()\n\t\t\t}}</div>\n\t\t\t<div *ngFor=\"let weekday of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">{{\n\t\t\t\tweekday\n\t\t\t}}</div>\n\t\t</div>\n\t\t<ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n\t\t\t<div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n\t\t\t\t<div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{\n\t\t\t\t\ti18n.getWeekNumerals(week.number)\n\t\t\t\t}}</div>\n\t\t\t\t<div\n\t\t\t\t\t*ngFor=\"let day of week.days\"\n\t\t\t\t\t(click)=\"doSelect(day); $event.preventDefault()\"\n\t\t\t\t\tclass=\"ngb-dp-day\"\n\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t[class.disabled]=\"day.context.disabled\"\n\t\t\t\t\t[tabindex]=\"day.tabindex\"\n\t\t\t\t\t[class.hidden]=\"day.hidden\"\n\t\t\t\t\t[class.ngb-dp-today]=\"day.context.today\"\n\t\t\t\t\t[attr.aria-label]=\"day.ariaLabel\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template [ngIf]=\"!day.hidden\">\n\t\t\t\t\t\t<ng-template\n\t\t\t\t\t\t\t[ngTemplateOutlet]=\"datepicker.dayTemplate\"\n\t\t\t\t\t\t\t[ngTemplateOutletContext]=\"day.context\"\n\t\t\t\t\t\t></ng-template>\n\t\t\t\t\t</ng-template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t`, styles: [\"ngb-datepicker-month{display:block}.ngb-dp-weekday,.ngb-dp-week-number{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:var(--bs-info)}.ngb-dp-week{border-radius:.25rem;display:flex}.ngb-dp-weekdays{border-bottom:1px solid var(--bs-border-color);border-radius:0;background-color:var(--bs-light)}.ngb-dp-day,.ngb-dp-weekday,.ngb-dp-week-number{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default;pointer-events:none}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerI18n }, { type: NgbDatepicker, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbDatepicker)]\n                }] }, { type: NgbDatepickerKeyboardService }, { type: NgbDatepickerService }]; }, propDecorators: { month: [{\n                type: Input\n            }] } });\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    constructor(_service, _calendar, _i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        this._service = _service;\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        this.injector = inject(Injector);\n        this._controlValue = null;\n        this._destroyed$ = new Subject();\n        this._publicState = {};\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 5.2.0\n         */\n        this.dateSelect = new EventEmitter();\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        [\n            'contentTemplate',\n            'dayTemplate',\n            'dayTemplateData',\n            'displayMonths',\n            'firstDayOfWeek',\n            'footerTemplate',\n            'markDisabled',\n            'minDate',\n            'maxDate',\n            'navigation',\n            'outsideDays',\n            'showWeekNumbers',\n            'startDate',\n            'weekdays',\n        ].forEach((input) => (this[input] = config[input]));\n        _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe((date) => {\n            this.dateSelect.emit(date);\n        });\n        _service.model$.pipe(takeUntil(this._destroyed$)).subscribe((model) => {\n            const newDate = model.firstDate;\n            const oldDate = this.model ? this.model.firstDate : null;\n            // update public state\n            this._publicState = {\n                maxDate: model.maxDate,\n                minDate: model.minDate,\n                firstDate: model.firstDate,\n                lastDate: model.lastDate,\n                focusedDate: model.focusDate,\n                months: model.months.map((viewModel) => viewModel.firstDate),\n            };\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: () => (navigationPrevented = true),\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            const newSelectedDate = model.selectedDate;\n            const newFocusedDate = model.focusDate;\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            cd.markForCheck();\n        });\n    }\n    /**\n     *  Returns the readonly public state of the datepicker\n     *\n     * @since 5.2.0\n     */\n    get state() {\n        return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n    get calendar() {\n        return this._calendar;\n    }\n    /**\n     * Returns the i18n service used in the specific datepicker instance.\n     *\n     * @since 14.2.0\n     */\n    get i18n() {\n        return this._i18n;\n    }\n    /**\n     *  Focuses on given date.\n     */\n    focusDate(date) {\n        this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n    focusSelect() {\n        this._service.focusSelect();\n    }\n    focus() {\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? (date.day ? date : { ...date, day: 1 }) : null));\n    }\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(() => {\n            const focusIns$ = fromEvent(this._contentEl.nativeElement, 'focusin');\n            const focusOuts$ = fromEvent(this._contentEl.nativeElement, 'focusout');\n            const { nativeElement } = this._elementRef;\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter(({ target, relatedTarget }) => !(hasClassName(target, 'ngb-dp-day') &&\n                hasClassName(relatedTarget, 'ngb-dp-day') &&\n                nativeElement.contains(target) &&\n                nativeElement.contains(relatedTarget))), takeUntil(this._destroyed$))\n                .subscribe(({ type }) => this._ngZone.run(() => this._service.set({ focusVisible: type === 'focusin' })));\n        });\n    }\n    ngOnDestroy() {\n        this._destroyed$.next();\n    }\n    ngOnInit() {\n        if (this.model === undefined) {\n            const inputs = {};\n            [\n                'dayTemplateData',\n                'displayMonths',\n                'markDisabled',\n                'firstDayOfWeek',\n                'navigation',\n                'minDate',\n                'maxDate',\n                'outsideDays',\n                'weekdays',\n            ].forEach((name) => (inputs[name] = this[name]));\n            this._service.set(inputs);\n            this.navigateTo(this.startDate);\n        }\n        if (!this.dayTemplate) {\n            this.dayTemplate = this._defaultDayTemplate;\n        }\n    }\n    ngOnChanges(changes) {\n        const inputs = {};\n        [\n            'dayTemplateData',\n            'displayMonths',\n            'markDisabled',\n            'firstDayOfWeek',\n            'navigation',\n            'minDate',\n            'maxDate',\n            'outsideDays',\n            'weekdays',\n        ]\n            .filter((name) => name in changes)\n            .forEach((name) => (inputs[name] = this[name]));\n        this._service.set(inputs);\n        if ('startDate' in changes) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    onNavigateDateSelect(date) {\n        this._service.open(date);\n    }\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(disabled) {\n        this._service.set({ disabled });\n    }\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepicker, deps: [{ token: NgbDatepickerService }, { token: NgbCalendar }, { token: NgbDatepickerI18n }, { token: NgbDatepickerConfig }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: NgbDateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDatepicker, isStandalone: true, selector: \"ngb-datepicker\", inputs: { contentTemplate: \"contentTemplate\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", weekdays: \"weekdays\" }, outputs: { navigate: \"navigate\", dateSelect: \"dateSelect\" }, host: { properties: { \"class.disabled\": \"model.disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n            NgbDatepickerService,\n        ], queries: [{ propertyName: \"contentTemplateFromContent\", first: true, predicate: NgbDatepickerContent, descendants: true, static: true }], viewQueries: [{ propertyName: \"_defaultDayTemplate\", first: true, predicate: [\"defaultDayTemplate\"], descendants: true, static: true }, { propertyName: \"_contentEl\", first: true, predicate: [\"content\"], descendants: true, static: true }], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t<div *ngFor=\"let month of model.months; let i = index\" class=\"ngb-dp-month\">\n\t\t\t\t<div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t<ngb-datepicker-navigation\n\t\t\t\t*ngIf=\"navigation !== 'none'\"\n\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t[months]=\"model.months\"\n\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t>\n\t\t\t</ngb-datepicker-navigation>\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t></ng-template>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n\t`, isInline: true, styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: NgbDatepickerDayView, selector: \"[ngbDatepickerDayView]\", inputs: [\"currentMonth\", \"date\", \"disabled\", \"focused\", \"selected\"] }, { kind: \"component\", type: NgbDatepickerMonth, selector: \"ngb-datepicker-month\", inputs: [\"month\"] }, { kind: \"component\", type: NgbDatepickerNavigation, selector: \"ngb-datepicker-navigation\", inputs: [\"date\", \"disabled\", \"months\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\"], outputs: [\"navigate\", \"select\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbDatepicker', selector: 'ngb-datepicker', standalone: true, imports: [NgIf, NgFor, NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerMonth, NgbDatepickerNavigation], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: { '[class.disabled]': 'model.disabled' }, template: `\n\t\t<ng-template\n\t\t\t#defaultDayTemplate\n\t\t\tlet-date=\"date\"\n\t\t\tlet-currentMonth=\"currentMonth\"\n\t\t\tlet-selected=\"selected\"\n\t\t\tlet-disabled=\"disabled\"\n\t\t\tlet-focused=\"focused\"\n\t\t>\n\t\t\t<div\n\t\t\t\tngbDatepickerDayView\n\t\t\t\t[date]=\"date\"\n\t\t\t\t[currentMonth]=\"currentMonth\"\n\t\t\t\t[selected]=\"selected\"\n\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t[focused]=\"focused\"\n\t\t\t>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<ng-template #defaultContentTemplate>\n\t\t\t<div *ngFor=\"let month of model.months; let i = index\" class=\"ngb-dp-month\">\n\t\t\t\t<div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n\t\t\t\t\t{{ i18n.getMonthLabel(month.firstDate) }}\n\t\t\t\t</div>\n\t\t\t\t<ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t\t<div class=\"ngb-dp-header\">\n\t\t\t<ngb-datepicker-navigation\n\t\t\t\t*ngIf=\"navigation !== 'none'\"\n\t\t\t\t[date]=\"model.firstDate!\"\n\t\t\t\t[months]=\"model.months\"\n\t\t\t\t[disabled]=\"model.disabled\"\n\t\t\t\t[showSelect]=\"model.navigation === 'select'\"\n\t\t\t\t[prevDisabled]=\"model.prevDisabled\"\n\t\t\t\t[nextDisabled]=\"model.nextDisabled\"\n\t\t\t\t[selectBoxes]=\"model.selectBoxes\"\n\t\t\t\t(navigate)=\"onNavigateEvent($event)\"\n\t\t\t\t(select)=\"onNavigateDateSelect($event)\"\n\t\t\t>\n\t\t\t</ngb-datepicker-navigation>\n\t\t</div>\n\n\t\t<div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"contentTemplate || contentTemplateFromContent?.templateRef || defaultContentTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: this }\"\n\t\t\t\t[ngTemplateOutletInjector]=\"injector\"\n\t\t\t></ng-template>\n\t\t</div>\n\n\t\t<ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n\t`, providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbDatepicker), multi: true },\n                        NgbDatepickerService,\n                    ], styles: [\"ngb-datepicker{border:1px solid var(--bs-border-color);border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}ngb-datepicker.disabled .ngb-dp-weekday,ngb-datepicker.disabled .ngb-dp-week-number,ngb-datepicker.disabled .ngb-dp-month-name{color:var(--bs-text-muted)}.ngb-dp-body{z-index:1055}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:var(--bs-light)}.ngb-dp-months{display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:var(--bs-light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbDatepickerService }, { type: NgbCalendar }, { type: NgbDatepickerI18n }, { type: NgbDatepickerConfig }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: NgbDateAdapter }, { type: i0.NgZone }]; }, propDecorators: { _defaultDayTemplate: [{\n                type: ViewChild,\n                args: ['defaultDayTemplate', { static: true }]\n            }], _contentEl: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], contentTemplate: [{\n                type: Input\n            }], contentTemplateFromContent: [{\n                type: ContentChild,\n                args: [NgbDatepickerContent, { static: true }]\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], navigate: [{\n                type: Output\n            }], dateSelect: [{\n                type: Output\n            }] } });\n\nconst isContainedIn = (element, array) => array ? array.some((item) => item.contains(element)) : false;\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n    const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n        (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n    const isAndroid = () => /Android/.test(navigator.userAgent);\n    return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = (fn) => (isMobile ? () => setTimeout(() => fn(), 100) : fn);\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(wrapAsyncForMobile(() => {\n            const shouldCloseOnClick = (event) => {\n                const element = event.target;\n                if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                } /* if (type === true) */\n                else {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            const escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter((e) => e.which === Key.Escape), tap((e) => e.preventDefault()));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n            // because on 'mouseup' DOM nodes might be detached\n            const mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            const closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0), takeUntil(closed$));\n            race([escapes$.pipe(map((_) => 0 /* SOURCE.ESCAPE */)), closeableClicks$.pipe(map((_) => 1 /* SOURCE.CLICK */))]).subscribe((source) => zone.run(() => close(source)));\n        }));\n    }\n}\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]',\n    'button:not([disabled])',\n    'input:not([disabled]):not([type=\"hidden\"])',\n    'select:not([disabled])',\n    'textarea:not([disabled])',\n    '[contenteditable]',\n    '[tabindex]:not([tabindex=\"-1\"])',\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nfunction getFocusableBoundaryElements(element) {\n    const list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter((el) => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nconst ngbFocusTrap = (zone, element, stopFocusTrap$, refocusOnClick = false) => {\n    zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map((e) => e.target));\n        // 'tab' / 'shift+tab' stream\n        fromEvent(element, 'keydown')\n            .pipe(takeUntil(stopFocusTrap$), \n        /* eslint-disable-next-line deprecation/deprecation */\n        filter((e) => e.which === Key.Tab), withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n            const [first, last] = getFocusableBoundaryElements(element);\n            if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n            }\n            if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n            }\n        });\n        // inside click\n        if (refocusOnClick) {\n            fromEvent(element, 'click')\n                .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map((arr) => arr[1]))\n                .subscribe((lastFocusedElement) => lastFocusedElement.focus());\n        }\n    });\n};\n\nclass NgbRTL {\n    constructor(document) {\n        this._element = document.documentElement;\n    }\n    isRTL() {\n        return (this._element.getAttribute('dir') || '').toLowerCase() === 'rtl';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRTL, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRTL, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRTL, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nconst placementSeparator = /\\s+/;\nconst spacesRegExp = /  +/gi;\n/**\n * Matching classes from the Bootstrap ones to the poppers ones.\n * The first index of each array is used for the left to right direction,\n * the second one is used for the right to left, defaulting to the first index (when LTR and RTL lead to the same class)\n *\n * See [Bootstrap alignments](https://getbootstrap.com/docs/5.1/components/dropdowns/#alignment-options)\n * and [Popper placements](https://popper.js.org/docs/v2/constructors/#options)\n */\nconst bootstrapPopperMatches = {\n    top: ['top'],\n    bottom: ['bottom'],\n    start: ['left', 'right'],\n    left: ['left'],\n    end: ['right', 'left'],\n    right: ['right'],\n    'top-start': ['top-start', 'top-end'],\n    'top-left': ['top-start'],\n    'top-end': ['top-end', 'top-start'],\n    'top-right': ['top-end'],\n    'bottom-start': ['bottom-start', 'bottom-end'],\n    'bottom-left': ['bottom-start'],\n    'bottom-end': ['bottom-end', 'bottom-start'],\n    'bottom-right': ['bottom-end'],\n    'start-top': ['left-start', 'right-start'],\n    'left-top': ['left-start'],\n    'start-bottom': ['left-end', 'right-end'],\n    'left-bottom': ['left-end'],\n    'end-top': ['right-start', 'left-start'],\n    'right-top': ['right-start'],\n    'end-bottom': ['right-end', 'left-end'],\n    'right-bottom': ['right-end'],\n};\nfunction getPopperClassPlacement(placement, isRTL) {\n    const [leftClass, rightClass] = bootstrapPopperMatches[placement];\n    return isRTL ? rightClass || leftClass : leftClass;\n}\nconst popperStartPrimaryPlacement = /^left/;\nconst popperEndPrimaryPlacement = /^right/;\nconst popperStartSecondaryPlacement = /^start/;\nconst popperEndSecondaryPlacement = /^end/;\nfunction getBootstrapBaseClassPlacement(baseClass, placement) {\n    let [primary, secondary] = placement.split('-');\n    const newPrimary = primary.replace(popperStartPrimaryPlacement, 'start').replace(popperEndPrimaryPlacement, 'end');\n    let classnames = [newPrimary];\n    if (secondary) {\n        let newSecondary = secondary;\n        if (primary === 'left' || primary === 'right') {\n            newSecondary = newSecondary\n                .replace(popperStartSecondaryPlacement, 'top')\n                .replace(popperEndSecondaryPlacement, 'bottom');\n        }\n        classnames.push(`${newPrimary}-${newSecondary}`);\n    }\n    if (baseClass) {\n        classnames = classnames.map((classname) => `${baseClass}-${classname}`);\n    }\n    return classnames.join(' ');\n}\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'start', 'end',\n *   'top-start', 'top-end',\n *   'bottom-start', 'bottom-end',\n *   'start-top', 'start-bottom',\n *   'end-top', 'end-bottom'.\n * */\nfunction getPopperOptions({ placement, baseClass }, rtl) {\n    let placementVals = Array.isArray(placement)\n        ? placement\n        : placement.split(placementSeparator);\n    // No need to consider left and right here, as start and end are enough, and it is used for 'auto' placement only\n    const allowedPlacements = [\n        'top',\n        'bottom',\n        'start',\n        'end',\n        'top-start',\n        'top-end',\n        'bottom-start',\n        'bottom-end',\n        'start-top',\n        'start-bottom',\n        'end-top',\n        'end-bottom',\n    ];\n    // replace auto placement with other placements\n    let hasAuto = placementVals.findIndex((val) => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, obj);\n            }\n        });\n    }\n    const popperPlacements = placementVals.map((_placement) => {\n        return getPopperClassPlacement(_placement, rtl.isRTL());\n    });\n    let mainPlacement = popperPlacements.shift();\n    const bsModifier = {\n        name: 'bootstrapClasses',\n        enabled: !!baseClass,\n        phase: 'write',\n        fn({ state }) {\n            const bsClassRegExp = new RegExp(baseClass + '(-[a-z]+)*', 'gi');\n            const popperElement = state.elements.popper;\n            const popperPlacement = state.placement;\n            let className = popperElement.className;\n            // Remove old bootstrap classes\n            className = className.replace(bsClassRegExp, '');\n            // Add current placements\n            className += ` ${getBootstrapBaseClassPlacement(baseClass, popperPlacement)}`;\n            // Remove multiple spaces\n            className = className.trim().replace(spacesRegExp, ' ');\n            // Reassign\n            popperElement.className = className;\n        },\n    };\n    return {\n        placement: mainPlacement,\n        modifiers: [\n            bsModifier,\n            flip,\n            preventOverflow,\n            arrow,\n            {\n                enabled: true,\n                name: 'flip',\n                options: {\n                    fallbackPlacements: popperPlacements,\n                },\n            },\n            {\n                enabled: true,\n                name: 'preventOverflow',\n                phase: 'main',\n                fn: function () { },\n            },\n        ],\n    };\n}\nfunction noop(arg) {\n    return arg;\n}\nfunction ngbPositioning() {\n    const rtl = inject(NgbRTL);\n    let popperInstance = null;\n    return {\n        createPopper(positioningOption) {\n            if (!popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance = createPopperLite(positioningOption.hostElement, positioningOption.targetElement, popperOptions);\n            }\n        },\n        update() {\n            if (popperInstance) {\n                popperInstance.update();\n            }\n        },\n        setOptions(positioningOption) {\n            if (popperInstance) {\n                const updatePopperOptions = positioningOption.updatePopperOptions || noop;\n                let popperOptions = updatePopperOptions(getPopperOptions(positioningOption, rtl));\n                popperInstance.setOptions(popperOptions);\n            }\n        },\n        destroy() {\n            if (popperInstance) {\n                popperInstance.destroy();\n                popperInstance = null;\n            }\n        },\n    };\n}\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbInputDatepickerConfig extends NgbDatepickerConfig {\n    constructor() {\n        super(...arguments);\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n        this.restoreFocus = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbInputDatepickerConfig, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbInputDatepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbInputDatepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction addPopperOffset(offset$1) {\n    return (options) => {\n        options.modifiers.push(offset, {\n            name: 'offset',\n            options: {\n                offset: () => offset$1,\n            },\n        });\n        return options;\n    };\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\nclass NgbDateParserFormatter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateParserFormatter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateParserFormatter, providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateParserFormatter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }]\n        }] });\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    parse(value) {\n        if (value != null) {\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    format(date) {\n        return date\n            ? `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}`\n            : '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateISOParserFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateISOParserFormatter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateISOParserFormatter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    constructor(_parserFormatter, _elRef, _vcRef, _renderer, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._calendar = _calendar;\n        this._dateAdapter = _dateAdapter;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._cRef = null;\n        this._disabled = false;\n        this._elWithFocus = null;\n        this._model = null;\n        this._destroyCloseHandlers$ = new Subject();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * @since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * @since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._validatorChange = () => { };\n        ['autoClose', 'container', 'positionTarget', 'placement', 'popperOptions'].forEach((input) => (this[input] = config[input]));\n        this._positioning = ngbPositioning();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this._validatorChange = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    validate(c) {\n        const { value } = c;\n        if (value != null) {\n            const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n            if (!ngbDate) {\n                return { ngbDate: { invalid: value } };\n            }\n            if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n                return { ngbDate: { minDate: { minDate: this.minDate, actual: value } } };\n            }\n            if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n                return { ngbDate: { maxDate: { maxDate: this.maxDate, actual: value } } };\n            }\n        }\n        return null;\n    }\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    manualDateChange(value, updateView = false) {\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    isOpen() {\n        return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n    open() {\n        if (!this.isOpen()) {\n            this._cRef = this._vcRef.createComponent(NgbDatepicker);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            });\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            this._elWithFocus = this._document.activeElement;\n            ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n            setTimeout(() => this._cRef?.instance.focus());\n            let hostElement;\n            if (isString(this.positionTarget)) {\n                hostElement = this._document.querySelector(this.positionTarget);\n            }\n            else if (this.positionTarget instanceof HTMLElement) {\n                hostElement = this.positionTarget;\n            }\n            else {\n                hostElement = this._elRef.nativeElement;\n            }\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._cRef) {\n                    this._positioning.createPopper({\n                        hostElement,\n                        targetElement: this._cRef.location.nativeElement,\n                        placement: this.placement,\n                        appendToBody: this.container === 'body',\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                }\n            });\n            if (this.positionTarget && !hostElement) {\n                throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n            }\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n    close() {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n            this._positioning.destroy();\n            this._zoneSubscription?.unsubscribe();\n            this._destroyCloseHandlers$.next();\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n            // restore focus\n            let elementToFocus = this._elWithFocus;\n            if (isString(this.restoreFocus)) {\n                elementToFocus = this._document.querySelector(this.restoreFocus);\n            }\n            else if (this.restoreFocus !== undefined) {\n                elementToFocus = this.restoreFocus;\n            }\n            // in IE document.activeElement can contain an object without 'focus()' sometimes\n            if (elementToFocus && elementToFocus['focus']) {\n                elementToFocus.focus();\n            }\n            else {\n                this._document.body.focus();\n            }\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    onBlur() {\n        this._onTouched();\n    }\n    onFocus() {\n        this._elWithFocus = this._elRef.nativeElement;\n    }\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n            if (this.isOpen()) {\n                if (changes['minDate']) {\n                    this._cRef.instance.minDate = this.minDate;\n                }\n                if (changes['maxDate']) {\n                    this._cRef.instance.maxDate = this.maxDate;\n                }\n                this._cRef.instance.ngOnChanges(changes);\n            }\n        }\n        if (changes['datepickerClass']) {\n            const { currentValue, previousValue } = changes['datepickerClass'];\n            this._applyPopupClass(currentValue, previousValue);\n        }\n        if (changes['autoClose'] && this.isOpen()) {\n            this._setCloseHandlers();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    _applyDatepickerInputs(datepickerComponentRef) {\n        [\n            'contentTemplate',\n            'dayTemplate',\n            'dayTemplateData',\n            'displayMonths',\n            'firstDayOfWeek',\n            'footerTemplate',\n            'markDisabled',\n            'minDate',\n            'maxDate',\n            'navigation',\n            'outsideDays',\n            'showNavigation',\n            'showWeekNumbers',\n            'weekdays',\n        ].forEach((inputName) => {\n            if (this[inputName] !== undefined) {\n                datepickerComponentRef.setInput(inputName, this[inputName]);\n            }\n        });\n        datepickerComponentRef.setInput('startDate', this.startDate || this._model);\n    }\n    _applyPopupClass(newClass, oldClass) {\n        const popupEl = this._cRef?.location.nativeElement;\n        if (popupEl) {\n            if (newClass) {\n                this._renderer.addClass(popupEl, newClass);\n            }\n            if (oldClass) {\n                this._renderer.removeClass(popupEl, oldClass);\n            }\n        }\n    }\n    _applyPopupStyling(nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.addClass(nativeElement, 'show');\n        if (this.container === 'body') {\n            this._renderer.addClass(nativeElement, 'ngb-dp-body');\n        }\n        this._applyPopupClass(this.datepickerClass);\n    }\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe((navigateEvent) => this.navigate.emit(navigateEvent));\n        datepickerInstance.dateSelect.subscribe((date) => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        });\n    }\n    _writeModelValue(model) {\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    _fromDateStruct(date) {\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next();\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._destroyCloseHandlers$, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbInputDatepicker, deps: [{ token: NgbDateParserFormatter }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: NgbCalendar }, { token: NgbDateAdapter }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: NgbInputDatepickerConfig }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbInputDatepicker, isStandalone: true, selector: \"input[ngbDatepicker]\", inputs: { autoClose: \"autoClose\", contentTemplate: \"contentTemplate\", datepickerClass: \"datepickerClass\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", placement: \"placement\", popperOptions: \"popperOptions\", restoreFocus: \"restoreFocus\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\", weekdays: \"weekdays\", disabled: \"disabled\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, host: { listeners: { \"input\": \"manualDateChange($event.target.value)\", \"change\": \"manualDateChange($event.target.value, true)\", \"focus\": \"onFocus()\", \"blur\": \"onBlur()\" }, properties: { \"disabled\": \"disabled\" } }, providers: [\n            { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n            { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n        ], exportAs: [\"ngbDatepicker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbInputDatepicker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbDatepicker]',\n                    exportAs: 'ngbDatepicker',\n                    standalone: true,\n                    host: {\n                        '(input)': 'manualDateChange($event.target.value)',\n                        '(change)': 'manualDateChange($event.target.value, true)',\n                        '(focus)': 'onFocus()',\n                        '(blur)': 'onBlur()',\n                        '[disabled]': 'disabled',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NG_VALIDATORS, useExisting: forwardRef(() => NgbInputDatepicker), multi: true },\n                        { provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: NgbDateParserFormatter }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: NgbCalendar }, { type: NgbDateAdapter }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }, { type: NgbInputDatepickerConfig }]; }, propDecorators: { autoClose: [{\n                type: Input\n            }], contentTemplate: [{\n                type: Input\n            }], datepickerClass: [{\n                type: Input\n            }], dayTemplate: [{\n                type: Input\n            }], dayTemplateData: [{\n                type: Input\n            }], displayMonths: [{\n                type: Input\n            }], firstDayOfWeek: [{\n                type: Input\n            }], footerTemplate: [{\n                type: Input\n            }], markDisabled: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], outsideDays: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], showWeekNumbers: [{\n                type: Input\n            }], startDate: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], weekdays: [{\n                type: Input\n            }], dateSelect: [{\n                type: Output\n            }], navigate: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass NgbCalendarHijri extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return this.fromGregorian(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isNumber(date.year) &&\n            isNumber(date.month) &&\n            isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime()));\n    }\n    _setDay(date, day) {\n        day = +day;\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n        return date;\n    }\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHijri, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHijri }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHijri, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear$1(gDate) {\n    const year = gDate.getFullYear();\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n        let julianDay = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (gYear - 1) +\n            Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) +\n            Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        const days = julianDay - ISLAMIC_EPOCH;\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH$1, quadricent = Math.floor(depoch / 146097), dqc = mod$1(depoch, 146097), cent = Math.floor(dqc / 36524), dcent = mod$1(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod$1(dcent, 1461), yindex = Math.floor(dquad / 365);\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        const gYearStart = GREGORIAN_EPOCH$1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        const yearday = wjd - gYearStart;\n        const tjd = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor(739 / 12 + (isGregorianLeapYear$1(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear$1(new Date(year, 3, 1)) ? 1 : 2;\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        const tjd2 = GREGORIAN_EPOCH$1 -\n            1 +\n            365 * (year - 1) +\n            Math.floor((year - 1) / 4) -\n            Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear$1(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        let length = 29 + (month % 2);\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicCivil, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicCivil }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicCivil, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010',\n    '110101010100',\n    '111011001001',\n    '011011010100',\n    '011011101010',\n    // 1305-1309\n    '001101101100',\n    '101010101101',\n    '010101010101',\n    '011010101001',\n    '011110010010',\n    // 1310-1314\n    '101110101001',\n    '010111010100',\n    '101011011010',\n    '010101011100',\n    '110100101101',\n    // 1315-1319\n    '011010010101',\n    '011101001010',\n    '101101010100',\n    '101101101010',\n    '010110101101',\n    // 1320-1324\n    '010010101110',\n    '101001001111',\n    '010100010111',\n    '011010001011',\n    '011010100101',\n    // 1325-1329\n    '101011010101',\n    '001011010110',\n    '100101011011',\n    '010010011101',\n    '101001001101',\n    // 1330-1334\n    '110100100110',\n    '110110010101',\n    '010110101100',\n    '100110110110',\n    '001010111010',\n    // 1335-1339\n    '101001011011',\n    '010100101011',\n    '101010010101',\n    '011011001010',\n    '101011101001',\n    // 1340-1344\n    '001011110100',\n    '100101110110',\n    '001010110110',\n    '100101010110',\n    '101011001010',\n    // 1345-1349\n    '101110100100',\n    '101111010010',\n    '010111011001',\n    '001011011100',\n    '100101101101',\n    // 1350-1354\n    '010101001101',\n    '101010100101',\n    '101101010010',\n    '101110100101',\n    '010110110100',\n    // 1355-1359\n    '100110110110',\n    '010101010111',\n    '001010010111',\n    '010101001011',\n    '011010100011',\n    // 1360-1364\n    '011101010010',\n    '101101100101',\n    '010101101010',\n    '101010101011',\n    '010100101011',\n    // 1365-1369\n    '110010010101',\n    '110101001010',\n    '110110100101',\n    '010111001010',\n    '101011010110',\n    // 1370-1374\n    '100101010111',\n    '010010101011',\n    '100101001011',\n    '101010100101',\n    '101101010010',\n    // 1375-1379\n    '101101101010',\n    '010101110101',\n    '001001110110',\n    '100010110111',\n    '010001011011',\n    // 1380-1384\n    '010101010101',\n    '010110101001',\n    '010110110100',\n    '100111011010',\n    '010011011101',\n    // 1385-1389\n    '001001101110',\n    '100100110110',\n    '101010101010',\n    '110101010100',\n    '110110110010',\n    // 1390-1394\n    '010111010101',\n    '001011011010',\n    '100101011011',\n    '010010101011',\n    '101001010101',\n    // 1395-1399\n    '101101001001',\n    '101101100100',\n    '101101110001',\n    '010110110100',\n    '101010110101',\n    // 1400-1404\n    '101001010101',\n    '110100100101',\n    '111010010010',\n    '111011001001',\n    '011011010100',\n    // 1405-1409\n    '101011101001',\n    '100101101011',\n    '010010101011',\n    '101010010011',\n    '110101001001',\n    // 1410-1414\n    '110110100100',\n    '110110110010',\n    '101010111001',\n    '010010111010',\n    '101001011011',\n    // 1415-1419\n    '010100101011',\n    '101010010101',\n    '101100101010',\n    '101101010101',\n    '010101011100',\n    // 1420-1424\n    '010010111101',\n    '001000111101',\n    '100100011101',\n    '101010010101',\n    '101101001010',\n    // 1425-1429\n    '101101011010',\n    '010101101101',\n    '001010110110',\n    '100100111011',\n    '010010011011',\n    // 1430-1434\n    '011001010101',\n    '011010101001',\n    '011101010100',\n    '101101101010',\n    '010101101100',\n    // 1435-1439\n    '101010101101',\n    '010101010101',\n    '101100101001',\n    '101110010010',\n    '101110101001',\n    // 1440-1444\n    '010111010100',\n    '101011011010',\n    '010101011010',\n    '101010101011',\n    '010110010101',\n    // 1445-1449\n    '011101001001',\n    '011101100100',\n    '101110101010',\n    '010110110101',\n    '001010110110',\n    // 1450-1454\n    '101001010110',\n    '111001001101',\n    '101100100101',\n    '101101010010',\n    '101101101010',\n    // 1455-1459\n    '010110101101',\n    '001010101110',\n    '100100101111',\n    '010010010111',\n    '011001001011',\n    // 1460-1464\n    '011010100101',\n    '011010101100',\n    '101011010110',\n    '010101011101',\n    '010010011101',\n    // 1465-1469\n    '101001001101',\n    '110100010110',\n    '110110010101',\n    '010110101010',\n    '010110110101',\n    // 1470-1474\n    '001011011010',\n    '100101011011',\n    '010010101101',\n    '010110010101',\n    '011011001010',\n    // 1475-1479\n    '011011100100',\n    '101011101010',\n    '010011110101',\n    '001010110110',\n    '100101010110',\n    // 1480-1484\n    '101010101010',\n    '101101010100',\n    '101111010010',\n    '010111011001',\n    '001011101010',\n    // 1485-1489\n    '100101101101',\n    '010010101101',\n    '101010010101',\n    '101101001010',\n    '101110100101',\n    // 1490-1494\n    '010110110010',\n    '100110110101',\n    '010011010110',\n    '101010010111',\n    '010101000111',\n    // 1495-1499\n    '011010010011',\n    '011101001001',\n    '101101010101',\n    '010101101010',\n    '101001101011',\n    // 1500-1504\n    '010100101011',\n    '101010001011',\n    '110101000110',\n    '110110100011',\n    '010111001010',\n    // 1505-1509\n    '101011010110',\n    '010011011011',\n    '001001101011',\n    '100101001011',\n    '101010100101',\n    // 1510-1514\n    '101101010010',\n    '101101101001',\n    '010101110101',\n    '000101110110',\n    '100010110111',\n    // 1515-1519\n    '001001011011',\n    '010100101011',\n    '010101100101',\n    '010110110100',\n    '100111011010',\n    // 1520-1524\n    '010011101101',\n    '000101101101',\n    '100010110110',\n    '101010100110',\n    '110101010010',\n    // 1525-1529\n    '110110101001',\n    '010111010100',\n    '101011011010',\n    '100101011011',\n    '010010101011',\n    // 1530-1534\n    '011001010011',\n    '011100101001',\n    '011101100010',\n    '101110101001',\n    '010110110010',\n    // 1535-1539\n    '101010110101',\n    '010101010101',\n    '101100100101',\n    '110110010010',\n    '111011001001',\n    // 1540-1544\n    '011011010010',\n    '101011101001',\n    '010101101011',\n    '010010101011',\n    '101001010101',\n    // 1545-1549\n    '110100101001',\n    '110101010100',\n    '110110101010',\n    '100110110101',\n    '010010111010',\n    // 1550-1554\n    '101000111011',\n    '010010011011',\n    '101001001101',\n    '101010101010',\n    '101011010101',\n    // 1555-1559\n    '001011011010',\n    '100101011101',\n    '010001011110',\n    '101000101110',\n    '110010011010',\n    // 1560-1564\n    '110101010101',\n    '011010110010',\n    '011010111001',\n    '010010111010',\n    '101001011101',\n    // 1565-1569\n    '010100101101',\n    '101010010101',\n    '101101010010',\n    '101110101000',\n    '101110110100',\n    // 1570-1574\n    '010110111001',\n    '001011011010',\n    '100101011010',\n    '101101001010',\n    '110110100100',\n    // 1575-1579\n    '111011010001',\n    '011011101000',\n    '101101101010',\n    '010101101101',\n    '010100110101',\n    // 1580-1584\n    '011010010101',\n    '110101001010',\n    '110110101000',\n    '110111010100',\n    '011011011010',\n    // 1585-1589\n    '010101011011',\n    '001010011101',\n    '011000101011',\n    '101100010101',\n    '101101001010',\n    // 1590-1594\n    '101110010101',\n    '010110101010',\n    '101010101110',\n    '100100101110',\n    '110010001111',\n    // 1595-1599\n    '010100100111',\n    '011010010101',\n    '011010101010',\n    '101011010110',\n    '010101011101',\n    // 1600\n    '001010011101',\n];\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     */\n    fromGregorian(gDate) {\n        let hDay = 1, hMonth = 0, hYear = 1300;\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n            return null;\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     */\n    toGregorian(hDate) {\n        const hYear = hDate.year;\n        const hMonth = hDate.month - 1;\n        const hDay = hDate.day;\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicUmalqura, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicUmalqura }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarIslamicUmalqura, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nfunction toGregorian$2(jalaliDate) {\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nfunction fromGregorian$2(gdate) {\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor((((month - 1) % 12) + 12) % 12) + 1;\n    return date;\n}\nfunction setJalaliDay(date, day) {\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    let breaks = [\n        -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178,\n    ];\n    const breaksLength = breaks.length;\n    const gYear = jalaliYear + 621;\n    let leapJ = -14;\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n        jp = jm;\n    }\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n    if (mod(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    let leap = mod(mod(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber) {\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    const i = div(mod(j, 1461), 4) * 5 + 308;\n    const gDay = div(mod(i, 153), 5) + 1;\n    const gMonth = mod(div(i, 153), 12) + 1;\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber) {\n    let gy = julianToGregorian(julianDayNumber).getFullYear(), // Calculate Gregorian year (gy).\n    jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay, jalaliMonth, numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    let r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\nclass NgbCalendarPersian extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths() {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$2(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        const date = week[thursdayIndex];\n        const jsDate = toGregorian$2(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        const startDate = toGregorian$2(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    getToday() {\n        return fromGregorian$2(new Date());\n    }\n    isValid(date) {\n        return (date != null &&\n            isInteger(date.year) &&\n            isInteger(date.month) &&\n            isInteger(date.day) &&\n            !isNaN(toGregorian$2(date).getTime()));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarPersian, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarPersian }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarPersian, decorators: [{\n            type: Injectable\n        }] });\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\nfunction isGregorianLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\nfunction numberOfFirstDayInYear(year) {\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    let dayOfWeek = dayNumber % 7; // 0 == Monday\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\nfunction getDaysInGregorianMonth(month, year) {\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\nfunction isHebrewLeapYear(year) {\n    if (year != null) {\n        let b = (year * 12 + 17) % 19;\n        return b >= (b < 0 ? -7 : 12);\n    }\n    return false;\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewMonth(month, year) {\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    let yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n    let leapYear = isHebrewLeapYear(year);\n    let daysInMonth = leapYear\n        ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29]\n        : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\nfunction getDayNumberInHebrewYear(date) {\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\nfunction setHebrewMonth(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\nfunction setHebrewDay(date, val) {\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nfunction fromGregorian$1(gdate) {\n    const date = new Date(gdate);\n    const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n    let julianDay = GREGORIAN_EPOCH -\n        1 +\n        365 * (gYear - 1) +\n        Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) +\n        Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    let daysSinceHebEpoch = julianDay - 347997;\n    let monthsSinceHebEpoch = Math.floor((daysSinceHebEpoch * PARTS_PER_DAY) / PARTS_PER_MONTH);\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    let hMonth = 1;\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nfunction toGregorian$1(hebrewDate) {\n    const hYear = hebrewDate.year;\n    const hMonth = hebrewDate.month;\n    const hDay = hebrewDate.day;\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    let gYear = 1970;\n    let gMonth = 1;\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    const hArray10_19 = [\n        '\\u05d9',\n        '\\u05d9\\u05d0',\n        '\\u05d9\\u05d1',\n        '\\u05d9\\u05d2',\n        '\\u05d9\\u05d3',\n        '\\u05d8\\u05d5',\n        '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6',\n        '\\u05d9\\u05d7',\n        '\\u05d9\\u05d8',\n    ];\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    const hArray100_900 = [\n        '',\n        '\\u05e7',\n        '\\u05e8',\n        '\\u05e9',\n        '\\u05ea',\n        '\\u05ea\\u05e7',\n        '\\u05ea\\u05e8',\n        '\\u05ea\\u05e9',\n        '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7',\n    ];\n    const hArray1000_9000 = [\n        '',\n        '\\u05d0',\n        '\\u05d1',\n        '\\u05d1\\u05d0',\n        '\\u05d1\\u05d1',\n        '\\u05d4',\n        '\\u05d4\\u05d0',\n        '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0',\n        '\\u05d4\\u05d1\\u05d1',\n    ];\n    const geresh = '\\u05f3', gershaim = '\\u05f4';\n    let mem = 0;\n    let result = [];\n    let step = 0;\n    while (numerals > 0) {\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    getDaysPerWeek() {\n        return 7;\n    }\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    getWeeksPerMonth() {\n        return 6;\n    }\n    isValid(date) {\n        if (date != null) {\n            let b = isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n            b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n            b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n            return b && !isNaN(toGregorian$1(date).getTime());\n        }\n        return false;\n    }\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        const day = toGregorian$1(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    getToday() {\n        return fromGregorian$1(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n    toGregorian(date) {\n        return fromJSDate(toGregorian$1(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n    fromGregorian(date) {\n        return fromGregorian$1(toJSDate(date));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarHebrew, decorators: [{\n            type: Injectable\n        }] });\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP = [\n    'תשרי',\n    'חשון',\n    'כסלו',\n    'טבת',\n    'שבט',\n    'אדר א׳',\n    'אדר ב׳',\n    'ניסן',\n    'אייר',\n    'סיון',\n    'תמוז',\n    'אב',\n    'אלול',\n];\n/**\n * @since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    getMonthShortName(month, year) {\n        return this.getMonthFullName(month, year);\n    }\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] || '' : MONTHS[month - 1] || '';\n    }\n    getWeekdayLabel(weekday, width) {\n        return WEEKDAYS[weekday - 1] || '';\n    }\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    getDayNumerals(date) {\n        return hebrewNumerals(date.day);\n    }\n    getWeekNumerals(weekNumber) {\n        return hebrewNumerals(weekNumber);\n    }\n    getYearNumerals(year) {\n        return hebrewNumerals(year);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nHebrew, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nHebrew }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerI18nHebrew, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Returns the equivalent JS date value for a give input Buddhist date.\n * `date` is an Buddhist date to be converted to Gregorian.\n */\nfunction toGregorian(date) {\n    return new Date(date.year - 543, date.month - 1, date.day);\n}\n/**\n * Returns the equivalent Buddhist date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Buddhist.\n * utc to local\n */\nfunction fromGregorian(gdate) {\n    return new NgbDate(gdate.getFullYear() + 543, gdate.getMonth() + 1, gdate.getDate());\n}\n\n/**\n * @since 9.1.0\n */\nclass NgbCalendarBuddhist extends NgbCalendarGregorian {\n    getToday() {\n        return fromGregorian(new Date());\n    }\n    getNext(date, period = 'd', number = 1) {\n        let jsDate = toGregorian(date);\n        let checkMonth = true;\n        let expectedMonth = jsDate.getMonth();\n        switch (period) {\n            case 'y':\n                jsDate.setFullYear(jsDate.getFullYear() + number);\n                break;\n            case 'm':\n                expectedMonth += number;\n                jsDate.setMonth(expectedMonth);\n                expectedMonth = expectedMonth % 12;\n                if (expectedMonth < 0) {\n                    expectedMonth = expectedMonth + 12;\n                }\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                checkMonth = false;\n                break;\n            default:\n                return date;\n        }\n        if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n            // this means the destination month has less days than the initial month\n            // let's go back to the end of the previous month:\n            jsDate.setDate(0);\n        }\n        return fromGregorian(jsDate);\n    }\n    getPrev(date, period = 'd', number = 1) {\n        return this.getNext(date, period, -number);\n    }\n    getWeekday(date) {\n        let jsDate = toGregorian(date);\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        let date = week[thursdayIndex];\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        const jsDate = toGregorian(date);\n        return (!isNaN(jsDate.getTime()) &&\n            jsDate.getFullYear() === date.year - 543 &&\n            jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarBuddhist, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarBuddhist }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbCalendarBuddhist, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    fromModel(date) {\n        return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)\n            ? this._toNativeDate(date)\n            : null;\n    }\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeAdapter, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    _toNativeDate(date) {\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeUTCAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeUTCAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDateNativeUTCAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nconst NGB_DATEPICKER_DIRECTIVES = [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\nclass NgbDatepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerModule, imports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth], exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: NGB_DATEPICKER_DIRECTIVES,\n                    imports: NGB_DATEPICKER_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @deprecated 14.2.0 this directive isn't useful anymore. You can remove it from your imports\n */\nclass NgbNavbar {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavbar, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavbar, isStandalone: true, selector: \".navbar\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavbar, decorators: [{\n            type: Directive,\n            args: [{ selector: '.navbar', standalone: true }]\n        }] });\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\nclass NgbDropdownItem {\n    set disabled(value) {\n        this._disabled = value === '' || value === true; // accept an empty attribute as true\n        // note: we don't use a host binding for disabled because when used on links, it fails because links don't have a\n        // disabled property\n        // setting the property using the renderer, OTOH, works fine in both cases.\n        this._renderer.setProperty(this.elementRef.nativeElement, 'disabled', this._disabled);\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    constructor(elementRef, _renderer) {\n        this.elementRef = elementRef;\n        this._renderer = _renderer;\n        this._disabled = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownItem, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDropdownItem, isStandalone: true, selector: \"[ngbDropdownItem]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.disabled\": \"disabled\", \"tabIndex\": \"disabled ? -1 : 0\" }, classAttribute: \"dropdown-item\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownItem]',\n                    standalone: true,\n                    host: { class: 'dropdown-item', '[class.disabled]': 'disabled', '[tabIndex]': 'disabled ? -1 : 0' },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { disabled: [{\n                type: Input\n            }] } });\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this.placement = 'bottom';\n        this.isOpen = false;\n        this.nativeElement = _elementRef.nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownMenu, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDropdownMenu, isStandalone: true, selector: \"[ngbDropdownMenu]\", host: { listeners: { \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Enter\": \"dropdown.onKeyDown($event)\", \"keydown.Space\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"class.dropdown-menu\": \"true\", \"class.show\": \"dropdown.isOpen()\" } }, queries: [{ propertyName: \"menuItems\", predicate: NgbDropdownItem }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownMenu]',\n                    standalone: true,\n                    host: {\n                        '[class.dropdown-menu]': 'true',\n                        '[class.show]': 'dropdown.isOpen()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Space)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbDropdown, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbDropdown)]\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { menuItems: [{\n                type: ContentChildren,\n                args: [NgbDropdownItem]\n            }] } });\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\nclass NgbDropdownAnchor {\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this.nativeElement = _elementRef.nativeElement;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownAnchor, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDropdownAnchor, isStandalone: true, selector: \"[ngbDropdownAnchor]\", host: { properties: { \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownAnchor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownAnchor]',\n                    standalone: true,\n                    host: { class: 'dropdown-toggle', '[attr.aria-expanded]': 'dropdown.isOpen()' },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbDropdown, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbDropdown)]\n                }] }, { type: i0.ElementRef }]; } });\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    constructor(dropdown, elementRef) {\n        super(dropdown, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownToggle, deps: [{ token: forwardRef(() => NgbDropdown) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDropdownToggle, isStandalone: true, selector: \"[ngbDropdownToggle]\", host: { listeners: { \"click\": \"dropdown.toggle()\", \"keydown.ArrowUp\": \"dropdown.onKeyDown($event)\", \"keydown.ArrowDown\": \"dropdown.onKeyDown($event)\", \"keydown.Home\": \"dropdown.onKeyDown($event)\", \"keydown.End\": \"dropdown.onKeyDown($event)\", \"keydown.Tab\": \"dropdown.onKeyDown($event)\", \"keydown.Shift.Tab\": \"dropdown.onKeyDown($event)\" }, properties: { \"attr.aria-expanded\": \"dropdown.isOpen()\" }, classAttribute: \"dropdown-toggle\" }, providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdownToggle]',\n                    standalone: true,\n                    host: {\n                        class: 'dropdown-toggle',\n                        '[attr.aria-expanded]': 'dropdown.isOpen()',\n                        '(click)': 'dropdown.toggle()',\n                        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                        '(keydown.End)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Tab)': 'dropdown.onKeyDown($event)',\n                        '(keydown.Shift.Tab)': 'dropdown.onKeyDown($event)',\n                    },\n                    providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }],\n                }]\n        }], ctorParameters: function () { return [{ type: NgbDropdown, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbDropdown)]\n                }] }, { type: i0.ElementRef }]; } });\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer) {\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._destroyCloseHandlers$ = new Subject();\n        this._bodyContainer = null;\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.popperOptions = config.popperOptions;\n        this.container = config.container;\n        this.autoClose = config.autoClose;\n        this._positioning = ngbPositioning();\n    }\n    ngOnInit() {\n        if (!this.display) {\n            this.display = this._elementRef.nativeElement.closest('.navbar') ? 'static' : 'dynamic';\n        }\n    }\n    ngAfterContentInit() {\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            this._applyPlacementClasses();\n            if (this._open) {\n                this._setCloseHandlers();\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.firstChange) {\n            this._positioning.setOptions({\n                hostElement: this._anchor.nativeElement,\n                targetElement: this._bodyContainer || this._menu.nativeElement,\n                placement: this.placement,\n                appendToBody: this.container === 'body',\n            });\n            this._applyPlacementClasses();\n        }\n        if (changes.dropdownClass) {\n            const { currentValue, previousValue } = changes.dropdownClass;\n            this._applyCustomDropdownClass(currentValue, previousValue);\n        }\n        if (changes.autoClose && this._open) {\n            this.autoClose = changes.autoClose.currentValue;\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n    isOpen() {\n        return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n            if (this._anchor) {\n                this._anchor.nativeElement.focus();\n                if (this.display === 'dynamic') {\n                    this._ngZone.runOutsideAngular(() => {\n                        this._positioning.createPopper({\n                            hostElement: this._anchor.nativeElement,\n                            targetElement: this._bodyContainer || this._menu.nativeElement,\n                            placement: this.placement,\n                            appendToBody: this.container === 'body',\n                            updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                        });\n                        this._applyPlacementClasses();\n                        this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positionMenu());\n                    });\n                }\n            }\n        }\n    }\n    _setCloseHandlers() {\n        this._destroyCloseHandlers$.next(); // destroy any existing close handlers\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (source) => {\n            this.close();\n            if (source === 0 /* SOURCE.ESCAPE */) {\n                this._anchor.nativeElement.focus();\n            }\n        }, this._destroyCloseHandlers$, this._menu ? [this._menu.nativeElement] : [], this._anchor ? [this._anchor.nativeElement] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n    close() {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._positioning.destroy();\n            this._zoneSubscription?.unsubscribe();\n            this._destroyCloseHandlers$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    onKeyDown(event) {\n        /* eslint-disable-next-line deprecation/deprecation */\n        const key = event.which;\n        const itemElements = this._getMenuElements();\n        let position = -1;\n        let itemElement = null;\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((item, index) => {\n                if (item.contains(event.target)) {\n                    itemElement = item;\n                }\n                if (item === getActiveElement(this._document)) {\n                    position = index;\n                }\n            });\n        }\n        // closing on Enter / Space\n        if (key === Key.Space || key === Key.Enter) {\n            if (itemElement && (this.autoClose === true || this.autoClose === 'inside')) {\n                // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n                // So we have to register a one-time click handler that will fire after any user defined click handlers\n                // to close the dropdown\n                fromEvent(itemElement, 'click')\n                    .pipe(take(1))\n                    .subscribe(() => this.close());\n            }\n            return;\n        }\n        if (key === Key.Tab) {\n            if (event.target && this.isOpen() && this.autoClose) {\n                if (this._anchor.nativeElement === event.target) {\n                    if (this.container === 'body' && !event.shiftKey) {\n                        /* This case is special: user is using [Tab] from the anchor/toggle.\n               User expects the next focusable element in the dropdown menu to get focus.\n               But the menu is not a sibling to anchor/toggle, it is at the end of the body.\n               Trick is to synchronously focus the menu element, and let the [keydown.Tab] go\n               so that browser will focus the proper element (first one focusable in the menu) */\n                        this._renderer.setAttribute(this._menu.nativeElement, 'tabindex', '0');\n                        this._menu.nativeElement.focus();\n                        this._renderer.removeAttribute(this._menu.nativeElement, 'tabindex');\n                    }\n                    else if (event.shiftKey) {\n                        this.close();\n                    }\n                    return;\n                }\n                else if (this.container === 'body') {\n                    const focusableElements = this._menu.nativeElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR);\n                    if (event.shiftKey && event.target === focusableElements[0]) {\n                        this._anchor.nativeElement.focus();\n                        event.preventDefault();\n                    }\n                    else if (!event.shiftKey && event.target === focusableElements[focusableElements.length - 1]) {\n                        this._anchor.nativeElement.focus();\n                        this.close();\n                    }\n                }\n                else {\n                    fromEvent(event.target, 'focusout')\n                        .pipe(take(1))\n                        .subscribe(({ relatedTarget }) => {\n                        if (!this._elementRef.nativeElement.contains(relatedTarget)) {\n                            this.close();\n                        }\n                    });\n                }\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || itemElement) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case Key.ArrowDown:\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case Key.ArrowUp:\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    _isDropup() {\n        return this._elementRef.nativeElement.classList.contains('dropup');\n    }\n    _isEventFromToggle(event) {\n        return this._anchor.nativeElement.contains(event.target);\n    }\n    _getMenuElements() {\n        const menu = this._menu;\n        if (menu == null) {\n            return [];\n        }\n        return menu.menuItems.filter((item) => !item.disabled).map((item) => item.elementRef.nativeElement);\n    }\n    _positionMenu() {\n        const menu = this._menu;\n        if (this.isOpen() && menu) {\n            if (this.display === 'dynamic') {\n                this._positioning.update();\n                this._applyPlacementClasses();\n            }\n            else {\n                this._applyPlacementClasses(this._getFirstPlacement(this.placement));\n            }\n        }\n    }\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n    _resetContainer() {\n        const renderer = this._renderer;\n        if (this._menu) {\n            const dropdownElement = this._elementRef.nativeElement;\n            const dropdownMenuElement = this._menu.nativeElement;\n            renderer.appendChild(dropdownElement, dropdownMenuElement);\n        }\n        if (this._bodyContainer) {\n            renderer.removeChild(this._document.body, this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            const renderer = this._renderer;\n            const dropdownMenuElement = this._menu.nativeElement;\n            const bodyContainer = (this._bodyContainer = this._bodyContainer || renderer.createElement('div'));\n            // Override some styles to have the positioning working\n            renderer.setStyle(bodyContainer, 'position', 'absolute');\n            renderer.setStyle(dropdownMenuElement, 'position', 'static');\n            renderer.setStyle(bodyContainer, 'z-index', '1055');\n            renderer.appendChild(bodyContainer, dropdownMenuElement);\n            renderer.appendChild(this._document.body, bodyContainer);\n        }\n        this._applyCustomDropdownClass(this.dropdownClass);\n    }\n    _applyCustomDropdownClass(newClass, oldClass) {\n        const targetElement = this.container === 'body' ? this._bodyContainer : this._elementRef.nativeElement;\n        if (targetElement) {\n            if (oldClass) {\n                this._renderer.removeClass(targetElement, oldClass);\n            }\n            if (newClass) {\n                this._renderer.addClass(targetElement, newClass);\n            }\n        }\n    }\n    _applyPlacementClasses(placement) {\n        const menu = this._menu;\n        if (menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            const renderer = this._renderer;\n            const dropdownElement = this._elementRef.nativeElement;\n            // remove the current placement classes\n            renderer.removeClass(dropdownElement, 'dropup');\n            renderer.removeClass(dropdownElement, 'dropdown');\n            const { nativeElement } = menu;\n            if (this.display === 'static') {\n                menu.placement = null;\n                renderer.setAttribute(nativeElement, 'data-bs-popper', 'static');\n            }\n            else {\n                menu.placement = placement;\n                renderer.removeAttribute(nativeElement, 'data-bs-popper');\n            }\n            /*\n             * apply the new placement\n             * in case of top use up-arrow or down-arrow otherwise\n             */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            renderer.addClass(dropdownElement, dropdownClass);\n            const bodyContainer = this._bodyContainer;\n            if (bodyContainer) {\n                renderer.removeClass(bodyContainer, 'dropup');\n                renderer.removeClass(bodyContainer, 'dropdown');\n                renderer.addClass(bodyContainer, dropdownClass);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdown, deps: [{ token: i0.ChangeDetectorRef }, { token: NgbDropdownConfig }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbDropdown, isStandalone: true, selector: \"[ngbDropdown]\", inputs: { autoClose: \"autoClose\", dropdownClass: \"dropdownClass\", _open: [\"open\", \"_open\"], placement: \"placement\", popperOptions: \"popperOptions\", container: \"container\", display: \"display\" }, outputs: { openChange: \"openChange\" }, host: { properties: { \"class.show\": \"isOpen()\" } }, queries: [{ propertyName: \"_menu\", first: true, predicate: NgbDropdownMenu, descendants: true }, { propertyName: \"_anchor\", first: true, predicate: NgbDropdownAnchor, descendants: true }], exportAs: [\"ngbDropdown\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdown, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbDropdown]',\n                    exportAs: 'ngbDropdown',\n                    standalone: true,\n                    host: { '[class.show]': 'isOpen()' },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: NgbDropdownConfig }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { _menu: [{\n                type: ContentChild,\n                args: [NgbDropdownMenu, { static: false }]\n            }], _anchor: [{\n                type: ContentChild,\n                args: [NgbDropdownAnchor, { static: false }]\n            }], autoClose: [{\n                type: Input\n            }], dropdownClass: [{\n                type: Input\n            }], _open: [{\n                type: Input,\n                args: ['open']\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], display: [{\n                type: Input\n            }], openChange: [{\n                type: Output\n            }] } });\n\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem];\nclass NgbDropdownModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownModule, imports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem], exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_DROPDOWN_DIRECTIVES,\n                    exports: NGB_DROPDOWN_DIRECTIVES,\n                }]\n        }] });\n\nclass ContentRef {\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nclass PopupService {\n    constructor(_componentType, _injector, _viewContainerRef, _renderer, _ngZone, _applicationRef) {\n        this._componentType = _componentType;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._applicationRef = _applicationRef;\n        this._windowRef = null;\n        this._contentRef = null;\n    }\n    open(content, templateContext, animation = false) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, templateContext);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentType, {\n                injector: this._injector,\n                projectableNodes: this._contentRef.nodes,\n            });\n        }\n        const { nativeElement } = this._windowRef.location;\n        const transition$ = this._ngZone.onStable.pipe(take(1), mergeMap(() => ngbRunTransition(this._ngZone, nativeElement, ({ classList }) => classList.add('show'), {\n            animation,\n            runningTransition: 'continue',\n        })));\n        return { windowRef: this._windowRef, transition$ };\n    }\n    close(animation = false) {\n        if (!this._windowRef) {\n            return of(undefined);\n        }\n        return ngbRunTransition(this._ngZone, this._windowRef.location.nativeElement, ({ classList }) => classList.remove('show'), { animation, runningTransition: 'stop' }).pipe(tap(() => {\n            if (this._windowRef) {\n                // this is required because of the container='body' option\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n                this._windowRef = null;\n            }\n            if (this._contentRef?.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }));\n    }\n    _getContentRef(content, templateContext) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            const viewRef = content.createEmbeddedView(templateContext);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(`${content}`)]]);\n        }\n    }\n}\n\nclass NgbModalBackdrop {\n    constructor(_el, _zone) {\n        this._el = _el;\n        this._zone = _zone;\n    }\n    ngOnInit() {\n        this._zone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._el.nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalBackdrop, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbModalBackdrop, isStandalone: true, selector: \"ngb-modal-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\" }, host: { properties: { \"class\": \"\\\"modal-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" }, styleAttribute: \"z-index: 1055\" }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-modal-backdrop',\n                    standalone: true,\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"modal-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        style: 'z-index: 1055',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }] } });\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.update()`, `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) { }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbModalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\nconst WINDOW_ATTRIBUTES = [\n    'animation',\n    'ariaLabelledBy',\n    'ariaDescribedBy',\n    'backdrop',\n    'centered',\n    'fullscreen',\n    'keyboard',\n    'scrollable',\n    'size',\n    'windowClass',\n    'modalDialogClass',\n];\nconst BACKDROP_ATTRIBUTES = ['animation', 'backdropClass'];\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    _applyWindowOptions(windowInstance, options) {\n        WINDOW_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        BACKDROP_ATTRIBUTES.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    /**\n     * Updates options of an opened modal.\n     *\n     * @since 14.2.0\n     */\n    update(options) {\n        this._applyWindowOptions(this._windowCmptRef.instance, options);\n        if (this._backdropCmptRef && this._backdropCmptRef.instance) {\n            this._applyBackdropOptions(this._backdropCmptRef.instance, options);\n        }\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the modal is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     *\n     * @since 8.0.0\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the modal is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     *\n     * @since 8.0.0\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both modal window and backdrop are closed and animations were finished.\n     * At this point modal and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     *\n     * @since 8.0.0\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when modal is fully visible and animation was finished.\n     * Modal DOM element is always available synchronously after calling 'modal.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if modal is closed before open animation is finished.\n     *\n     * @since 8.0.0\n     */\n    get shown() {\n        return this._windowCmptRef.instance.shown.asObservable();\n    }\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeModalElements() {\n        const windowTransition$ = this._windowCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding window\n        windowTransition$.subscribe(() => {\n            const { nativeElement } = this._windowCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._windowCmptRef.destroy();\n            if (this._contentRef && this._contentRef.viewRef) {\n                this._contentRef.viewRef.destroy();\n            }\n            this._windowCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(windowTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar ModalDismissReasons;\n(function (ModalDismissReasons) {\n    ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nclass NgbModalWindow {\n    constructor(_document, _elRef, _zone) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this._zone = _zone;\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to modal opening\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    get fullscreenClass() {\n        return this.fullscreen === true\n            ? ' modal-fullscreen'\n            : isString(this.fullscreen)\n                ? ` modal-fullscreen-${this.fullscreen}-down`\n                : '';\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        this._zone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._show();\n        });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const windowTransition$ = ngbRunTransition(this._zone, nativeElement, () => nativeElement.classList.remove('show'), context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        const transitions$ = zip(windowTransition$, dialogTransition$);\n        transitions$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return transitions$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const windowTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show');\n        }, context);\n        const dialogTransition$ = ngbRunTransition(this._zone, this._dialogEl.nativeElement, () => { }, context);\n        zip(windowTransition$, dialogTransition$).subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter((e) => e.which === Key.Escape))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                        }\n                    });\n                }\n                else if (this.backdrop === 'static') {\n                    this._bumpBackdrop();\n                }\n            });\n            // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n            // inside the modal dialog and releasing it outside\n            let preventClose = false;\n            fromEvent(this._dialogEl.nativeElement, 'mousedown')\n                .pipe(takeUntil(this._closed$), tap(() => (preventClose = false)), switchMap(() => fromEvent(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))), filter(({ target }) => nativeElement === target))\n                .subscribe(() => {\n                preventClose = true;\n            });\n            // We're listening to 'click' to dismiss modal on modal window click, except when:\n            // 1. clicking on modal dialog itself\n            // 2. closing was prevented by mousedown/up handlers\n            // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n            fromEvent(nativeElement, 'click')\n                .pipe(takeUntil(this._closed$))\n                .subscribe(({ target }) => {\n                if (nativeElement === target) {\n                    if (this.backdrop === 'static') {\n                        this._bumpBackdrop();\n                    }\n                    else if (this.backdrop === true && !preventClose) {\n                        this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n                    }\n                }\n                preventClose = false;\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    _bumpBackdrop() {\n        if (this.backdrop === 'static') {\n            ngbRunTransition(this._zone, this._elRef.nativeElement, ({ classList }) => {\n                classList.add('modal-static');\n                return () => classList.remove('modal-static');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalWindow, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbModalWindow, isStandalone: true, selector: \"ngb-modal-window\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", backdrop: \"backdrop\", centered: \"centered\", fullscreen: \"fullscreen\", keyboard: \"keyboard\", scrollable: \"scrollable\", size: \"size\", windowClass: \"windowClass\", modalDialogClass: \"modalDialogClass\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"modal d-block\\\" + (windowClass ? \\\" \\\" + windowClass : \\\"\\\")\", \"class.fade\": \"animation\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, viewQueries: [{ propertyName: \"_dialogEl\", first: true, predicate: [\"dialog\"], descendants: true, static: true }], ngImport: i0, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content></ng-content></div>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalWindow, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-modal-window', standalone: true, host: {\n                        '[class]': '\"modal d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    }, template: `\n\t\t<div\n\t\t\t#dialog\n\t\t\t[class]=\"\n\t\t\t\t'modal-dialog' +\n\t\t\t\t(size ? ' modal-' + size : '') +\n\t\t\t\t(centered ? ' modal-dialog-centered' : '') +\n\t\t\t\tfullscreenClass +\n\t\t\t\t(scrollable ? ' modal-dialog-scrollable' : '') +\n\t\t\t\t(modalDialogClass ? ' ' + modalDialogClass : '')\n\t\t\t\"\n\t\t\trole=\"document\"\n\t\t>\n\t\t\t<div class=\"modal-content\"><ng-content></ng-content></div>\n\t\t</div>\n\t`, encapsulation: ViewEncapsulation.None, styles: [\"ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { _dialogEl: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], backdrop: [{\n                type: Input\n            }], centered: [{\n                type: Input\n            }], fullscreen: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], windowClass: [{\n                type: Input\n            }], modalDialogClass: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to hide the scrollbar and compensate the lack of a vertical scrollbar\n * by adding an equivalent padding on the right of the body, and to revert this change.\n */\nclass ScrollBar {\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * To be called to hide a potential vertical scrollbar:\n     * - if a scrollbar is there and has a width greater than 0, adds some compensation\n     * padding to the body to keep the same layout as when the scrollbar is there\n     * - adds overflow: hidden\n     *\n     * @return a callback used to revert the change\n     */\n    hide() {\n        const scrollbarWidth = Math.abs(window.innerWidth - this._document.documentElement.clientWidth);\n        const body = this._document.body;\n        const bodyStyle = body.style;\n        const { overflow, paddingRight } = bodyStyle;\n        if (scrollbarWidth > 0) {\n            const actualPadding = parseFloat(window.getComputedStyle(body).paddingRight);\n            bodyStyle.paddingRight = `${actualPadding + scrollbarWidth}px`;\n        }\n        bodyStyle.overflow = 'hidden';\n        return () => {\n            if (scrollbarWidth > 0) {\n                bodyStyle.paddingRight = paddingRight;\n            }\n            bodyStyle.overflow = overflow;\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: ScrollBar, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: ScrollBar, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: ScrollBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass NgbModalStack {\n    constructor(_applicationRef, _injector, _environmentInjector, _document, _scrollBar, _rendererFactory, _ngZone) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._environmentInjector = _environmentInjector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._rendererFactory = _rendererFactory;\n        this._ngZone = _ngZone;\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._scrollBarRestoreFn = null;\n        this._modalRefs = [];\n        this._windowCmpts = [];\n        this._activeInstances = new EventEmitter();\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe(() => {\n            if (this._windowCmpts.length) {\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        const renderer = this._rendererFactory.createRenderer(null, null);\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        this._hideScrollBar();\n        const activeModal = new NgbActiveModal();\n        contentInjector = options.injector || contentInjector;\n        const environmentInjector = contentInjector.get(EnvironmentInjector, null) || this._environmentInjector;\n        const contentRef = this._getContentRef(contentInjector, environmentInjector, content, activeModal, options);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let windowCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        // We have to cleanup DOM after the last modal when BOTH 'hidden' was emitted and 'result' promise was resolved:\n        // - with animations OFF, 'hidden' emits synchronously, then 'result' is resolved asynchronously\n        // - with animations ON, 'result' is resolved asynchronously, then 'hidden' emits asynchronously\n        ngbModalRef.hidden.pipe(take(1)).subscribe(() => Promise.resolve(true).then(() => {\n            if (!this._modalRefs.length) {\n                renderer.removeClass(this._document.body, 'modal-open');\n                this._restoreScrollBar();\n                this._revertAriaHidden();\n            }\n        }));\n        activeModal.close = (result) => {\n            ngbModalRef.close(result);\n        };\n        activeModal.dismiss = (reason) => {\n            ngbModalRef.dismiss(reason);\n        };\n        activeModal.update = (options) => {\n            ngbModalRef.update(options);\n        };\n        ngbModalRef.update(options);\n        if (this._modalRefs.length === 1) {\n            renderer.addClass(this._document.body, 'modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        windowCmptRef.changeDetectorRef.detectChanges();\n        return ngbModalRef;\n    }\n    get activeInstances() {\n        return this._activeInstances;\n    }\n    dismissAll(reason) {\n        this._modalRefs.forEach((ngbModalRef) => ngbModalRef.dismiss(reason));\n    }\n    hasOpenModals() {\n        return this._modalRefs.length > 0;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbModalBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let windowCmptRef = createComponent(NgbModalWindow, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    _getContentRef(contentInjector, environmentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, environmentInjector, content, activeModal, options);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeModal) {\n        const context = {\n            $implicit: activeModal,\n            close(result) {\n                activeModal.close(result);\n            },\n            dismiss(reason) {\n                activeModal.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, environmentInjector, componentType, context, options) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveModal, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            componentNativeEl.classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _setAriaHidden(element) {\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach((sibling) => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            });\n            this._setAriaHidden(parent);\n        }\n    }\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        });\n        this._ariaHiddenValues.clear();\n    }\n    _registerModalRef(ngbModalRef) {\n        const unregisterModalRef = () => {\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n                this._activeInstances.emit(this._modalRefs);\n            }\n        };\n        this._modalRefs.push(ngbModalRef);\n        this._activeInstances.emit(this._modalRefs);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy(() => {\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalStack, deps: [{ token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.EnvironmentInjector }, { token: DOCUMENT }, { token: ScrollBar }, { token: i0.RendererFactory2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.EnvironmentInjector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: ScrollBar }, { type: i0.RendererFactory2 }, { type: i0.NgZone }]; } });\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * @since 3.1.0\n */\nclass NgbModalConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.backdrop = true;\n        this.fullscreen = false;\n        this.keyboard = true;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    constructor(_injector, _modalStack, _config) {\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._modalStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active modal instances.\n     */\n    get activeInstances() {\n        return this._modalStack.activeInstances;\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n    dismissAll(reason) {\n        this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n    hasOpenModals() {\n        return this._modalStack.hasOpenModals();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModal, deps: [{ token: i0.Injector }, { token: NgbModalStack }, { token: NgbModalConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModal, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModal, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: NgbModalStack }, { type: NgbModalConfig }]; } });\n\nclass NgbModalModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalModule, providers: [NgbModal] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModalModule, decorators: [{\n            type: NgModule,\n            args: [{ providers: [NgbModal] }]\n        }] });\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\nclass NgbNavConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.destroyOnHide = true;\n        this.orientation = 'horizontal';\n        this.roles = 'tablist';\n        this.keyboard = false;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nconst isValidNavId = (id) => isDefined(id) && id !== '';\nlet navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\nclass NgbNavContent {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavContent, isStandalone: true, selector: \"ng-template[ngbNavContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavContent, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbNavContent]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * This directive applies a specific role on a non-container based ngbNavItem.\n *\n * @since 14.1.0\n */\nclass NgbNavItemRole {\n    constructor(role, nav) {\n        this.role = role;\n        this.nav = nav;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavItemRole, deps: [{ token: 'role', attribute: true }, { token: forwardRef(() => NgbNav) }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavItemRole, isStandalone: true, selector: \"[ngbNavItem]:not(ng-container)\", host: { properties: { \"attr.role\": \"role ? role : nav.roles ? 'presentation' : undefined\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavItemRole, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavItem]:not(ng-container)',\n                    standalone: true,\n                    host: {\n                        '[attr.role]': `role ? role : nav.roles ? 'presentation' : undefined`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: NgbNav, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbNav)]\n                }] }]; } });\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\nclass NgbNavItem {\n    constructor(_nav, elementRef) {\n        this._nav = _nav;\n        this.elementRef = elementRef;\n        /**\n         * If `true`, the current nav item is disabled and can't be toggled by user.\n         *\n         * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n         */\n        this.disabled = false;\n        /**\n         * An event emitted when the fade in transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished on the related nav content\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n    }\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.contentTpl = this.contentTpls.first;\n    }\n    ngOnInit() {\n        if (!isDefined(this.domId)) {\n            this.domId = `ngb-nav-${navCounter++}`;\n        }\n    }\n    get active() {\n        return this._nav.activeId === this.id;\n    }\n    get id() {\n        return isValidNavId(this._id) ? this._id : this.domId;\n    }\n    get panelDomId() {\n        return `${this.domId}-panel`;\n    }\n    isPanelInDom() {\n        return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavItem, deps: [{ token: forwardRef(() => NgbNav) }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavItem, isStandalone: true, selector: \"[ngbNavItem]\", inputs: { destroyOnHide: \"destroyOnHide\", disabled: \"disabled\", domId: \"domId\", _id: [\"ngbNavItem\", \"_id\"] }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { properties: { \"class.nav-item\": \"true\" } }, queries: [{ propertyName: \"contentTpls\", predicate: NgbNavContent }], exportAs: [\"ngbNavItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavItem, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbNavItem]', exportAs: 'ngbNavItem', standalone: true, host: { '[class.nav-item]': 'true' } }]\n        }], ctorParameters: function () { return [{ type: NgbNav, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => NgbNav)]\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { destroyOnHide: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], domId: [{\n                type: Input\n            }], _id: [{\n                type: Input,\n                args: ['ngbNavItem']\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], contentTpls: [{\n                type: ContentChildren,\n                args: [NgbNavContent, { descendants: false }]\n            }] } });\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\nclass NgbNav {\n    constructor(role, config, _cd, _document) {\n        this.role = role;\n        this._cd = _cd;\n        this._document = _document;\n        /**\n         * The event emitted after the active nav changes\n         * The payload of the event is the newly active nav id\n         *\n         * If you want to prevent nav change, you should use `(navChange)` event\n         */\n        this.activeIdChange = new EventEmitter();\n        /**\n         * An event emitted when the fade in transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just shown.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the fade out transition is finished for one of the items.\n         *\n         * Payload of the event is the nav id that was just hidden.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        this.destroy$ = new Subject();\n        this.navItemChange$ = new Subject();\n        /**\n         * The nav change event emitted right before the nav change happens on user click.\n         *\n         * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n         *\n         * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n         */\n        this.navChange = new EventEmitter();\n        this.animation = config.animation;\n        this.destroyOnHide = config.destroyOnHide;\n        this.orientation = config.orientation;\n        this.roles = config.roles;\n        this.keyboard = config.keyboard;\n    }\n    click(item) {\n        if (!item.disabled) {\n            this._updateActiveId(item.id);\n        }\n    }\n    onKeyDown(event) {\n        if (this.roles !== 'tablist' || !this.keyboard) {\n            return;\n        }\n        /* eslint-disable-next-line deprecation/deprecation */\n        const key = event.which;\n        const enabledLinks = this.links.filter((link) => !link.navItem.disabled);\n        const { length } = enabledLinks;\n        let position = -1;\n        enabledLinks.forEach((link, index) => {\n            if (link.elRef.nativeElement === this._document.activeElement) {\n                position = index;\n            }\n        });\n        if (length) {\n            switch (key) {\n                case Key.ArrowLeft:\n                    if (this.orientation === 'vertical') {\n                        return;\n                    }\n                    position = (position - 1 + length) % length;\n                    break;\n                case Key.ArrowRight:\n                    if (this.orientation === 'vertical') {\n                        return;\n                    }\n                    position = (position + 1) % length;\n                    break;\n                case Key.ArrowDown:\n                    if (this.orientation === 'horizontal') {\n                        return;\n                    }\n                    position = (position + 1) % length;\n                    break;\n                case Key.ArrowUp:\n                    if (this.orientation === 'horizontal') {\n                        return;\n                    }\n                    position = (position - 1 + length) % length;\n                    break;\n                case Key.Home:\n                    position = 0;\n                    break;\n                case Key.End:\n                    position = length - 1;\n                    break;\n            }\n            if (this.keyboard === 'changeWithArrows') {\n                this.select(enabledLinks[position].navItem.id);\n            }\n            enabledLinks[position].elRef.nativeElement.focus();\n            event.preventDefault();\n        }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n    select(id) {\n        this._updateActiveId(id, false);\n    }\n    ngAfterContentInit() {\n        if (!isDefined(this.activeId)) {\n            const nextId = this.items.first ? this.items.first.id : null;\n            if (isValidNavId(nextId)) {\n                this._updateActiveId(nextId, false);\n                this._cd.detectChanges();\n            }\n        }\n        this.items.changes.pipe(takeUntil(this.destroy$)).subscribe(() => this._notifyItemChanged(this.activeId));\n    }\n    ngOnChanges({ activeId }) {\n        if (activeId && !activeId.firstChange) {\n            this._notifyItemChanged(activeId.currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n    }\n    _updateActiveId(nextId, emitNavChange = true) {\n        if (this.activeId !== nextId) {\n            let defaultPrevented = false;\n            if (emitNavChange) {\n                this.navChange.emit({\n                    activeId: this.activeId,\n                    nextId,\n                    preventDefault: () => {\n                        defaultPrevented = true;\n                    },\n                });\n            }\n            if (!defaultPrevented) {\n                this.activeId = nextId;\n                this.activeIdChange.emit(nextId);\n                this._notifyItemChanged(nextId);\n            }\n        }\n    }\n    _notifyItemChanged(nextItemId) {\n        this.navItemChange$.next(this._getItemById(nextItemId));\n    }\n    _getItemById(itemId) {\n        return (this.items && this.items.find((item) => item.id === itemId)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNav, deps: [{ token: 'role', attribute: true }, { token: NgbNavConfig }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNav, isStandalone: true, selector: \"[ngbNav]\", inputs: { activeId: \"activeId\", animation: \"animation\", destroyOnHide: \"destroyOnHide\", orientation: \"orientation\", roles: \"roles\", keyboard: \"keyboard\" }, outputs: { activeIdChange: \"activeIdChange\", shown: \"shown\", hidden: \"hidden\", navChange: \"navChange\" }, host: { listeners: { \"keydown.arrowLeft\": \"onKeyDown($event)\", \"keydown.arrowRight\": \"onKeyDown($event)\", \"keydown.arrowDown\": \"onKeyDown($event)\", \"keydown.arrowUp\": \"onKeyDown($event)\", \"keydown.Home\": \"onKeyDown($event)\", \"keydown.End\": \"onKeyDown($event)\" }, properties: { \"class.nav\": \"true\", \"class.flex-column\": \"orientation === 'vertical'\", \"attr.aria-orientation\": \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\", \"attr.role\": \"role ? role : roles ? 'tablist' : undefined\" } }, queries: [{ propertyName: \"items\", predicate: NgbNavItem }, { propertyName: \"links\", predicate: i0.forwardRef(function () { return NgbNavLinkBase; }), descendants: true }], exportAs: [\"ngbNav\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNav, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNav]',\n                    exportAs: 'ngbNav',\n                    standalone: true,\n                    host: {\n                        '[class.nav]': 'true',\n                        '[class.flex-column]': `orientation === 'vertical'`,\n                        '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n                        '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n                        '(keydown.arrowLeft)': 'onKeyDown($event)',\n                        '(keydown.arrowRight)': 'onKeyDown($event)',\n                        '(keydown.arrowDown)': 'onKeyDown($event)',\n                        '(keydown.arrowUp)': 'onKeyDown($event)',\n                        '(keydown.Home)': 'onKeyDown($event)',\n                        '(keydown.End)': 'onKeyDown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: NgbNavConfig }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { activeId: [{\n                type: Input\n            }], activeIdChange: [{\n                type: Output\n            }], animation: [{\n                type: Input\n            }], destroyOnHide: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], roles: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], items: [{\n                type: ContentChildren,\n                args: [NgbNavItem]\n            }], links: [{\n                type: ContentChildren,\n                args: [forwardRef(() => NgbNavLinkBase), { descendants: true }]\n            }], navChange: [{\n                type: Output\n            }] } });\nclass NgbNavLinkBase {\n    constructor(role, navItem, nav, elRef) {\n        this.role = role;\n        this.navItem = navItem;\n        this.nav = nav;\n        this.elRef = elRef;\n    }\n    hasNavItemClass() {\n        // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n        return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLinkBase, deps: [{ token: 'role', attribute: true }, { token: NgbNavItem }, { token: NgbNav }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavLinkBase, isStandalone: true, selector: \"[ngbNavLink]\", host: { properties: { \"id\": \"navItem.domId\", \"class.nav-link\": \"true\", \"class.nav-item\": \"hasNavItemClass()\", \"attr.role\": \"role ? role : nav.roles ? 'tab' : undefined\", \"class.active\": \"navItem.active\", \"class.disabled\": \"navItem.disabled\", \"attr.tabindex\": \"navItem.disabled ? -1 : undefined\", \"attr.aria-controls\": \"navItem.isPanelInDom() ? navItem.panelDomId : null\", \"attr.aria-selected\": \"navItem.active\", \"attr.aria-disabled\": \"navItem.disabled\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLinkBase, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavLink]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'navItem.domId',\n                        '[class.nav-link]': 'true',\n                        '[class.nav-item]': 'hasNavItemClass()',\n                        '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n                        '[class.active]': 'navItem.active',\n                        '[class.disabled]': 'navItem.disabled',\n                        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n                        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n                        '[attr.aria-selected]': 'navItem.active',\n                        '[attr.aria-disabled]': 'navItem.disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: NgbNavItem }, { type: NgbNav }, { type: i0.ElementRef }]; } });\n/**\n * A directive to mark the nav link when used on a button element.\n */\nclass NgbNavLinkButton {\n    constructor(navItem, nav) {\n        this.navItem = navItem;\n        this.nav = nav;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLinkButton, deps: [{ token: NgbNavItem }, { token: NgbNav }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavLinkButton, isStandalone: true, selector: \"button[ngbNavLink]\", host: { attributes: { \"type\": \"button\" }, listeners: { \"click\": \"nav.click(navItem)\" }, properties: { \"disabled\": \"navItem.disabled\" } }, hostDirectives: [{ directive: NgbNavLinkBase }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLinkButton, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[ngbNavLink]',\n                    standalone: true,\n                    hostDirectives: [NgbNavLinkBase],\n                    host: {\n                        type: 'button',\n                        '[disabled]': 'navItem.disabled',\n                        '(click)': 'nav.click(navItem)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbNavItem }, { type: NgbNav }]; } });\n/**\n * A directive to mark the nav link when used on a link element.\n *\n * @since 5.2.0\n */\nclass NgbNavLink {\n    constructor(navItem, nav) {\n        this.navItem = navItem;\n        this.nav = nav;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLink, deps: [{ token: NgbNavItem }, { token: NgbNav }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavLink, isStandalone: true, selector: \"a[ngbNavLink]\", host: { attributes: { \"href\": \"\" }, listeners: { \"click\": \"nav.click(navItem); $event.preventDefault()\" } }, hostDirectives: [{ directive: NgbNavLinkBase }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[ngbNavLink]',\n                    standalone: true,\n                    hostDirectives: [NgbNavLinkBase],\n                    host: {\n                        href: '',\n                        '(click)': 'nav.click(navItem); $event.preventDefault()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: NgbNavItem }, { type: NgbNav }]; } });\n\nconst ngbNavFadeOutTransition = ({ classList }) => {\n    classList.remove('show');\n    return () => classList.remove('active');\n};\nconst ngbNavFadeInTransition = (element, animation) => {\n    if (animation) {\n        reflow(element);\n    }\n    element.classList.add('show');\n};\n\nclass NgbNavPane {\n    constructor(elRef) {\n        this.elRef = elRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavPane, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavPane, isStandalone: true, selector: \"[ngbNavPane]\", inputs: { item: \"item\", nav: \"nav\", role: \"role\" }, host: { properties: { \"id\": \"item.panelDomId\", \"class.fade\": \"nav.animation\", \"attr.role\": \"role ? role : nav.roles ? \\\"tabpanel\\\" : undefined\", \"attr.aria-labelledby\": \"item.domId\" }, classAttribute: \"tab-pane\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavPane, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbNavPane]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'item.panelDomId',\n                        class: 'tab-pane',\n                        '[class.fade]': 'nav.animation',\n                        '[attr.role]': 'role ? role : nav.roles ? \"tabpanel\" : undefined',\n                        '[attr.aria-labelledby]': 'item.domId',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { item: [{\n                type: Input\n            }], nav: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\nclass NgbNavOutlet {\n    constructor(_cd, _ngZone) {\n        this._cd = _cd;\n        this._ngZone = _ngZone;\n        this._activePane = null;\n    }\n    isPanelTransitioning(item) {\n        return this._activePane?.item === item;\n    }\n    ngAfterViewInit() {\n        // initial display\n        this._updateActivePane();\n        // this will be emitted for all 3 types of nav changes: .select(), [activeId] or (click)\n        this.nav.navItemChange$\n            .pipe(takeUntil(this.nav.destroy$), startWith(this._activePane?.item || null), distinctUntilChanged(), skip(1))\n            .subscribe((nextItem) => {\n            const options = { animation: this.nav.animation, runningTransition: 'stop' };\n            // next panel we're switching to will only appear in DOM after the change detection is done\n            // and `this._panes` will be updated\n            this._cd.detectChanges();\n            // fading out\n            if (this._activePane) {\n                ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeOutTransition, options).subscribe(() => {\n                    const activeItem = this._activePane?.item;\n                    this._activePane = this._getPaneForItem(nextItem);\n                    // mark for check when transition finishes as outlet or parent containers might be OnPush\n                    // without this the panes that have \"faded out\" will stay in DOM\n                    this._cd.markForCheck();\n                    // fading in\n                    if (this._activePane) {\n                        // we have to add the '.active' class before running the transition,\n                        // because it should be in place before `ngbRunTransition` does `reflow()`\n                        this._activePane.elRef.nativeElement.classList.add('active');\n                        ngbRunTransition(this._ngZone, this._activePane.elRef.nativeElement, ngbNavFadeInTransition, options).subscribe(() => {\n                            if (nextItem) {\n                                nextItem.shown.emit();\n                                this.nav.shown.emit(nextItem.id);\n                            }\n                        });\n                    }\n                    if (activeItem) {\n                        activeItem.hidden.emit();\n                        this.nav.hidden.emit(activeItem.id);\n                    }\n                });\n            }\n            else {\n                this._updateActivePane();\n            }\n        });\n    }\n    _updateActivePane() {\n        this._activePane = this._getActivePane();\n        this._activePane?.elRef.nativeElement.classList.add('show');\n        this._activePane?.elRef.nativeElement.classList.add('active');\n    }\n    _getPaneForItem(item) {\n        return (this._panes && this._panes.find((pane) => pane.item === item)) || null;\n    }\n    _getActivePane() {\n        return (this._panes && this._panes.find((pane) => pane.item.active)) || null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavOutlet, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbNavOutlet, isStandalone: true, selector: \"[ngbNavOutlet]\", inputs: { paneRole: \"paneRole\", nav: [\"ngbNavOutlet\", \"nav\"] }, host: { properties: { \"class.tab-content\": \"true\" } }, viewQueries: [{ propertyName: \"_panes\", predicate: NgbNavPane, descendants: true }], ngImport: i0, template: `\n\t\t<ng-template ngFor let-item [ngForOf]=\"nav.items\">\n\t\t\t<div\n\t\t\t\tngbNavPane\n\t\t\t\t*ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\"\n\t\t\t\t[item]=\"item\"\n\t\t\t\t[nav]=\"nav\"\n\t\t\t\t[role]=\"paneRole\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t></ng-template>\n\t\t\t</div>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgbNavPane, selector: \"[ngbNavPane]\", inputs: [\"item\", \"nav\", \"role\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavOutlet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: '[ngbNavOutlet]',\n                    standalone: true,\n                    imports: [NgbNavPane, NgFor, NgIf, NgTemplateOutlet],\n                    host: { '[class.tab-content]': 'true' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `\n\t\t<ng-template ngFor let-item [ngForOf]=\"nav.items\">\n\t\t\t<div\n\t\t\t\tngbNavPane\n\t\t\t\t*ngIf=\"item.isPanelInDom() || isPanelTransitioning(item)\"\n\t\t\t\t[item]=\"item\"\n\t\t\t\t[nav]=\"nav\"\n\t\t\t\t[role]=\"paneRole\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"item.contentTpl?.templateRef || null\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: item.active || isPanelTransitioning(item) }\"\n\t\t\t\t></ng-template>\n\t\t\t</div>\n\t\t</ng-template>\n\t`,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { _panes: [{\n                type: ViewChildren,\n                args: [NgbNavPane]\n            }], paneRole: [{\n                type: Input\n            }], nav: [{\n                type: Input,\n                args: ['ngbNavOutlet']\n            }] } });\n\nconst NGB_NAV_DIRECTIVES = [\n    NgbNavContent,\n    NgbNav,\n    NgbNavItem,\n    NgbNavItemRole,\n    NgbNavLink,\n    NgbNavLinkButton,\n    NgbNavLinkBase,\n    NgbNavOutlet,\n    NgbNavPane,\n];\nclass NgbNavModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavModule, imports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane], exports: [NgbNavContent,\n            NgbNav,\n            NgbNavItem,\n            NgbNavItemRole,\n            NgbNavLink,\n            NgbNavLinkButton,\n            NgbNavLinkBase,\n            NgbNavOutlet,\n            NgbNavPane] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbNavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_NAV_DIRECTIVES,\n                    exports: NGB_NAV_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationEllipsis, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationEllipsis, isStandalone: true, selector: \"ng-template[ngbPaginationEllipsis]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationEllipsis, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationEllipsis]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationFirst {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationFirst, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationFirst, isStandalone: true, selector: \"ng-template[ngbPaginationFirst]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationFirst, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationFirst]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationLast {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationLast, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationLast, isStandalone: true, selector: \"ng-template[ngbPaginationLast]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationLast, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationLast]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNext {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationNext, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationNext, isStandalone: true, selector: \"ng-template[ngbPaginationNext]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationNext, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNext]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationNumber {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationNumber, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationNumber, isStandalone: true, selector: \"ng-template[ngbPaginationNumber]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationNumber, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationNumber]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\nclass NgbPaginationPrevious {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationPrevious, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationPrevious, isStandalone: true, selector: \"ng-template[ngbPaginationPrevious]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationPrevious, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPrevious]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A directive to match the 'pages' whole content\n *\n * @since 9.1.0\n */\nclass NgbPaginationPages {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationPages, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPaginationPages, isStandalone: true, selector: \"ng-template[ngbPaginationPages]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationPages, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[ngbPaginationPages]', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    constructor(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    hasPrevious() {\n        return this.page > 1;\n    }\n    hasNext() {\n        return this.page < this.pageCount;\n    }\n    nextDisabled() {\n        return !this.hasNext() || this.disabled;\n    }\n    previousDisabled() {\n        return !this.hasPrevious() || this.disabled;\n    }\n    selectPage(pageNumber) {\n        this._updatePages(pageNumber);\n    }\n    ngOnChanges(changes) {\n        this._updatePages(this.page);\n    }\n    isEllipsis(pageNumber) {\n        return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                // The first page will always be included. If the displayed range\n                // starts after the third page, then add ellipsis. But if the range\n                // starts on the third page, then add the second page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (start > 2) {\n                    this.pages.unshift(-1);\n                }\n                else if (start === 2) {\n                    this.pages.unshift(2);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                // The last page will always be included. If the displayed range\n                // ends before the third-last page, then add ellipsis. But if the range\n                // ends on third-last page, then add the second-last page instead of\n                // an ellipsis, because the ellipsis would only hide a single page.\n                if (end < this.pageCount - 2) {\n                    this.pages.push(-1);\n                }\n                else if (end === this.pageCount - 2) {\n                    this.pages.push(this.pageCount - 1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n    _applyRotation() {\n        let start = 0;\n        let end = this.pageCount;\n        let leftOffset = Math.floor(this.maxSize / 2);\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n    _applyPagination() {\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        let start = page * this.maxSize;\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    _setPageInRange(newPageNo) {\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            let start = 0;\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPagination, deps: [{ token: NgbPaginationConfig }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPagination, isStandalone: true, selector: \"ngb-pagination\", inputs: { disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", rotate: \"rotate\", collectionSize: \"collectionSize\", maxSize: \"maxSize\", page: \"page\", pageSize: \"pageSize\", size: \"size\" }, outputs: { pageChange: \"pageChange\" }, host: { attributes: { \"role\": \"navigation\" } }, queries: [{ propertyName: \"tplEllipsis\", first: true, predicate: NgbPaginationEllipsis, descendants: true }, { propertyName: \"tplFirst\", first: true, predicate: NgbPaginationFirst, descendants: true }, { propertyName: \"tplLast\", first: true, predicate: NgbPaginationLast, descendants: true }, { propertyName: \"tplNext\", first: true, predicate: NgbPaginationNext, descendants: true }, { propertyName: \"tplNumber\", first: true, predicate: NgbPaginationNumber, descendants: true }, { propertyName: \"tplPrevious\", first: true, predicate: NgbPaginationPrevious, descendants: true }, { propertyName: \"tplPages\", first: true, predicate: NgbPaginationPages, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t<li\n\t\t\t\t*ngFor=\"let pageNumber of pages\"\n\t\t\t\tclass=\"page-item\"\n\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t>\n\t\t\t\t<a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\t*ngIf=\"!isEllipsis(pageNumber)\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t>\n\t\t\t</ng-template>\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ul>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPagination, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-pagination',\n                    standalone: true,\n                    imports: [NgIf, NgFor, NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: { role: 'navigation' },\n                    template: `\n\t\t<ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n\t\t<ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n\t\t<ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n\t\t<ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n\t\t<ng-template #ellipsis>...</ng-template>\n\t\t<ng-template #defaultNumber let-page let-currentPage=\"currentPage\">{{ page }}</ng-template>\n\t\t<ng-template #defaultPages let-page let-pages=\"pages\" let-disabled=\"disabled\">\n\t\t\t<li\n\t\t\t\t*ngFor=\"let pageNumber of pages\"\n\t\t\t\tclass=\"page-item\"\n\t\t\t\t[class.active]=\"pageNumber === page\"\n\t\t\t\t[class.disabled]=\"isEllipsis(pageNumber) || disabled\"\n\t\t\t\t[attr.aria-current]=\"pageNumber === page ? 'page' : null\"\n\t\t\t>\n\t\t\t\t<a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: true, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\t*ngIf=\"!isEllipsis(pageNumber)\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageNumber); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"disabled ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"disabled ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: disabled, $implicit: pageNumber, currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ng-template>\n\t\t<ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"First\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.first-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"previousDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Previous\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.previous-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page - 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"previousDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: previousDisabled() }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"tplPages?.templateRef || defaultPages\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: page, pages: pages, disabled: disabled }\"\n\t\t\t>\n\t\t\t</ng-template>\n\t\t\t<li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Next\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.next-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(page + 1); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\n\t\t\t<li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n\t\t\t\t<a\n\t\t\t\t\taria-label=\"Last\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.pagination.last-aria\"\n\t\t\t\t\tclass=\"page-link\"\n\t\t\t\t\thref\n\t\t\t\t\t(click)=\"selectPage(pageCount); $event.preventDefault()\"\n\t\t\t\t\t[attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n\t\t\t\t\t[attr.aria-disabled]=\"nextDisabled() ? 'true' : null\"\n\t\t\t\t>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t[ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{ disabled: nextDisabled(), currentPage: page }\"\n\t\t\t\t\t></ng-template>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t</ul>\n\t`,\n                }]\n        }], ctorParameters: function () { return [{ type: NgbPaginationConfig }]; }, propDecorators: { tplEllipsis: [{\n                type: ContentChild,\n                args: [NgbPaginationEllipsis, { static: false }]\n            }], tplFirst: [{\n                type: ContentChild,\n                args: [NgbPaginationFirst, { static: false }]\n            }], tplLast: [{\n                type: ContentChild,\n                args: [NgbPaginationLast, { static: false }]\n            }], tplNext: [{\n                type: ContentChild,\n                args: [NgbPaginationNext, { static: false }]\n            }], tplNumber: [{\n                type: ContentChild,\n                args: [NgbPaginationNumber, { static: false }]\n            }], tplPrevious: [{\n                type: ContentChild,\n                args: [NgbPaginationPrevious, { static: false }]\n            }], tplPages: [{\n                type: ContentChild,\n                args: [NgbPaginationPages, { static: false }]\n            }], disabled: [{\n                type: Input\n            }], boundaryLinks: [{\n                type: Input\n            }], directionLinks: [{\n                type: Input\n            }], ellipses: [{\n                type: Input\n            }], rotate: [{\n                type: Input\n            }], collectionSize: [{\n                type: Input,\n                args: [{ required: true }]\n            }], maxSize: [{\n                type: Input\n            }], page: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageChange: [{\n                type: Output\n            }], size: [{\n                type: Input\n            }] } });\n\nconst NGB_PAGINATION_DIRECTIVES = [\n    NgbPagination,\n    NgbPaginationEllipsis,\n    NgbPaginationFirst,\n    NgbPaginationLast,\n    NgbPaginationNext,\n    NgbPaginationNumber,\n    NgbPaginationPrevious,\n    NgbPaginationPages,\n];\nclass NgbPaginationModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationModule, imports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages], exports: [NgbPagination,\n            NgbPaginationEllipsis,\n            NgbPaginationFirst,\n            NgbPaginationLast,\n            NgbPaginationNext,\n            NgbPaginationNumber,\n            NgbPaginationPrevious,\n            NgbPaginationPages] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPaginationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: NGB_PAGINATION_DIRECTIVES,\n                    exports: NGB_PAGINATION_DIRECTIVES,\n                }]\n        }] });\n\nclass Trigger {\n    constructor(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    isManual() {\n        return this.open === 'manual' || this.close === 'manual';\n    }\n}\nconst DEFAULT_ALIASES = {\n    hover: ['mouseenter', 'mouseleave'],\n    focus: ['focusin', 'focusout'],\n};\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    const parsedTriggers = trimmedTriggers\n        .split(/\\s+/)\n        .map((trigger) => trigger.split(':'))\n        .map((triggerPair) => {\n        let alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    const manualTriggers = parsedTriggers.filter((triggerPair) => triggerPair.isManual());\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw \"Triggers parse error: manual trigger can't be mixed with other triggers\";\n    }\n    return parsedTriggers;\n}\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable((subscriber) => {\n        const listeners = [];\n        const openFn = () => subscriber.next(true);\n        const closeFn = () => subscriber.next(false);\n        const toggleFn = () => subscriber.next(!isOpenedFn());\n        triggers.forEach((trigger) => {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        });\n        return () => {\n            listeners.forEach((unsubscribeFn) => unsubscribeFn());\n        };\n    });\n}\nconst delayOrNoop = (time) => (time > 0 ? delay(time) : (a) => a);\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (input$) => {\n        let pending = null;\n        const filteredInput$ = input$.pipe(map((open) => ({ open })), filter((event) => {\n            const currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        }), share());\n        const delayedOpen$ = filteredInput$.pipe(filter((event) => event.open), delayOrNoop(openDelay));\n        const delayedClose$ = filteredInput$.pipe(filter((event) => !event.open), delayOrNoop(closeDelay));\n        return merge(delayedOpen$, delayedClose$).pipe(filter((event) => {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        }), map((event) => event.open));\n    };\n}\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return () => { };\n    }\n    const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe((open) => (open ? openFn() : closeFn()));\n    return () => subscription.unsubscribe();\n}\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId$1 = 0;\nclass NgbPopoverWindow {\n    isTitleTemplate() {\n        return this.title instanceof TemplateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPopoverWindow, isStandalone: true, selector: \"ngb-popover-window\", inputs: { animation: \"animation\", title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"popover\\\" + (popoverClass ? \\\" \\\" + popoverClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" }, styleAttribute: \"position: absolute;\" }, ngImport: i0, template: ` <div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t<h3 class=\"popover-header\" *ngIf=\"title\">\n\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t></ng-template>\n\t\t</h3>\n\t\t<div class=\"popover-body\"><ng-content></ng-content></div>`, isInline: true, dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-popover-window',\n                    standalone: true,\n                    imports: [NgTemplateOutlet, NgIf],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                        style: 'position: absolute;',\n                    },\n                    template: ` <div class=\"popover-arrow\" data-popper-arrow></div>\n\t\t<h3 class=\"popover-header\" *ngIf=\"title\">\n\t\t\t<ng-template #simpleTitle>{{ title }}</ng-template>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"isTitleTemplate() ? $any(title) : simpleTitle\"\n\t\t\t\t[ngTemplateOutletContext]=\"context\"\n\t\t\t></ng-template>\n\t\t</h3>\n\t\t<div class=\"popover-body\"><ng-content></ng-content></div>`,\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], context: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    _isDisabled() {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    }\n    constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the popover opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover closing animation has finished. Contains no payload.\n         *\n         * At this point popover is not in the DOM anymore.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$1++}`;\n        this._windowRef = null;\n        this.animation = config.animation;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.popperOptions = config.popperOptions;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._positioning = ngbPositioning();\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            // this type assertion is safe because otherwise _isDisabled would return true\n            const { windowRef, transition$ } = this._popupService.open(this.ngbPopover, context ?? this.popoverContext, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('title', this.popoverTitle);\n            this._windowRef.setInput('context', context ?? this.popoverContext);\n            this._windowRef.setInput('popoverClass', this.popoverClass);\n            this._windowRef.setInput('id', this._ngbPopoverWindowId);\n            this._renderer.setAttribute(this._getPositionTargetElement(), 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    appendToBody: this.container === 'body',\n                    baseClass: 'bs-popover',\n                    updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 8])(options)),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [\n                this._windowRef.location.nativeElement,\n            ]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._getPositionTargetElement(), 'aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._zoneSubscription?.unsubscribe();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ ngbPopover, popoverTitle, disablePopover, popoverClass }) {\n        if (popoverClass && this.isOpen()) {\n            this._windowRef.instance.popoverClass = popoverClass.currentValue;\n        }\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._elementRef.nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopover, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: NgbPopoverConfig }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbPopover, isStandalone: true, selector: \"[ngbPopover]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", popoverContext: \"popoverContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopover, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover', standalone: true }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: NgbPopoverConfig }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], ngbPopover: [{\n                type: Input\n            }], popoverTitle: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disablePopover: [{\n                type: Input\n            }], popoverClass: [{\n                type: Input\n            }], popoverContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbPopoverModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverModule, imports: [NgbPopover], exports: [NgbPopover] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbPopover],\n                    exports: [NgbPopover],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.ariaLabel = 'progress bar';\n        this.striped = false;\n        this.showValue = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    /**\n     * The maximal value to be displayed in the progress bar.\n     *\n     * Should be a positive number. Will default to 100 otherwise.\n     */\n    set max(max) {\n        this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    }\n    get max() {\n        return this._max;\n    }\n    constructor(config) {\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.ariaLabel = config.ariaLabel;\n        this.striped = config.striped;\n        this.textType = config.textType;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    getValue() {\n        return getValueInRange(this.value, this.max);\n    }\n    getPercentValue() {\n        return (100 * this.getValue()) / this.max;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbar, deps: [{ token: NgbProgressbarConfig }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbProgressbar, isStandalone: true, selector: \"ngb-progressbar\", inputs: { max: \"max\", animated: \"animated\", ariaLabel: \"ariaLabel\", striped: \"striped\", showValue: \"showValue\", textType: \"textType\", type: \"type\", value: \"value\", height: \"height\" }, host: { attributes: { \"role\": \"progressbar\", \"aria-valuemin\": \"0\" }, properties: { \"attr.aria-valuenow\": \"getValue()\", \"attr.aria-valuemax\": \"max\", \"attr.aria-label\": \"ariaLabel\", \"style.height\": \"this.height\" }, classAttribute: \"progress\" }, ngImport: i0, template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"getPercentValue()\"\n\t\t>\n\t\t\t<span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span\n\t\t\t><ng-content></ng-content>\n\t\t</div>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: PercentPipe, name: \"percent\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-progressbar',\n                    standalone: true,\n                    imports: [NgIf, PercentPipe],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'progress',\n                        role: 'progressbar',\n                        '[attr.aria-valuenow]': 'getValue()',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-label]': 'ariaLabel',\n                    },\n                    template: `\n\t\t<div\n\t\t\tclass=\"progress-bar{{ type ? (textType ? ' bg-' + type : ' text-bg-' + type) : '' }}{{\n\t\t\t\ttextType ? ' text-' + textType : ''\n\t\t\t}}\"\n\t\t\t[class.progress-bar-animated]=\"animated\"\n\t\t\t[class.progress-bar-striped]=\"striped\"\n\t\t\t[style.width.%]=\"getPercentValue()\"\n\t\t>\n\t\t\t<span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{ getValue() / max | percent }}</span\n\t\t\t><ng-content></ng-content>\n\t\t</div>\n\t`,\n                }]\n        }], ctorParameters: function () { return [{ type: NgbProgressbarConfig }]; }, propDecorators: { max: [{\n                type: Input\n            }], animated: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], striped: [{\n                type: Input\n            }], showValue: [{\n                type: Input\n            }], textType: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ required: true }]\n            }], height: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: ['style.height']\n            }] } });\n\nclass NgbProgressbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarModule, imports: [NgbProgressbar], exports: [NgbProgressbar] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbProgressbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbProgressbar],\n                    exports: [NgbProgressbar],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n        this.tabindex = 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    /**\n     * Allows to provide a function to set a custom aria-valuetext\n     *\n     * @since 14.1.0\n     */\n    ariaValueText(current, max) {\n        return `${current} out of ${max}`;\n    }\n    constructor(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the rating is changed.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.max = config.max;\n        this.readonly = config.readonly;\n        this.tabindex = config.tabindex;\n    }\n    isInteractive() {\n        return !this.readonly && !this.disabled;\n    }\n    enter(value) {\n        if (this.isInteractive()) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    handleClick(value) {\n        if (this.isInteractive()) {\n            this.update(this.resettable && this.rate === value ? 0 : value);\n        }\n    }\n    handleKeyDown(event) {\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.ArrowDown:\n            case Key.ArrowLeft:\n                this.update(this.rate - 1);\n                break;\n            case Key.ArrowUp:\n            case Key.ArrowRight:\n                this.update(this.rate + 1);\n                break;\n            case Key.Home:\n                this.update(0);\n                break;\n            case Key.End:\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n        if (changes['max']) {\n            this._updateMax();\n        }\n    }\n    ngOnInit() {\n        this._setupContexts();\n        this._updateState(this.rate);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    update(value, internalChange = true) {\n        const newRate = getValueInRange(value, this.max, 0);\n        if (this.isInteractive() && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((context, index) => (context.fill = Math.round(getValueInRange(nextValue - index, 1, 0) * 100)));\n    }\n    _updateMax() {\n        if (this.max > 0) {\n            this._setupContexts();\n            this.update(this.rate);\n        }\n    }\n    _setupContexts() {\n        this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRating, deps: [{ token: NgbRatingConfig }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbRating, isStandalone: true, selector: \"ngb-rating\", inputs: { max: \"max\", rate: \"rate\", readonly: \"readonly\", resettable: \"resettable\", starTemplate: \"starTemplate\", tabindex: \"tabindex\", ariaValueText: \"ariaValueText\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, host: { attributes: { \"role\": \"slider\", \"aria-valuemin\": \"0\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\", \"mouseleave\": \"reset()\" }, properties: { \"tabindex\": \"disabled ? -1 : tabindex\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuenow\": \"nextRate\", \"attr.aria-valuetext\": \"ariaValueText(nextRate, max)\", \"attr.aria-disabled\": \"readonly ? true : null\" }, classAttribute: \"d-inline-flex\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }], queries: [{ propertyName: \"starTemplateFromContent\", first: true, predicate: TemplateRef, descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t>\n\t\t\t\t</ng-template>\n\t\t\t</span>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRating, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-rating',\n                    standalone: true,\n                    imports: [NgFor, NgTemplateOutlet],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        class: 'd-inline-flex',\n                        '[tabindex]': 'disabled ? -1 : tabindex',\n                        role: 'slider',\n                        'aria-valuemin': '0',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuenow]': 'nextRate',\n                        '[attr.aria-valuetext]': 'ariaValueText(nextRate, max)',\n                        '[attr.aria-disabled]': 'readonly ? true : null',\n                        '(blur)': 'handleBlur()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '(mouseleave)': 'reset()',\n                    },\n                    template: `\n\t\t<ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n\t\t\t<span class=\"visually-hidden\">({{ index < nextRate ? '*' : ' ' }})</span>\n\t\t\t<span\n\t\t\t\t(mouseenter)=\"enter(index + 1)\"\n\t\t\t\t(click)=\"handleClick(index + 1)\"\n\t\t\t\t[style.cursor]=\"isInteractive() ? 'pointer' : 'default'\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"contexts[index]\"\n\t\t\t\t>\n\t\t\t\t</ng-template>\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbRating), multi: true }],\n                }]\n        }], ctorParameters: function () { return [{ type: NgbRatingConfig }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { max: [{\n                type: Input\n            }], rate: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], resettable: [{\n                type: Input\n            }], starTemplate: [{\n                type: Input\n            }], starTemplateFromContent: [{\n                type: ContentChild,\n                args: [TemplateRef, { static: false }]\n            }], tabindex: [{\n                type: Input\n            }], ariaValueText: [{\n                type: Input\n            }], hover: [{\n                type: Output\n            }], leave: [{\n                type: Output\n            }], rateChange: [{\n                type: Output\n            }] } });\n\nclass NgbRatingModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingModule, imports: [NgbRating], exports: [NgbRating] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbRatingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbRating],\n                    exports: [NgbRating],\n                }]\n        }] });\n\nfunction toFragmentElement(container, id) {\n    if (!container || id == null) {\n        return null;\n    }\n    return isString(id) ? container.querySelector(`#${CSS.escape(id)}`) : id;\n}\nfunction getOrderedFragments(container, fragments) {\n    const selector = [...fragments].map(({ id }) => `#${CSS.escape(id)}`).join(',');\n    return Array.from(container.querySelectorAll(selector));\n}\nconst defaultProcessChanges = (state, changeActive, ctx) => {\n    const { rootElement, fragments, scrollSpy, options, entries } = state;\n    const orderedFragments = getOrderedFragments(rootElement, fragments);\n    if (!ctx.initialized) {\n        ctx.initialized = true;\n        ctx.gapFragment = null;\n        ctx.visibleFragments = new Set();\n        // special case when one of the fragments was pre-selected\n        const preSelectedFragment = toFragmentElement(rootElement, options?.initialFragment);\n        if (preSelectedFragment) {\n            scrollSpy.scrollTo(preSelectedFragment);\n            return;\n        }\n    }\n    for (const entry of entries) {\n        const { isIntersecting, target: fragment } = entry;\n        // 1. an entry became visible\n        if (isIntersecting) {\n            // if we were in-between two elements, we have to clear it up\n            if (ctx.gapFragment) {\n                ctx.visibleFragments.delete(ctx.gapFragment);\n                ctx.gapFragment = null;\n            }\n            ctx.visibleFragments.add(fragment);\n        }\n        // 2. an entry became invisible\n        else {\n            ctx.visibleFragments.delete(fragment);\n            // nothing is visible anymore, but something just was actually\n            if (ctx.visibleFragments.size === 0 && scrollSpy.active !== '') {\n                // 2.1 scrolling down - keeping the same element\n                if (entry.boundingClientRect.top < entry.rootBounds.top) {\n                    ctx.gapFragment = fragment;\n                    ctx.visibleFragments.add(ctx.gapFragment);\n                }\n                // 2.2 scrolling up - getting the previous element\n                else {\n                    // scrolling up and no more fragments above\n                    if (fragment === orderedFragments[0]) {\n                        ctx.gapFragment = null;\n                        ctx.visibleFragments.clear();\n                        changeActive('');\n                        return;\n                    }\n                    // getting previous fragment\n                    else {\n                        const fragmentIndex = orderedFragments.indexOf(fragment);\n                        ctx.gapFragment = orderedFragments[fragmentIndex - 1] || null;\n                        if (ctx.gapFragment) {\n                            ctx.visibleFragments.add(ctx.gapFragment);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // getting the first visible element in the DOM order of the fragments\n    for (const fragment of orderedFragments) {\n        if (ctx.visibleFragments.has(fragment)) {\n            changeActive(fragment.id);\n            break;\n        }\n    }\n};\n\n/**\n * A configuration service for the [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all scrollspies used in the application.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyConfig {\n    constructor() {\n        this.scrollBehavior = 'smooth';\n        this.processChanges = defaultProcessChanges;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst MATCH_THRESHOLD = 3;\n/**\n * A scrollspy service that allows tracking of elements scrolling in and out of view.\n *\n * It can be instantiated manually, or automatically by the `ngbScrollSpy` directive.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyService {\n    constructor() {\n        this._observer = null;\n        this._containerElement = null;\n        this._fragments = new Set();\n        this._preRegisteredFragments = new Set();\n        this._active$ = new Subject();\n        this._distinctActive$ = this._active$.pipe(distinctUntilChanged());\n        this._active = '';\n        this._config = inject(NgbScrollSpyConfig);\n        this._document = inject(DOCUMENT);\n        this._platformId = inject(PLATFORM_ID);\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._diChangeDetectorRef = inject(ChangeDetectorRef, { optional: true });\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._zone = inject(NgZone);\n        this._distinctActive$.pipe(takeUntilDestroyed()).subscribe((active) => {\n            this._active = active;\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    /**\n     * Getter for the currently active fragment id. Returns empty string if none.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * An observable emitting the currently active fragment. Emits empty string if none.\n     */\n    get active$() {\n        return this._distinctActive$;\n    }\n    /**\n     * Starts the scrollspy service and observes specified fragments.\n     *\n     * You can specify a list of options to pass, like the root element, initial fragment, scroll behavior, etc.\n     * See the [`NgbScrollSpyOptions`](#/components/scrollspy/api#NgbScrollSpyOptions) interface for more details.\n     */\n    start(options) {\n        if (isPlatformBrowser(this._platformId)) {\n            this._cleanup();\n            const { root, rootMargin, scrollBehavior, threshold, fragments, changeDetectorRef, processChanges } = {\n                ...options,\n            };\n            this._containerElement = root ?? this._document.documentElement;\n            this._changeDetectorRef = changeDetectorRef ?? this._diChangeDetectorRef;\n            this._scrollBehavior = scrollBehavior ?? this._config.scrollBehavior;\n            const processChangesFn = processChanges ?? this._config.processChanges;\n            const context = {};\n            this._observer = new IntersectionObserver((entries) => processChangesFn({\n                entries,\n                rootElement: this._containerElement,\n                fragments: this._fragments,\n                scrollSpy: this,\n                options: { ...options },\n            }, (active) => this._active$.next(active), context), {\n                root: root ?? this._document,\n                ...(rootMargin && { rootMargin }),\n                ...(threshold && { threshold }),\n            });\n            // merging fragments added before starting and the ones passed as options\n            for (const element of [...this._preRegisteredFragments, ...(fragments ?? [])]) {\n                this.observe(element);\n            }\n            this._preRegisteredFragments.clear();\n        }\n    }\n    /**\n     * Stops the service and unobserves all fragments.\n     */\n    stop() {\n        this._cleanup();\n        this._active$.next('');\n    }\n    /**\n     * Scrolls to a fragment, it must be known to the service and contained in the root element.\n     * An id or an element reference can be passed.\n     *\n     * [`NgbScrollToOptions`](#/components/scrollspy/api#NgbScrollToOptions) can be passed.\n     */\n    scrollTo(fragment, options) {\n        const { behavior } = { behavior: this._scrollBehavior, ...options };\n        if (this._containerElement) {\n            const fragmentElement = toFragmentElement(this._containerElement, fragment);\n            if (fragmentElement) {\n                const heightPx = fragmentElement.offsetTop - this._containerElement.offsetTop;\n                this._containerElement.scrollTo({ top: heightPx, behavior });\n                let lastOffset = this._containerElement.scrollTop;\n                let matchCounter = 0;\n                // we should update the active section only after scrolling is finished\n                // and there is no clean way to do it at the moment\n                const containerElement = this._containerElement;\n                this._zone.runOutsideAngular(() => {\n                    const updateActiveWhenScrollingIsFinished = () => {\n                        const sameOffsetAsLastTime = lastOffset === containerElement.scrollTop;\n                        if (sameOffsetAsLastTime) {\n                            matchCounter++;\n                        }\n                        else {\n                            matchCounter = 0;\n                        }\n                        if (!sameOffsetAsLastTime || (sameOffsetAsLastTime && matchCounter < MATCH_THRESHOLD)) {\n                            lastOffset = containerElement.scrollTop;\n                            requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                        }\n                        else {\n                            this._zone.run(() => this._active$.next(fragmentElement.id));\n                        }\n                    };\n                    requestAnimationFrame(updateActiveWhenScrollingIsFinished);\n                });\n            }\n        }\n    }\n    /**\n     * Adds a fragment to observe. It must be contained in the root element.\n     * An id or an element reference can be passed.\n     */\n    observe(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.add(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement && !this._fragments.has(fragmentElement)) {\n            this._fragments.add(fragmentElement);\n            this._observer.observe(fragmentElement);\n        }\n    }\n    /**\n     * Unobserves a fragment.\n     * An id or an element reference can be passed.\n     */\n    unobserve(fragment) {\n        if (!this._observer) {\n            this._preRegisteredFragments.delete(fragment);\n            return;\n        }\n        const fragmentElement = toFragmentElement(this._containerElement, fragment);\n        if (fragmentElement) {\n            this._fragments.delete(fragmentElement);\n            // we're removing and re-adding all current fragments to recompute active one\n            this._observer.disconnect();\n            for (const fragment of this._fragments) {\n                this._observer.observe(fragment);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._cleanup();\n    }\n    _cleanup() {\n        this._fragments.clear();\n        this._observer?.disconnect();\n        this._changeDetectorRef = this._diChangeDetectorRef;\n        this._scrollBehavior = this._config.scrollBehavior;\n        this._observer = null;\n        this._containerElement = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * A helper directive to that links menu items and fragments together.\n *\n * It will automatically add the `.active` class to the menu item when the associated fragment becomes active.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyItem {\n    constructor() {\n        this._changeDetector = inject(ChangeDetectorRef);\n        this._scrollSpyMenu = inject(NgbScrollSpyMenu, { optional: true });\n        this._scrollSpyAPI = this._scrollSpyMenu ?? inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._isActive = false;\n    }\n    /**\n     * References the scroll spy directive, the id of the associated fragment and the parent menu item.\n     *\n     * Can be used like:\n     *  - `ngbScrollSpyItem=\"fragmentId\"`\n     *  - `[ngbScrollSpyItem]=\"scrollSpy\" fragment=\"fragmentId\"\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId']\"` parent=\"parentId\"`\n     *  - `[ngbScrollSpyItem]=\"[scrollSpy, 'fragmentId', 'parentId']\"`\n     *\n     *  As well as together with `[fragment]` and `[parent]` inputs.\n     */\n    set data(data) {\n        if (Array.isArray(data)) {\n            this._scrollSpyAPI = data[0];\n            this.fragment = data[1];\n            this.parent ??= data[2];\n        }\n        else if (data instanceof NgbScrollSpy) {\n            this._scrollSpyAPI = data;\n        }\n        else if (isString(data)) {\n            this.fragment = data;\n        }\n    }\n    ngOnInit() {\n        // if it is not a part of a bigger menu, it should handle activation itself\n        if (!this._scrollSpyMenu) {\n            this._scrollSpyAPI.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((active) => {\n                if (active === this.fragment) {\n                    this._activate();\n                }\n                else {\n                    this._deactivate();\n                }\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * @internal\n     */\n    _activate() {\n        this._isActive = true;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._activate();\n        }\n    }\n    /**\n     * @internal\n     */\n    _deactivate() {\n        this._isActive = false;\n        if (this._scrollSpyMenu) {\n            this._scrollSpyMenu.getItem(this.parent ?? '')?._deactivate();\n        }\n    }\n    /**\n     * Returns `true`, if the associated fragment is active.\n     */\n    isActive() {\n        return this._isActive;\n    }\n    /**\n     * Scrolls to the associated fragment.\n     */\n    scrollTo(options) {\n        this._scrollSpyAPI.scrollTo(this.fragment, options);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbScrollSpyItem, isStandalone: true, selector: \"[ngbScrollSpyItem]\", inputs: { data: [\"ngbScrollSpyItem\", \"data\"], fragment: \"fragment\", parent: \"parent\" }, host: { listeners: { \"click\": \"scrollTo();\" }, properties: { \"class.active\": \"isActive()\" } }, exportAs: [\"ngbScrollSpyItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyItem]',\n                    standalone: true,\n                    exportAs: 'ngbScrollSpyItem',\n                    host: {\n                        '[class.active]': 'isActive()',\n                        '(click)': 'scrollTo();',\n                    },\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['ngbScrollSpyItem']\n            }], fragment: [{\n                type: Input\n            }], parent: [{\n                type: Input\n            }] } });\n/**\n * An optional scroll spy menu directive to build hierarchical menus\n * and simplify the [`NgbScrollSpyItem`](#/components/scrollspy/api#NgbScrollSpyItem) configuration.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyMenu {\n    constructor() {\n        this._scrollSpyRef = inject(NgbScrollSpyService);\n        this._destroyRef = inject(DestroyRef);\n        this._map = new Map();\n        this._lastActiveItem = null;\n    }\n    set scrollSpy(scrollSpy) {\n        this._scrollSpyRef = scrollSpy;\n    }\n    get active() {\n        return this._scrollSpyRef.active;\n    }\n    get active$() {\n        return this._scrollSpyRef.active$;\n    }\n    scrollTo(fragment, options) {\n        this._scrollSpyRef.scrollTo(fragment, options);\n    }\n    getItem(id) {\n        return this._map.get(id);\n    }\n    ngAfterViewInit() {\n        this._items.changes.pipe(takeUntilDestroyed(this._destroyRef)).subscribe(() => this._rebuildMap());\n        this._rebuildMap();\n        this._scrollSpyRef.active$.pipe(takeUntilDestroyed(this._destroyRef)).subscribe((activeId) => {\n            this._lastActiveItem?._deactivate();\n            const item = this._map.get(activeId);\n            if (item) {\n                item._activate();\n                this._lastActiveItem = item;\n            }\n        });\n    }\n    _rebuildMap() {\n        this._map.clear();\n        for (let item of this._items) {\n            this._map.set(item.fragment, item);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbScrollSpyMenu, isStandalone: true, selector: \"[ngbScrollSpyMenu]\", inputs: { scrollSpy: [\"ngbScrollSpyMenu\", \"scrollSpy\"] }, queries: [{ propertyName: \"_items\", predicate: NgbScrollSpyItem, descendants: true }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyMenu, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyMenu]',\n                    standalone: true,\n                }]\n        }], propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [NgbScrollSpyItem, { descendants: true }]\n            }], scrollSpy: [{\n                type: Input,\n                args: ['ngbScrollSpyMenu']\n            }] } });\n/**\n * A directive to put on a scrollable container.\n *\n * It will instantiate a [`NgbScrollSpyService`](#/components/scrollspy/api#NgbScrollSpyService).\n *\n * @since 15.1.0\n */\nclass NgbScrollSpy {\n    constructor() {\n        this._initialFragment = null;\n        this._service = inject(NgbScrollSpyService);\n        this._nativeElement = inject(ElementRef).nativeElement;\n        /**\n         * An event raised when the active section changes.\n         *\n         * Payload is the id of the new active section, empty string if none.\n         */\n        this.activeChange = this._service.active$;\n    }\n    set active(fragment) {\n        this._initialFragment = fragment;\n        this.scrollTo(fragment);\n    }\n    /**\n     * Getter/setter for the currently active fragment id.\n     */\n    get active() {\n        return this._service.active;\n    }\n    /**\n     * Returns an observable that emits currently active section id.\n     */\n    get active$() {\n        return this._service.active$;\n    }\n    ngAfterViewInit() {\n        this._service.start({\n            processChanges: this.processChanges,\n            root: this._nativeElement,\n            rootMargin: this.rootMargin,\n            threshold: this.threshold,\n            ...(this._initialFragment && { initialFragment: this._initialFragment }),\n        });\n    }\n    /**\n     * @internal\n     */\n    _registerFragment(fragment) {\n        this._service.observe(fragment.id);\n    }\n    /**\n     * @internal\n     */\n    _unregisterFragment(fragment) {\n        this._service.unobserve(fragment.id);\n    }\n    /**\n     * Scrolls to a fragment that is identified by the `ngbScrollSpyFragment` directive.\n     * An id or an element reference can be passed.\n     */\n    scrollTo(fragment, options) {\n        this._service.scrollTo(fragment, {\n            ...(this.scrollBehavior && { behavior: this.scrollBehavior }),\n            ...options,\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpy, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbScrollSpy, isStandalone: true, selector: \"[ngbScrollSpy]\", inputs: { processChanges: \"processChanges\", rootMargin: \"rootMargin\", scrollBehavior: \"scrollBehavior\", threshold: \"threshold\", active: \"active\" }, outputs: { activeChange: \"activeChange\" }, host: { attributes: { \"tabindex\": \"0\" }, styleAttribute: \"overflow-y: auto\" }, providers: [NgbScrollSpyService], exportAs: [\"ngbScrollSpy\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpy, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpy]',\n                    standalone: true,\n                    exportAs: 'ngbScrollSpy',\n                    host: {\n                        tabindex: '0',\n                        style: 'overflow-y: auto',\n                    },\n                    providers: [NgbScrollSpyService],\n                }]\n        }], propDecorators: { processChanges: [{\n                type: Input\n            }], rootMargin: [{\n                type: Input\n            }], scrollBehavior: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], activeChange: [{\n                type: Output\n            }] } });\n/**\n * A directive to put on a fragment observed inside a scrollspy container.\n *\n * @since 15.1.0\n */\nclass NgbScrollSpyFragment {\n    constructor() {\n        this._destroyRef = inject(DestroyRef);\n        this._scrollSpy = inject(NgbScrollSpy);\n    }\n    ngAfterViewInit() {\n        this._scrollSpy._registerFragment(this);\n        this._destroyRef.onDestroy(() => this._scrollSpy._unregisterFragment(this));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyFragment, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbScrollSpyFragment, isStandalone: true, selector: \"[ngbScrollSpyFragment]\", inputs: { id: [\"ngbScrollSpyFragment\", \"id\"] }, host: { properties: { \"id\": \"id\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyFragment, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngbScrollSpyFragment]',\n                    standalone: true,\n                    host: {\n                        '[id]': 'id',\n                    },\n                }]\n        }], propDecorators: { id: [{\n                type: Input,\n                args: ['ngbScrollSpyFragment']\n            }] } });\n\nclass NgbScrollSpyModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyModule, imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu], exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbScrollSpyModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                    exports: [NgbScrollSpy, NgbScrollSpyItem, NgbScrollSpyFragment, NgbScrollSpyMenu],\n                }]\n        }] });\n\nclass NgbTime {\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    changeHour(step = 1) {\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    changeMinute(step = 1) {\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + (minute % 60) : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    changeSecond(step = 1) {\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + (second % 60) : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    toString() {\n        return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`;\n    }\n}\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\nclass NgbTimeAdapter {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeAdapter, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeAdapter, providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeAdapter, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }]\n        }] });\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    fromModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    toModel(time) {\n        return time && isInteger(time.hour) && isInteger(time.minute)\n            ? { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null }\n            : null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeStructAdapter, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeStructAdapter }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimeStructAdapter, decorators: [{\n            type: Injectable\n        }] });\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n    return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\nclass NgbTimepickerI18n {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18n, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18n, providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [{ token: LOCALE_ID }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18n, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID] }]\n        }] });\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    constructor(locale) {\n        super();\n        this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    }\n    getMorningPeriod() {\n        return this._periods[0];\n    }\n    getAfternoonPeriod() {\n        return this._periods[1];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18nDefault, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18nDefault }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerI18nDefault, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\nconst FILTER_REGEX = /[^0-9]/g;\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    get hourStep() {\n        return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    get minuteStep() {\n        return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    get secondStep() {\n        return this._secondStep;\n    }\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    writeValue(value) {\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Increments the hours by the given step.\n     */\n    changeHour(step) {\n        this.model?.changeHour(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the minutes by the given step.\n     */\n    changeMinute(step) {\n        this.model?.changeMinute(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Increments the seconds by the given step.\n     */\n    changeSecond(step) {\n        this.model?.changeSecond(step);\n        this.propagateModelChange();\n    }\n    /**\n     * Update hours with the new value.\n     */\n    updateHour(newVal) {\n        const isPM = this.model ? this.model.hour >= 12 : false;\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && ((isPM && enteredHour < 12) || (!isPM && enteredHour === 12))) {\n            this.model?.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model?.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    /**\n     * Update minutes with the new value.\n     */\n    updateMinute(newVal) {\n        this.model?.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * Update seconds with the new value.\n     */\n    updateSecond(newVal) {\n        this.model?.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    toggleMeridian() {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    formatInput(input) {\n        input.value = input.value.replace(FILTER_REGEX, '');\n    }\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    formatMinSec(value) {\n        return padNumber(isNumber(value) ? value : NaN);\n    }\n    handleBlur() {\n        this.onTouched();\n    }\n    get isSmallSize() {\n        return this.size === 'small';\n    }\n    get isLargeSize() {\n        return this.size === 'large';\n    }\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model?.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepicker, deps: [{ token: NgbTimepickerConfig }, { token: NgbTimeAdapter }, { token: i0.ChangeDetectorRef }, { token: NgbTimepickerI18n }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbTimepicker, isStandalone: true, selector: \"ngb-timepicker\", inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], exportAs: [\"ngbTimepicker\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-container *ngIf=\"model && model.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{\n\t\t\t\t\t\t\ti18n.getAfternoonPeriod()\n\t\t\t\t\t\t}}</ng-container>\n\t\t\t\t\t\t<ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</fieldset>\n\t`, isInline: true, styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepicker, decorators: [{\n            type: Component,\n            args: [{ exportAs: 'ngbTimepicker', selector: 'ngb-timepicker', standalone: true, imports: [NgIf], encapsulation: ViewEncapsulation.None, template: `\n\t\t<fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n\t\t\t<div class=\"ngb-tp\">\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-hour\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"HH\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.HH\"\n\t\t\t\t\t\t[value]=\"formatHour(model?.hour)\"\n\t\t\t\t\t\t(change)=\"updateHour($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Hours\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.hours\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeHour(-hourStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div class=\"ngb-tp-input-container ngb-tp-minute\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"MM\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.MM\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.minute)\"\n\t\t\t\t\t\t(change)=\"updateMinute($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Minutes\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.minutes\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeMinute(-minuteStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n\t\t\t\t<div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclass=\"ngb-tp-input form-control\"\n\t\t\t\t\t\t[class.form-control-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.form-control-lg]=\"isLargeSize\"\n\t\t\t\t\t\tmaxlength=\"2\"\n\t\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\t\tplaceholder=\"SS\"\n\t\t\t\t\t\ti18n-placeholder=\"@@ngb.timepicker.SS\"\n\t\t\t\t\t\t[value]=\"formatMinSec(model?.second)\"\n\t\t\t\t\t\t(change)=\"updateSecond($any($event).target.value)\"\n\t\t\t\t\t\t[readOnly]=\"readonlyInputs\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\taria-label=\"Seconds\"\n\t\t\t\t\t\ti18n-aria-label=\"@@ngb.timepicker.seconds\"\n\t\t\t\t\t\t(blur)=\"handleBlur()\"\n\t\t\t\t\t\t(input)=\"formatInput($any($event).target)\"\n\t\t\t\t\t\t(keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n\t\t\t\t\t\t(keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\t*ngIf=\"spinners\"\n\t\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t(click)=\"changeSecond(-secondStep)\"\n\t\t\t\t\t\tclass=\"btn btn-link\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span class=\"chevron ngb-tp-chevron bottom\"></span>\n\t\t\t\t\t\t<span class=\"visually-hidden\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n\t\t\t\t<div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-outline-primary\"\n\t\t\t\t\t\t[class.btn-sm]=\"isSmallSize\"\n\t\t\t\t\t\t[class.btn-lg]=\"isLargeSize\"\n\t\t\t\t\t\t[disabled]=\"disabled\"\n\t\t\t\t\t\t[class.disabled]=\"disabled\"\n\t\t\t\t\t\t(click)=\"toggleMeridian()\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ng-container *ngIf=\"model && model.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{\n\t\t\t\t\t\t\ti18n.getAfternoonPeriod()\n\t\t\t\t\t\t}}</ng-container>\n\t\t\t\t\t\t<ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</fieldset>\n\t`, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTimepicker), multi: true }], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:flex;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron:before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-minute,.ngb-tp-second,.ngb-tp-meridian{display:flex;flex-direction:column;align-items:center;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NgbTimepickerConfig }, { type: NgbTimeAdapter }, { type: i0.ChangeDetectorRef }, { type: NgbTimepickerI18n }]; }, propDecorators: { meridian: [{\n                type: Input\n            }], spinners: [{\n                type: Input\n            }], seconds: [{\n                type: Input\n            }], hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondStep: [{\n                type: Input\n            }], readonlyInputs: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass NgbTimepickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerModule, imports: [NgbTimepicker], exports: [NgbTimepicker] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTimepicker],\n                    exports: [NgbTimepicker],\n                }]\n        }] });\n\nconst ngbToastFadeInTransition = (element, animation) => {\n    const { classList } = element;\n    if (animation) {\n        classList.add('fade');\n    }\n    else {\n        classList.add('show');\n        return;\n    }\n    reflow(element);\n    classList.add('show', 'showing');\n    return () => {\n        classList.remove('showing');\n    };\n};\nconst ngbToastFadeOutTransition = ({ classList }) => {\n    classList.add('showing');\n    return () => {\n        classList.remove('show', 'showing');\n    };\n};\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\nclass NgbToastConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autohide = true;\n        this.delay = 5000;\n        this.ariaLive = 'polite';\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\nclass NgbToastHeader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbToastHeader, isStandalone: true, selector: \"[ngbToastHeader]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastHeader, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbToastHeader]', standalone: true }]\n        }] });\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\nclass NgbToast {\n    constructor(ariaLive, config, _zone, _element) {\n        this.ariaLive = ariaLive;\n        this._zone = _zone;\n        this._element = _element;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired after the animation triggered by calling `.show()` method has finished.\n         *\n         * @since 8.0.0\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event fired after the animation triggered by calling `.hide()` method has finished.\n         *\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross\n         *\n         * Additionally this output is purely informative. The toast won't be removed from DOM automatically, it's up\n         * to the user to take care of that.\n         *\n         * @since 8.0.0\n         */\n        this.hidden = new EventEmitter();\n        if (this.ariaLive == null) {\n            this.ariaLive = config.ariaLive;\n        }\n        this.delay = config.delay;\n        this.autohide = config.autohide;\n        this.animation = config.animation;\n    }\n    ngAfterContentInit() {\n        this._zone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._init();\n            this.show();\n        });\n    }\n    ngOnChanges(changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    }\n    /**\n     * Triggers toast closing programmatically.\n     *\n     * The returned observable will emit and be completed once the closing transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(hidden)` output\n     *\n     * @since 8.0.0\n     */\n    hide() {\n        this._clearTimeout();\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeOutTransition, {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n        transition.subscribe(() => {\n            this.hidden.emit();\n        });\n        return transition;\n    }\n    /**\n     * Triggers toast opening programmatically.\n     *\n     * The returned observable will emit and be completed once the opening transition has finished.\n     * If the animations are turned off this happens synchronously.\n     *\n     * Alternatively you could listen or subscribe to the `(shown)` output\n     *\n     * @since 8.0.0\n     */\n    show() {\n        const transition = ngbRunTransition(this._zone, this._element.nativeElement, ngbToastFadeInTransition, {\n            animation: this.animation,\n            runningTransition: 'continue',\n        });\n        transition.subscribe(() => {\n            this.shown.emit();\n        });\n        return transition;\n    }\n    _init() {\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout(() => this.hide(), this.delay);\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToast, deps: [{ token: 'aria-live', attribute: true }, { token: NgbToastConfig }, { token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbToast, isStandalone: true, selector: \"ngb-toast\", inputs: { animation: \"animation\", delay: \"delay\", autohide: \"autohide\", header: \"header\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, host: { attributes: { \"role\": \"alert\", \"aria-atomic\": \"true\" }, properties: { \"attr.aria-live\": \"ariaLive\", \"class.fade\": \"animation\" }, classAttribute: \"toast\" }, queries: [{ propertyName: \"contentHeaderTpl\", first: true, predicate: NgbToastHeader, descendants: true, read: TemplateRef, static: true }], exportAs: [\"ngbToast\"], usesOnChanges: true, ngImport: i0, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t<ng-template [ngIf]=\"contentHeaderTpl || header\">\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-template>\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`, isInline: true, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToast, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-toast', exportAs: 'ngbToast', standalone: true, imports: [NgIf, NgTemplateOutlet], encapsulation: ViewEncapsulation.None, host: {\n                        role: 'alert',\n                        '[attr.aria-live]': 'ariaLive',\n                        'aria-atomic': 'true',\n                        class: 'toast',\n                        '[class.fade]': 'animation',\n                    }, template: `\n\t\t<ng-template #headerTpl>\n\t\t\t<strong class=\"me-auto\">{{ header }}</strong>\n\t\t</ng-template>\n\t\t<ng-template [ngIf]=\"contentHeaderTpl || header\">\n\t\t\t<div class=\"toast-header\">\n\t\t\t\t<ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-close\"\n\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\ti18n-aria-label=\"@@ngb.toast.close-aria\"\n\t\t\t\t\t(click)=\"hide()\"\n\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-template>\n\t\t<div class=\"toast-body\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t`, styles: [\"ngb-toast{display:block}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }, { type: NgbToastConfig }, { type: i0.NgZone }, { type: i0.ElementRef }]; }, propDecorators: { animation: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], autohide: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], contentHeaderTpl: [{\n                type: ContentChild,\n                args: [NgbToastHeader, { read: TemplateRef, static: true }]\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }] } });\n\nclass NgbToastModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastModule, imports: [NgbToast, NgbToastHeader], exports: [NgbToast, NgbToastHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbToastModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbToast, NgbToastHeader],\n                    exports: [NgbToast, NgbToastHeader],\n                }]\n        }] });\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.popperOptions = (options) => options;\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\nlet nextId = 0;\nclass NgbTooltipWindow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbTooltipWindow, isStandalone: true, selector: \"ngb-tooltip-window\", inputs: { animation: \"animation\", id: \"id\", tooltipClass: \"tooltipClass\" }, host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"tooltip\\\" + (tooltipClass ? \\\" \\\" + tooltipClass : \\\"\\\")\", \"class.fade\": \"animation\", \"id\": \"id\" }, styleAttribute: \"position: absolute;\" }, ngImport: i0, template: `<div class=\"tooltip-arrow\" data-popper-arrow></div\n\t\t><div class=\"tooltip-inner\"><ng-content></ng-content></div>`, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-tooltip-window',\n                    standalone: true,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '[class]': '\"tooltip\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n                        '[class.fade]': 'animation',\n                        role: 'tooltip',\n                        '[id]': 'id',\n                        style: 'position: absolute;',\n                    },\n                    template: `<div class=\"tooltip-arrow\" data-popper-arrow></div\n\t\t><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n                }]\n        }], propDecorators: { animation: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }] } });\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    constructor(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        /**\n         * An event emitted when the tooltip opening animation has finished. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the tooltip closing animation has finished. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n        this._windowRef = null;\n        this.animation = config.animation;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.popperOptions = config.popperOptions;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this.tooltipClass = config.tooltipClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n        this._positioning = ngbPositioning();\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    get ngbTooltip() {\n        return this._ngbTooltip;\n    }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    open(context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            const { windowRef, transition$ } = this._popupService.open(this._ngbTooltip, context ?? this.tooltipContext, this.animation);\n            this._windowRef = windowRef;\n            this._windowRef.setInput('animation', this.animation);\n            this._windowRef.setInput('tooltipClass', this.tooltipClass);\n            this._windowRef.setInput('id', this._ngbTooltipWindowId);\n            this._renderer.setAttribute(this._getPositionTargetElement(), 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                this._positioning.createPopper({\n                    hostElement: this._getPositionTargetElement(),\n                    targetElement: this._windowRef.location.nativeElement,\n                    placement: this.placement,\n                    appendToBody: this.container === 'body',\n                    baseClass: 'bs-tooltip',\n                    updatePopperOptions: (options) => this.popperOptions(options),\n                });\n                Promise.resolve().then(() => {\n                    // This update is required for correct arrow placement\n                    this._positioning.update();\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                });\n            });\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [\n                this._windowRef.location.nativeElement,\n            ]);\n            transition$.subscribe(() => this.shown.emit());\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    close(animation = this.animation) {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._getPositionTargetElement(), 'aria-describedby');\n            this._popupService.close(animation).subscribe(() => {\n                this._windowRef = null;\n                this._positioning.destroy();\n                this._zoneSubscription?.unsubscribe();\n                this.hidden.emit();\n                this._changeDetector.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n    isOpen() {\n        return this._windowRef != null;\n    }\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    ngOnChanges({ tooltipClass }) {\n        if (tooltipClass && this.isOpen()) {\n            this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n        }\n    }\n    ngOnDestroy() {\n        this.close(false);\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        this._unregisterListenersFn?.();\n    }\n    _getPositionTargetElement() {\n        return ((isString(this.positionTarget) ? this._document.querySelector(this.positionTarget) : this.positionTarget) ||\n            this._elementRef.nativeElement);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltip, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: NgbTooltipConfig }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbTooltip, isStandalone: true, selector: \"[ngbTooltip]\", inputs: { animation: \"animation\", autoClose: \"autoClose\", placement: \"placement\", popperOptions: \"popperOptions\", triggers: \"triggers\", positionTarget: \"positionTarget\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", tooltipContext: \"tooltipContext\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltip, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngbTooltip]', standalone: true, exportAs: 'ngbTooltip' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: NgbTooltipConfig }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, propDecorators: { animation: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], positionTarget: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], disableTooltip: [{\n                type: Input\n            }], tooltipClass: [{\n                type: Input\n            }], tooltipContext: [{\n                type: Input\n            }], openDelay: [{\n                type: Input\n            }], closeDelay: [{\n                type: Input\n            }], shown: [{\n                type: Output\n            }], hidden: [{\n                type: Output\n            }], ngbTooltip: [{\n                type: Input\n            }] } });\n\nclass NgbTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipModule, imports: [NgbTooltip], exports: [NgbTooltip] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbTooltip],\n                    exports: [NgbTooltip],\n                }]\n        }] });\n\n/**\n * A component that helps with text highlighting.\n *\n * It splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n        /**\n         * Boolean option to determine if the highlighting should be sensitive to accents or not.\n         *\n         * This feature is only available for browsers that implement the `String.normalize` function\n         * (typically not Internet Explorer).\n         * If you want to use this feature in a browser that does not implement `String.normalize`,\n         * you will have to include a polyfill in your application (`unorm` for example).\n         *\n         * @since 9.1.0\n         */\n        this.accentSensitive = true;\n    }\n    ngOnChanges(changes) {\n        if (!this.accentSensitive && !String.prototype.normalize) {\n            console.warn('The `accentSensitive` input in `ngb-highlight` cannot be set to `false` in a browser ' +\n                'that does not implement the `String.normalize` function. ' +\n                'You will have to include a polyfill in your application to use this feature in the current browser.');\n            this.accentSensitive = true;\n        }\n        const result = toString(this.result);\n        const terms = Array.isArray(this.term) ? this.term : [this.term];\n        const prepareTerm = (term) => (this.accentSensitive ? term : removeAccents(term));\n        const escapedTerms = terms.map((term) => regExpEscape(prepareTerm(toString(term)))).filter((term) => term);\n        const toSplit = this.accentSensitive ? result : removeAccents(result);\n        const parts = escapedTerms.length ? toSplit.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n        if (this.accentSensitive) {\n            this.parts = parts;\n        }\n        else {\n            let offset = 0;\n            this.parts = parts.map((part) => result.substring(offset, (offset += part.length)));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbHighlight, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbHighlight, isStandalone: true, selector: \"ngb-highlight\", inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\", accentSensitive: \"accentSensitive\" }, usesOnChanges: true, ngImport: i0, template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\"><span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template></ng-template>\", isInline: true, styles: [\".ngb-highlight{font-weight:700}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbHighlight, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-highlight', standalone: true, imports: [NgIf, NgFor], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n                        `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n                        `</ng-template>`, styles: [\".ngb-highlight{font-weight:700}\\n\"] }]\n        }], propDecorators: { highlightClass: [{\n                type: Input\n            }], result: [{\n                type: Input,\n                args: [{ required: true }]\n            }], term: [{\n                type: Input,\n                args: [{ required: true }]\n            }], accentSensitive: [{\n                type: Input\n            }] } });\n\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    hasActive() {\n        return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n    getActive() {\n        return this.results[this.activeIdx];\n    }\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    select(item) {\n        this.selectEvent.emit(item);\n    }\n    ngOnInit() {\n        this.resetActive();\n    }\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadWindow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbTypeaheadWindow, isStandalone: true, selector: \"ngb-typeahead-window\", inputs: { id: \"id\", focusFirst: \"focusFirst\", results: \"results\", term: \"term\", formatter: \"formatter\", resultTemplate: \"resultTemplate\", popupClass: \"popupClass\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"mousedown\": \"$event.preventDefault()\" }, properties: { \"class\": \"\\\"dropdown-menu show\\\" + (popupClass ? \\\" \\\" + popupClass : \\\"\\\")\", \"id\": \"id\" } }, exportAs: [\"ngbTypeaheadWindow\"], ngImport: i0, template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n\t\t</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + idx\"\n\t\t\t\t[class.active]=\"idx === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive(idx)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t`, isInline: true, dependencies: [{ kind: \"component\", type: NgbHighlight, selector: \"ngb-highlight\", inputs: [\"highlightClass\", \"result\", \"term\", \"accentSensitive\"] }, { kind: \"directive\", type: NgFor, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadWindow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-typeahead-window',\n                    exportAs: 'ngbTypeaheadWindow',\n                    standalone: true,\n                    imports: [NgbHighlight, NgFor, NgTemplateOutlet],\n                    encapsulation: ViewEncapsulation.None,\n                    host: {\n                        '(mousedown)': '$event.preventDefault()',\n                        '[class]': '\"dropdown-menu show\" + (popupClass ? \" \" + popupClass : \"\")',\n                        role: 'listbox',\n                        '[id]': 'id',\n                    },\n                    template: `\n\t\t<ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n\t\t\t<ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n\t\t</ng-template>\n\t\t<ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"dropdown-item\"\n\t\t\t\trole=\"option\"\n\t\t\t\t[id]=\"id + '-' + idx\"\n\t\t\t\t[class.active]=\"idx === activeIdx\"\n\t\t\t\t(mouseenter)=\"markActive(idx)\"\n\t\t\t\t(click)=\"select(result)\"\n\t\t\t>\n\t\t\t\t<ng-template\n\t\t\t\t\t[ngTemplateOutlet]=\"resultTemplate || rt\"\n\t\t\t\t\t[ngTemplateOutletContext]=\"{ result: result, term: term, formatter: formatter }\"\n\t\t\t\t></ng-template>\n\t\t\t</button>\n\t\t</ng-template>\n\t`,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], results: [{\n                type: Input\n            }], term: [{\n                type: Input\n            }], formatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectEvent: [{\n                type: Output,\n                args: ['select']\n            }], activeChangeEvent: [{\n                type: Output,\n                args: ['activeChange']\n            }] } });\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.selectOnExact = false;\n        this.showHint = false;\n        this.placement = ['bottom-start', 'bottom-end', 'top-start', 'top-end'];\n        this.popperOptions = (options) => options;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n    providedIn: 'root',\n    factory: ARIA_LIVE_DELAY_FACTORY,\n});\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\nfunction getLiveElement(document, lazyCreate = false) {\n    let element = document.body.querySelector('#ngb-live');\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('visually-hidden');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    constructor(_document, _delay) {\n        this._document = _document;\n        this._delay = _delay;\n    }\n    ngOnDestroy() {\n        const element = getLiveElement(this._document);\n        if (element) {\n            // if exists, it will always be attached to the <body>\n            element.parentElement.removeChild(element);\n        }\n    }\n    say(message) {\n        const element = getLiveElement(this._document, true);\n        const delay = this._delay;\n        if (element != null) {\n            element.textContent = '';\n            const setText = () => (element.textContent = message);\n            if (delay === null) {\n                setText();\n            }\n            else {\n                setTimeout(setText, delay);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: Live, deps: [{ token: DOCUMENT }, { token: ARIA_LIVE_DELAY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: Live, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: Live, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ARIA_LIVE_DELAY]\n                }] }]; } });\n\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    constructor(_elementRef, viewContainerRef, _renderer, injector, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._live = _live;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        this._subscription = null;\n        this._closed$ = new Subject();\n        this._inputValueBackup = null;\n        this._inputValueForSelectOnExact = null;\n        this._windowRef = null;\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * @since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * The preferred placement of the typeahead, among the [possible values](#/guides/positioning#api).\n         *\n         * The default order of preference is `\"bottom-start bottom-end top-start top-end\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = 'bottom-start';\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.activeDescendant = null;\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = () => { };\n        this._onChange = (_) => { };\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.selectOnExact = config.selectOnExact;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this.popperOptions = config.popperOptions;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map(($event) => $event.target.value));\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, this._ngZone, applicationRef);\n        this._positioning = ngbPositioning();\n    }\n    ngOnInit() {\n        this._subscribeToUserInput();\n    }\n    ngOnChanges({ ngbTypeahead }) {\n        if (ngbTypeahead && !ngbTypeahead.firstChange) {\n            this._unsubscribeFromUserInput();\n            this._subscribeToUserInput();\n        }\n    }\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n    isPopupOpen() {\n        return this._windowRef != null;\n    }\n    handleBlur() {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    }\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        /* eslint-disable-next-line deprecation/deprecation */\n        switch (event.which) {\n            case Key.ArrowDown:\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case Key.ArrowUp:\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case Key.Enter:\n            case Key.Tab: {\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n            }\n        }\n    }\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            const { windowRef } = this._popupService.open();\n            this._windowRef = windowRef;\n            this._windowRef.setInput('id', this.popupId);\n            this._windowRef.setInput('popupClass', this.popupClass);\n            this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n            this._windowRef.instance.activeChangeEvent.subscribe((activeId) => (this.activeDescendant = activeId));\n            if (this.container === 'body') {\n                this._renderer.setStyle(this._windowRef.location.nativeElement, 'z-index', '1055');\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            // Setting up popper and scheduling updates when zone is stable\n            this._ngZone.runOutsideAngular(() => {\n                if (this._windowRef) {\n                    this._positioning.createPopper({\n                        hostElement: this._elementRef.nativeElement,\n                        targetElement: this._windowRef.location.nativeElement,\n                        placement: this.placement,\n                        appendToBody: this.container === 'body',\n                        updatePopperOptions: (options) => this.popperOptions(addPopperOffset([0, 2])(options)),\n                    });\n                    this._zoneSubscription = this._ngZone.onStable.subscribe(() => this._positioning.update());\n                }\n            });\n            ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [\n                this._elementRef.nativeElement,\n                this._windowRef.location.nativeElement,\n            ]);\n        }\n    }\n    _closePopup() {\n        this._popupService.close().subscribe(() => {\n            this._positioning.destroy();\n            this._zoneSubscription?.unsubscribe();\n            this._closed$.next();\n            this._windowRef = null;\n            this.activeDescendant = null;\n        });\n    }\n    _selectResult(result) {\n        let defaultPrevented = false;\n        this.selectItem.emit({\n            item: result,\n            preventDefault: () => {\n                defaultPrevented = true;\n            },\n        });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    _showHint() {\n        if (this.showHint && this._windowRef?.instance.hasActive() && this._inputValueBackup != null) {\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substring(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substring(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [\n                    this._inputValueBackup.length,\n                    formattedVal.length,\n                ]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    _writeInputValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n    _subscribeToUserInput() {\n        const results$ = this._valueChanges.pipe(tap((value) => {\n            this._inputValueBackup = this.showHint ? value : null;\n            this._inputValueForSelectOnExact = this.selectOnExact ? value : null;\n            this._onChange(this.editable ? value : undefined);\n        }), this.ngbTypeahead ? this.ngbTypeahead : () => of([]));\n        this._subscription = this._resubscribeTypeahead.pipe(switchMap(() => results$)).subscribe((results) => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                // when there is only one result and this matches the input value\n                if (this.selectOnExact &&\n                    results.length === 1 &&\n                    this._formatItemForInput(results[0]) === this._inputValueForSelectOnExact) {\n                    this._selectResult(results[0]);\n                    this._closePopup();\n                }\n                else {\n                    this._openPopup();\n                    this._windowRef.instance.focusFirst = this.focusFirst;\n                    this._windowRef.instance.results = results;\n                    this._windowRef.instance.term = this._elementRef.nativeElement.value;\n                    if (this.resultFormatter) {\n                        this._windowRef.instance.formatter = this.resultFormatter;\n                    }\n                    if (this.resultTemplate) {\n                        this._windowRef.instance.resultTemplate = this.resultTemplate;\n                    }\n                    this._windowRef.instance.resetActive();\n                    // The observable stream we are subscribing to might have async steps\n                    // and if a component containing typeahead is using the OnPush strategy\n                    // the change detection turn wouldn't be invoked automatically.\n                    this._windowRef.changeDetectorRef.detectChanges();\n                    this._showHint();\n                }\n            }\n            // live announcer\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        });\n    }\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeahead, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }, { token: i0.Injector }, { token: NgbTypeaheadConfig }, { token: i0.NgZone }, { token: Live }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i0.ApplicationRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbTypeahead, isStandalone: true, selector: \"input[ngbTypeahead]\", inputs: { autocomplete: \"autocomplete\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\", selectOnExact: \"selectOnExact\", showHint: \"showHint\", placement: \"placement\", popperOptions: \"popperOptions\", popupClass: \"popupClass\" }, outputs: { selectItem: \"selectItem\" }, host: { attributes: { \"autocapitalize\": \"off\", \"autocorrect\": \"off\", \"role\": \"combobox\" }, listeners: { \"blur\": \"handleBlur()\", \"keydown\": \"handleKeyDown($event)\" }, properties: { \"class.open\": \"isPopupOpen()\", \"autocomplete\": \"autocomplete\", \"attr.aria-autocomplete\": \"showHint ? \\\"both\\\" : \\\"list\\\"\", \"attr.aria-activedescendant\": \"activeDescendant\", \"attr.aria-owns\": \"isPopupOpen() ? popupId : null\", \"attr.aria-expanded\": \"isPopupOpen()\" } }, providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }], exportAs: [\"ngbTypeahead\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeahead, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[ngbTypeahead]',\n                    exportAs: 'ngbTypeahead',\n                    standalone: true,\n                    host: {\n                        '(blur)': 'handleBlur()',\n                        '[class.open]': 'isPopupOpen()',\n                        '(keydown)': 'handleKeyDown($event)',\n                        '[autocomplete]': 'autocomplete',\n                        autocapitalize: 'off',\n                        autocorrect: 'off',\n                        role: 'combobox',\n                        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                        '[attr.aria-activedescendant]': 'activeDescendant',\n                        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                        '[attr.aria-expanded]': 'isPopupOpen()',\n                    },\n                    providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgbTypeahead), multi: true }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }, { type: i0.Injector }, { type: NgbTypeaheadConfig }, { type: i0.NgZone }, { type: Live }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i0.ApplicationRef }]; }, propDecorators: { autocomplete: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], focusFirst: [{\n                type: Input\n            }], inputFormatter: [{\n                type: Input\n            }], ngbTypeahead: [{\n                type: Input\n            }], resultFormatter: [{\n                type: Input\n            }], resultTemplate: [{\n                type: Input\n            }], selectOnExact: [{\n                type: Input\n            }], showHint: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], popperOptions: [{\n                type: Input\n            }], popupClass: [{\n                type: Input\n            }], selectItem: [{\n                type: Output\n            }] } });\n\nclass NgbTypeaheadModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadModule, imports: [NgbHighlight, NgbTypeahead], exports: [NgbHighlight, NgbTypeahead] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbTypeaheadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NgbHighlight, NgbTypeahead],\n                    exports: [NgbHighlight, NgbTypeahead],\n                }]\n        }] });\n\n/**\n * A reference to the currently opened (active) offcanvas.\n *\n * Instances of this class can be injected into your component passed as offcanvas content.\n * So you can `.close()` or `.dismiss()` the offcanvas window from your component.\n *\n * @since 12.1.0\n */\nclass NgbActiveOffcanvas {\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be resolved with the provided value.\n     */\n    close(result) { }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened offcanvas returned by the `NgbOffcanvas.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasRef {\n    /**\n     * The instance of a component used for the offcanvas content.\n     *\n     * When a `TemplateRef` is used as the content or when the offcanvas is closed, will return `undefined`.\n     */\n    get componentInstance() {\n        if (this._contentRef && this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * The observable that emits when the offcanvas is closed via the `.close()` method.\n     *\n     * It will emit the result passed to the `.close()` method.\n     */\n    get closed() {\n        return this._closed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when the offcanvas is dismissed via the `.dismiss()` method.\n     *\n     * It will emit the reason passed to the `.dismissed()` method by the user, or one of the internal\n     * reasons like backdrop click or ESC key press.\n     */\n    get dismissed() {\n        return this._dismissed.asObservable().pipe(takeUntil(this._hidden));\n    }\n    /**\n     * The observable that emits when both offcanvas window and backdrop are closed and animations were finished.\n     * At this point offcanvas and backdrop elements will be removed from the DOM tree.\n     *\n     * This observable will be completed after emitting.\n     */\n    get hidden() {\n        return this._hidden.asObservable();\n    }\n    /**\n     * The observable that emits when offcanvas is fully visible and animation was finished.\n     * The offcanvas DOM element is always available synchronously after calling 'offcanvas.open()' service.\n     *\n     * This observable will be completed after emitting.\n     * It will not emit, if offcanvas is closed before open animation is finished.\n     */\n    get shown() {\n        return this._panelCmptRef.instance.shown.asObservable();\n    }\n    constructor(_panelCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._panelCmptRef = _panelCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        this._closed = new Subject();\n        this._dismissed = new Subject();\n        this._hidden = new Subject();\n        _panelCmptRef.instance.dismissEvent.subscribe((reason) => {\n            this.dismiss(reason);\n        });\n        if (_backdropCmptRef) {\n            _backdropCmptRef.instance.dismissEvent.subscribe((reason) => {\n                this.dismiss(reason);\n            });\n        }\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * Closes the offcanvas with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    close(result) {\n        if (this._panelCmptRef) {\n            this._closed.next(result);\n            this._resolve(result);\n            this._removeOffcanvasElements();\n        }\n    }\n    _dismiss(reason) {\n        this._dismissed.next(reason);\n        this._reject(reason);\n        this._removeOffcanvasElements();\n    }\n    /**\n     * Dismisses the offcanvas with an optional `reason` value.\n     *\n     * The `NgbOffcanvasRef.result` promise will be rejected with the provided value.\n     */\n    dismiss(reason) {\n        if (this._panelCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                const dismiss = this._beforeDismiss();\n                if (isPromise(dismiss)) {\n                    dismiss.then((result) => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    _removeOffcanvasElements() {\n        const panelTransition$ = this._panelCmptRef.instance.hide();\n        const backdropTransition$ = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : of(undefined);\n        // hiding panel\n        panelTransition$.subscribe(() => {\n            const { nativeElement } = this._panelCmptRef.location;\n            nativeElement.parentNode.removeChild(nativeElement);\n            this._panelCmptRef.destroy();\n            if (this._contentRef && this._contentRef.viewRef) {\n                this._contentRef.viewRef.destroy();\n            }\n            this._panelCmptRef = null;\n            this._contentRef = null;\n        });\n        // hiding backdrop\n        backdropTransition$.subscribe(() => {\n            if (this._backdropCmptRef) {\n                const { nativeElement } = this._backdropCmptRef.location;\n                nativeElement.parentNode.removeChild(nativeElement);\n                this._backdropCmptRef.destroy();\n                this._backdropCmptRef = null;\n            }\n        });\n        // all done\n        zip(panelTransition$, backdropTransition$).subscribe(() => {\n            this._hidden.next();\n            this._hidden.complete();\n        });\n    }\n}\n\nvar OffcanvasDismissReasons;\n(function (OffcanvasDismissReasons) {\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n    OffcanvasDismissReasons[OffcanvasDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(OffcanvasDismissReasons || (OffcanvasDismissReasons = {}));\n\nclass NgbOffcanvasBackdrop {\n    constructor(_el, _zone) {\n        this._el = _el;\n        this._zone = _zone;\n        this.dismissEvent = new EventEmitter();\n    }\n    ngOnInit() {\n        this._zone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            ngbRunTransition(this._zone, this._el.nativeElement, (element, animation) => {\n                if (animation) {\n                    reflow(element);\n                }\n                element.classList.add('show');\n            }, { animation: this.animation, runningTransition: 'continue' });\n        });\n    }\n    hide() {\n        return ngbRunTransition(this._zone, this._el.nativeElement, ({ classList }) => classList.remove('show'), {\n            animation: this.animation,\n            runningTransition: 'stop',\n        });\n    }\n    dismiss() {\n        if (!this.static) {\n            this.dismissEvent.emit(OffcanvasDismissReasons.BACKDROP_CLICK);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasBackdrop, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbOffcanvasBackdrop, isStandalone: true, selector: \"ngb-offcanvas-backdrop\", inputs: { animation: \"animation\", backdropClass: \"backdropClass\", static: \"static\" }, outputs: { dismissEvent: \"dismiss\" }, host: { listeners: { \"mousedown\": \"dismiss()\" }, properties: { \"class\": \"\\\"offcanvas-backdrop\\\" + (backdropClass ? \\\" \\\" + backdropClass : \\\"\\\")\", \"class.show\": \"!animation\", \"class.fade\": \"animation\" } }, ngImport: i0, template: '', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngb-offcanvas-backdrop',\n                    standalone: true,\n                    encapsulation: ViewEncapsulation.None,\n                    template: '',\n                    host: {\n                        '[class]': '\"offcanvas-backdrop\" + (backdropClass ? \" \" + backdropClass : \"\")',\n                        '[class.show]': '!animation',\n                        '[class.fade]': 'animation',\n                        '(mousedown)': 'dismiss()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], backdropClass: [{\n                type: Input\n            }], static: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasPanel {\n    constructor(_document, _elRef, _zone) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this._zone = _zone;\n        this._closed$ = new Subject();\n        this._elWithFocus = null; // element that is focused prior to offcanvas opening\n        this.keyboard = true;\n        this.position = 'start';\n        this.dismissEvent = new EventEmitter();\n        this.shown = new Subject();\n        this.hidden = new Subject();\n    }\n    dismiss(reason) {\n        this.dismissEvent.emit(reason);\n    }\n    ngOnInit() {\n        this._elWithFocus = this._document.activeElement;\n        this._zone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._show();\n        });\n    }\n    ngOnDestroy() {\n        this._disableEventHandling();\n    }\n    hide() {\n        const { nativeElement } = this._elRef;\n        const context = { animation: this.animation, runningTransition: 'stop' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element) => {\n            nativeElement.classList.remove('showing');\n            nativeElement.classList.add('hiding');\n            return () => nativeElement.classList.remove('show', 'hiding');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.hidden.next();\n            this.hidden.complete();\n        });\n        this._disableEventHandling();\n        this._restoreFocus();\n        return offcanvasTransition$;\n    }\n    _show() {\n        const context = { animation: this.animation, runningTransition: 'continue' };\n        const offcanvasTransition$ = ngbRunTransition(this._zone, this._elRef.nativeElement, (element, animation) => {\n            if (animation) {\n                reflow(element);\n            }\n            element.classList.add('show', 'showing');\n            return () => element.classList.remove('showing');\n        }, context);\n        offcanvasTransition$.subscribe(() => {\n            this.shown.next();\n            this.shown.complete();\n        });\n        this._enableEventHandling();\n        this._setFocus();\n    }\n    _enableEventHandling() {\n        const { nativeElement } = this._elRef;\n        this._zone.runOutsideAngular(() => {\n            fromEvent(nativeElement, 'keydown')\n                .pipe(takeUntil(this._closed$), \n            /* eslint-disable-next-line deprecation/deprecation */\n            filter((e) => e.which === Key.Escape))\n                .subscribe((event) => {\n                if (this.keyboard) {\n                    requestAnimationFrame(() => {\n                        if (!event.defaultPrevented) {\n                            this._zone.run(() => this.dismiss(OffcanvasDismissReasons.ESC));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    _disableEventHandling() {\n        this._closed$.next();\n    }\n    _setFocus() {\n        const { nativeElement } = this._elRef;\n        if (!nativeElement.contains(document.activeElement)) {\n            const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`);\n            const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n            const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    _restoreFocus() {\n        const body = this._document.body;\n        const elWithFocus = this._elWithFocus;\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        this._zone.runOutsideAngular(() => {\n            setTimeout(() => elementToFocus.focus());\n            this._elWithFocus = null;\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasPanel, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.6\", type: NgbOffcanvasPanel, isStandalone: true, selector: \"ngb-offcanvas-panel\", inputs: { animation: \"animation\", ariaLabelledBy: \"ariaLabelledBy\", ariaDescribedBy: \"ariaDescribedBy\", keyboard: \"keyboard\", panelClass: \"panelClass\", position: \"position\" }, outputs: { dismissEvent: \"dismiss\" }, host: { attributes: { \"role\": \"dialog\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"offcanvas offcanvas-\\\" + position  + (panelClass ? \\\" \\\" + panelClass : \\\"\\\")\", \"attr.aria-modal\": \"true\", \"attr.aria-labelledby\": \"ariaLabelledBy\", \"attr.aria-describedby\": \"ariaDescribedBy\" } }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngb-offcanvas-panel', standalone: true, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, host: {\n                        '[class]': '\"offcanvas offcanvas-\" + position  + (panelClass ? \" \" + panelClass : \"\")',\n                        role: 'dialog',\n                        tabindex: '-1',\n                        '[attr.aria-modal]': 'true',\n                        '[attr.aria-labelledby]': 'ariaLabelledBy',\n                        '[attr.aria-describedby]': 'ariaDescribedBy',\n                    } }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { animation: [{\n                type: Input\n            }], ariaLabelledBy: [{\n                type: Input\n            }], ariaDescribedBy: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], panelClass: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], dismissEvent: [{\n                type: Output,\n                args: ['dismiss']\n            }] } });\n\nclass NgbOffcanvasStack {\n    constructor(_applicationRef, _injector, _document, _scrollBar, _ngZone) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._ngZone = _ngZone;\n        this._activePanelCmptHasChanged = new Subject();\n        this._scrollBarRestoreFn = null;\n        this._backdropAttributes = ['animation', 'backdropClass'];\n        this._panelAttributes = ['animation', 'ariaDescribedBy', 'ariaLabelledBy', 'keyboard', 'panelClass', 'position'];\n        this._activeInstance = new EventEmitter();\n        // Trap focus on active PanelCmpt\n        this._activePanelCmptHasChanged.subscribe(() => {\n            if (this._panelCmpt) {\n                ngbFocusTrap(this._ngZone, this._panelCmpt.location.nativeElement, this._activePanelCmptHasChanged);\n            }\n        });\n    }\n    _restoreScrollBar() {\n        const scrollBarRestoreFn = this._scrollBarRestoreFn;\n        if (scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = null;\n            scrollBarRestoreFn();\n        }\n    }\n    _hideScrollBar() {\n        if (!this._scrollBarRestoreFn) {\n            this._scrollBarRestoreFn = this._scrollBar.hide();\n        }\n    }\n    open(contentInjector, content, options) {\n        const containerEl = options.container instanceof HTMLElement\n            ? options.container\n            : isDefined(options.container)\n                ? this._document.querySelector(options.container)\n                : this._document.body;\n        if (!containerEl) {\n            throw new Error(`The specified offcanvas container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        if (!options.scroll) {\n            this._hideScrollBar();\n        }\n        const activeOffcanvas = new NgbActiveOffcanvas();\n        const contentRef = this._getContentRef(options.injector || contentInjector, content, activeOffcanvas);\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(containerEl) : undefined;\n        let panelCmptRef = this._attachWindowComponent(containerEl, contentRef.nodes);\n        let ngbOffcanvasRef = new NgbOffcanvasRef(panelCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerOffcanvasRef(ngbOffcanvasRef);\n        this._registerPanelCmpt(panelCmptRef);\n        ngbOffcanvasRef.hidden.pipe(finalize(() => this._restoreScrollBar())).subscribe();\n        activeOffcanvas.close = (result) => {\n            ngbOffcanvasRef.close(result);\n        };\n        activeOffcanvas.dismiss = (reason) => {\n            ngbOffcanvasRef.dismiss(reason);\n        };\n        this._applyPanelOptions(panelCmptRef.instance, options);\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n            backdropCmptRef.changeDetectorRef.detectChanges();\n        }\n        panelCmptRef.changeDetectorRef.detectChanges();\n        return ngbOffcanvasRef;\n    }\n    get activeInstance() {\n        return this._activeInstance;\n    }\n    dismiss(reason) {\n        this._offcanvasRef?.dismiss(reason);\n    }\n    hasOpenOffcanvas() {\n        return !!this._offcanvasRef;\n    }\n    _attachBackdrop(containerEl) {\n        let backdropCmptRef = createComponent(NgbOffcanvasBackdrop, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n        });\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    _attachWindowComponent(containerEl, projectableNodes) {\n        let panelCmptRef = createComponent(NgbOffcanvasPanel, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector: this._injector,\n            projectableNodes,\n        });\n        this._applicationRef.attachView(panelCmptRef.hostView);\n        containerEl.appendChild(panelCmptRef.location.nativeElement);\n        return panelCmptRef;\n    }\n    _applyPanelOptions(windowInstance, options) {\n        this._panelAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n        backdropInstance.static = options.backdrop === 'static';\n    }\n    _getContentRef(contentInjector, content, activeOffcanvas) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeOffcanvas);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(contentInjector, content, activeOffcanvas);\n        }\n    }\n    _createFromTemplateRef(templateRef, activeOffcanvas) {\n        const context = {\n            $implicit: activeOffcanvas,\n            close(result) {\n                activeOffcanvas.close(result);\n            },\n            dismiss(reason) {\n                activeOffcanvas.dismiss(reason);\n            },\n        };\n        const viewRef = templateRef.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    _createFromString(content) {\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    _createFromComponent(contentInjector, componentType, context) {\n        const elementInjector = Injector.create({\n            providers: [{ provide: NgbActiveOffcanvas, useValue: context }],\n            parent: contentInjector,\n        });\n        const componentRef = createComponent(componentType, {\n            environmentInjector: this._applicationRef.injector,\n            elementInjector,\n        });\n        const componentNativeEl = componentRef.location.nativeElement;\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    _registerOffcanvasRef(ngbOffcanvasRef) {\n        const unregisterOffcanvasRef = () => {\n            this._offcanvasRef = undefined;\n            this._activeInstance.emit(this._offcanvasRef);\n        };\n        this._offcanvasRef = ngbOffcanvasRef;\n        this._activeInstance.emit(this._offcanvasRef);\n        ngbOffcanvasRef.result.then(unregisterOffcanvasRef, unregisterOffcanvasRef);\n    }\n    _registerPanelCmpt(ngbPanelCmpt) {\n        this._panelCmpt = ngbPanelCmpt;\n        this._activePanelCmptHasChanged.next();\n        ngbPanelCmpt.onDestroy(() => {\n            this._panelCmpt = undefined;\n            this._activePanelCmptHasChanged.next();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasStack, deps: [{ token: i0.ApplicationRef }, { token: i0.Injector }, { token: DOCUMENT }, { token: ScrollBar }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasStack, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasStack, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ApplicationRef }, { type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: ScrollBar }, { type: i0.NgZone }]; } });\n\n/**\n * A configuration service for the [`NgbOffcanvas`](#/components/offcanvas/api#NgbOffcanvas) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all offcanvases used in the application.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvasConfig {\n    constructor(_ngbConfig) {\n        this._ngbConfig = _ngbConfig;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.position = 'start';\n        this.scroll = false;\n    }\n    get animation() {\n        return this._animation === undefined ? this._ngbConfig.animation : this._animation;\n    }\n    set animation(animation) {\n        this._animation = animation;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasConfig, deps: [{ token: NgbConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: NgbConfig }]; } });\n\n/**\n * A service for opening an offcanvas.\n *\n * Creating an offcanvas is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n *\n * @since 12.1.0\n */\nclass NgbOffcanvas {\n    constructor(_injector, _offcanvasStack, _config) {\n        this._injector = _injector;\n        this._offcanvasStack = _offcanvasStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new offcanvas panel with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveOffcanvas` class. You can then\n     * use `NgbActiveOffcanvas` methods to close / dismiss offcanvas from \"inside\" of your component.\n     *\n     * Also see the [`NgbOffcanvasOptions`](#/components/offcanvas/api#NgbOffcanvasOptions) for the list of supported\n     * options.\n     */\n    open(content, options = {}) {\n        const combinedOptions = { ...this._config, animation: this._config.animation, ...options };\n        return this._offcanvasStack.open(this._injector, content, combinedOptions);\n    }\n    /**\n     * Returns an observable that holds the active offcanvas instance.\n     */\n    get activeInstance() {\n        return this._offcanvasStack.activeInstance;\n    }\n    /**\n     * Dismisses the currently displayed offcanvas with the supplied reason.\n     */\n    dismiss(reason) {\n        this._offcanvasStack.dismiss(reason);\n    }\n    /**\n     * Indicates if there is currently an open offcanvas in the application.\n     */\n    hasOpenOffcanvas() {\n        return this._offcanvasStack.hasOpenOffcanvas();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvas, deps: [{ token: i0.Injector }, { token: NgbOffcanvasStack }, { token: NgbOffcanvasConfig }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvas, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvas, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: NgbOffcanvasStack }, { type: NgbOffcanvasConfig }]; } });\n\nclass NgbOffcanvasModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbOffcanvasModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nconst NGB_MODULES = [\n    NgbAccordionModule,\n    NgbAlertModule,\n    NgbCarouselModule,\n    NgbCollapseModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbModalModule,\n    NgbNavModule,\n    NgbOffcanvasModule,\n    NgbPaginationModule,\n    NgbPopoverModule,\n    NgbProgressbarModule,\n    NgbRatingModule,\n    NgbScrollSpyModule,\n    NgbTimepickerModule,\n    NgbToastModule,\n    NgbTooltipModule,\n    NgbTypeaheadModule,\n];\nclass NgbModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModule, imports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule], exports: [NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModule, imports: [NGB_MODULES, NgbAccordionModule,\n            NgbAlertModule,\n            NgbCarouselModule,\n            NgbCollapseModule,\n            NgbDatepickerModule,\n            NgbDropdownModule,\n            NgbModalModule,\n            NgbNavModule,\n            NgbOffcanvasModule,\n            NgbPaginationModule,\n            NgbPopoverModule,\n            NgbProgressbarModule,\n            NgbRatingModule,\n            NgbScrollSpyModule,\n            NgbTimepickerModule,\n            NgbToastModule,\n            NgbTooltipModule,\n            NgbTypeaheadModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.6\", ngImport: i0, type: NgbModule, decorators: [{\n            type: NgModule,\n            args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionBody, NgbAccordionButton, NgbAccordionCollapse, NgbAccordionConfig, NgbAccordionDirective, NgbAccordionHeader, NgbAccordionItem, NgbAccordionModule, NgbAccordionToggle, NgbActiveModal, NgbActiveOffcanvas, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbCalendar, NgbCalendarBuddhist, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCollapse, NgbCollapseConfig, NgbCollapseModule, NgbConfig, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDateStructAdapter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nDefault, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavItemRole, NgbNavLink, NgbNavLinkBase, NgbNavLinkButton, NgbNavModule, NgbNavOutlet, NgbNavPane, NgbNavbar, NgbOffcanvas, NgbOffcanvasConfig, NgbOffcanvasModule, NgbOffcanvasRef, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPages, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRating, NgbRatingConfig, NgbRatingModule, NgbScrollSpy, NgbScrollSpyConfig, NgbScrollSpyFragment, NgbScrollSpyItem, NgbScrollSpyMenu, NgbScrollSpyModule, NgbScrollSpyService, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, OffcanvasDismissReasons };\n"],"mappings":"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AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAnHmB,CAAD;EAFqG,CAAD,CAAtH,EAuH4B,YAAY;IAAE,OAAO,CAAC;MAAEtF,IAAI,EAAEulC;IAAR,CAAD,CAAP;EAAyC,CAvHnF,EAuHqG;IAAEmC,WAAW,EAAE,CAAC;MACrG1nC,IAAI,EAAE5K,YAD+F;MAErG6K,IAAI,EAAE,CAAC4lC,qBAAD,EAAwB;QAAEx+B,MAAM,EAAE;MAAV,CAAxB;IAF+F,CAAD,CAAf;IAGrFsgC,QAAQ,EAAE,CAAC;MACX3nC,IAAI,EAAE5K,YADK;MAEX6K,IAAI,EAAE,CAAC6lC,kBAAD,EAAqB;QAAEz+B,MAAM,EAAE;MAAV,CAArB;IAFK,CAAD,CAH2E;IAMrFugC,OAAO,EAAE,CAAC;MACV5nC,IAAI,EAAE5K,YADI;MAEV6K,IAAI,EAAE,CAAC8lC,iBAAD,EAAoB;QAAE1+B,MAAM,EAAE;MAAV,CAApB;IAFI,CAAD,CAN4E;IASrFwgC,OAAO,EAAE,CAAC;MACV7nC,IAAI,EAAE5K,YADI;MAEV6K,IAAI,EAAE,CAAC+lC,iBAAD,EAAoB;QAAE3+B,MAAM,EAAE;MAAV,CAApB;IAFI,CAAD,CAT4E;IAYrFygC,SAAS,EAAE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"},"metadata":{},"sourceType":"module"}