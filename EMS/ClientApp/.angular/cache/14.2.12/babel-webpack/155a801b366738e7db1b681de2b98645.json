{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.apiToken = \"\";\n    }\n\n    createHeaders() {\n      const token = this.getTokenFromCookie();\n      return new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      });\n    }\n\n    getTokenFromCookie() {\n      var _a;\n\n      return ((_a = document.cookie.split('; ').find(cookie => cookie.startsWith('auth_token='))) === null || _a === void 0 ? void 0 : _a.split('=')[1]) || '';\n    }\n\n    get(endpoint) {\n      const headers = this.createHeaders();\n      return this.http.get(`${this.baseUrl}${endpoint}`, {\n        headers\n      });\n    }\n\n    post(endpoint, data) {\n      const headers = this.createHeaders();\n      return this.http.post(`${this.baseUrl}${endpoint}`, data, {\n        headers\n      });\n    }\n\n    put(endpoint, data) {\n      const headers = this.createHeaders();\n      return this.http.put(`${this.baseUrl}${endpoint}`, data, {\n        headers\n      });\n    }\n\n    delete(endpoint) {\n      const headers = this.createHeaders();\n      return this.http.delete(`${this.baseUrl}${endpoint}`, {\n        headers\n      });\n    }\n\n  }\n\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}